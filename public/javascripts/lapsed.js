var lapsed =
webpackJsonp_name_([0],[
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';var _docContext=__webpack_require__(1);var _docContext2=_interopRequireDefault(_docContext);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var ReactDOM=__webpack_require__(4);var _require=__webpack_require__(5),BrowserRouter=_require.BrowserRouter;var Doc=__webpack_require__(49);initData=JSON.parse(initData);userData=JSON.parse(userData);// сохраним базовые данные в памети
	_docContext2.default.setInitData=initData;_docContext2.default.setUserData=userData;_docContext2.default.setModule='lapsed';_docContext2.default.setPageName='Laste register';ReactDOM.hydrate(React.createElement(BrowserRouter,null,React.createElement(Doc,{initData:initData,userData:userData,module:'lapsed'})),document.getElementById('doc'));

/***/ }),
/* 1 */,
/* 2 */,
/* 3 */,
/* 4 */,
/* 5 */,
/* 6 */,
/* 7 */,
/* 8 */,
/* 9 */,
/* 10 */,
/* 11 */,
/* 12 */,
/* 13 */,
/* 14 */,
/* 15 */,
/* 16 */,
/* 17 */,
/* 18 */,
/* 19 */,
/* 20 */,
/* 21 */,
/* 22 */,
/* 23 */,
/* 24 */,
/* 25 */,
/* 26 */,
/* 27 */,
/* 28 */,
/* 29 */,
/* 30 */,
/* 31 */,
/* 32 */,
/* 33 */,
/* 34 */,
/* 35 */,
/* 36 */,
/* 37 */,
/* 38 */,
/* 39 */,
/* 40 */,
/* 41 */,
/* 42 */,
/* 43 */,
/* 44 */,
/* 45 */,
/* 46 */,
/* 47 */,
/* 48 */,
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(10);

	var Menu = __webpack_require__(50);
	var JournalDocument = __webpack_require__(196);

	var LapseDokument = __webpack_require__(231);
	var LasteRegister = __webpack_require__(234);

	var LasteTeenustRegister = __webpack_require__(248);
	var LapseKaartDokument = __webpack_require__(250);

	var LasteTaabelRegister = __webpack_require__(256);
	var LapseTaabelDokument = __webpack_require__(259);

	var PaevaTaabelRegister = __webpack_require__(261);
	var PaevaTaabelDokument = __webpack_require__(263);

	var VanemDokument = __webpack_require__(265);
	var VanemateRegister = __webpack_require__(267);

	var ArvedeRegister = __webpack_require__(269);
	var ArveDocument = __webpack_require__(273);

	var SmkRegister = __webpack_require__(276);
	var SmkDocument = __webpack_require__(279);
	var VmkRegister = __webpack_require__(284);
	var VmkDocument = __webpack_require__(286);

	var SorderideRegister = __webpack_require__(288);
	var SorderDocument = __webpack_require__(290);

	var NomRegister = __webpack_require__(292),
	    NomDocument = __webpack_require__(294);

	var TunnusRegister = __webpack_require__(296),
	    TunnusDocument = __webpack_require__(298);

	var AsutusRegister = __webpack_require__(300),
	    AsutusDocument = __webpack_require__(302);

	var LapseGruppRegister = __webpack_require__(304),
	    LapseGruppDocument = __webpack_require__(306);

	var TeatisRegister = __webpack_require__(308),
	    TeatisDocument = __webpack_require__(310);

	var AsutuseLiikRegister = __webpack_require__(312),
	    AsutuseLiikDocument = __webpack_require__(314);

	var KoolituseTyypRegister = __webpack_require__(316),
	    KoolituseTyypDocument = __webpack_require__(318);

	var KoolituseLiikRegister = __webpack_require__(320),
	    KoolituseLiikDocument = __webpack_require__(322);

	var PankVVRegister = __webpack_require__(324);
	var PankVVDocument = __webpack_require__(326);
	var ViitenrDocument = __webpack_require__(328);

	var ConfigDocument = __webpack_require__(330);
	var RekvDocument = __webpack_require__(332);
	var DokpropsDocument = __webpack_require__(334);
	var UserDocument = __webpack_require__(336);
	var EmailDocument = __webpack_require__(338);

	var Inf3Report = __webpack_require__(340);
	var ChildSummaryReport = __webpack_require__(342);
	var ArvedKoodiJargiReport = __webpack_require__(344);
	var SaldoJaKaiveReport = __webpack_require__(346);
	var SaldoJaKaibeAndmik = __webpack_require__(348);
	var KaiveAruanne = __webpack_require__(350);
	var KaiveAruanneKokku = __webpack_require__(352);
	var SentDocsReport = __webpack_require__(354);
	var ChildAgeReport = __webpack_require__(356);
	var SoodustusedReport = __webpack_require__(358);
	var StatistikaReport = __webpack_require__(360);
	var EbatoenaolisedReport = __webpack_require__(362);
	var KondArveReport = __webpack_require__(364);
	var AastaNaitajadReport = __webpack_require__(366);
	var KuuTaabel = __webpack_require__(368);
	var YksuseTaabel = __webpack_require__(370);
	var KohalolekuAruanne = __webpack_require__(372);
	var Topeltmaksud = __webpack_require__(374);
	var Kuutabeli_aruanne = __webpack_require__(376);

	var _require = __webpack_require__(5),
	    Route = _require.Route,
	    Redirect = _require.Redirect;

	var _require2 = __webpack_require__(91),
	    StyleRoot = _require2.StyleRoot;

	var MODULE = 'Lapsed';
	var DocContext = __webpack_require__(1);

	var App = function (_React$Component) {
	    _inherits(App, _React$Component);

	    function App(props) {
	        _classCallCheck(this, App);

	        var _this = _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).call(this, props));

	        _this.prepareParamsForToolbar = _this.prepareParamsForToolbar.bind(_this);
	        _this.componets = {};
	        _this.prepareComponents(_this.componets);

	        return _this;
	    }

	    _createClass(App, [{
	        key: 'render',
	        value: function render(history) {
	            var _this2 = this;

	            return React.createElement(
	                StyleRoot,
	                null,
	                React.createElement(Route, { exact: true, path: '/lapsed',
	                    render: function render(props) {
	                        return React.createElement(LasteRegister, {
	                            history: props.history,
	                            initData: _this2.props.initData,
	                            module: MODULE });
	                    }
	                }),
	                React.createElement(Route, { exact: true, path: '/lapsed/laps',
	                    render: function render(props) {
	                        return React.createElement(LasteRegister, { history: props.history,
	                            initData: _this2.props.initData,
	                            handleRouting: _this2.handleRouting,
	                            module: MODULE });
	                    }
	                }),
	                React.createElement(Route, { exact: true, path: '/lapsed/laps/:docId',
	                    render: function render(props) {
	                        return React.createElement(LapseDokument, _extends({}, props, {
	                            history: props.history
	                        }));
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/asutused',
	                    render: function render(props) {
	                        return React.createElement(AsutusRegister, {
	                            history: props.history,
	                            initData: _this2.props.initData,
	                            module: MODULE });
	                    }
	                }),
	                React.createElement(Route, { exact: true, path: '/lapsed/asutused/:docId',
	                    render: function render(props) {
	                        return React.createElement(AsutusDocument, _extends({}, props, { history: props.history }));
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/lapse_grupp',
	                    render: function render(props) {
	                        return React.createElement(LapseGruppRegister, {
	                            history: props.history,
	                            initData: _this2.props.initData,
	                            module: MODULE });
	                    }
	                }),
	                React.createElement(Route, { exact: true, path: '/lapsed/lapse_grupp/:docId',
	                    render: function render(props) {
	                        return React.createElement(LapseGruppDocument, _extends({}, props, { history: props.history }));
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/vanem',
	                    render: function render(props) {
	                        return React.createElement(VanemateRegister, { history: props.history,
	                            initData: _this2.props.initData,
	                            module: MODULE });
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/vanem/:docId',
	                    render: function render(props) {
	                        return React.createElement(VanemDokument, _extends({}, props, { history: props.history }));
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/lapse_kaart',
	                    render: function render(props) {
	                        return React.createElement(LasteTeenustRegister, { history: props.history,
	                            initData: props.initData,
	                            module: MODULE });
	                    }
	                }),
	                React.createElement(Route, { exact: true, path: '/lapsed/lapse_kaart/:docId', component: LapseKaartDokument }),
	                React.createElement(Route, { exact: true, path: '/lapsed/lapse_taabel',
	                    render: function render(props) {
	                        return React.createElement(LasteTaabelRegister, { history: props.history,
	                            initData: props.initData,
	                            module: MODULE });
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/lapse_taabel/:docId', component: LapseTaabelDokument }),
	                React.createElement(Route, { exact: true, path: '/lapsed/paeva_taabel',
	                    render: function render(props) {
	                        return React.createElement(PaevaTaabelRegister, { history: props.history,
	                            initData: props.initData,
	                            module: MODULE });
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/paeva_taabel/:docId', component: PaevaTaabelDokument }),
	                React.createElement(Route, { exact: true, path: '/lapsed/arv',
	                    render: function render(props) {
	                        return React.createElement(ArvedeRegister, { history: props.history,
	                            initData: props.initData,
	                            module: MODULE });
	                    }
	                }),
	                React.createElement(Route, { exact: true, path: '/lapsed/arv/:docId',
	                    render: function render(props) {
	                        return React.createElement(ArveDocument, _extends({}, props, { history: props.history }));
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/journal/:docId',
	                    render: function render(props) {
	                        return React.createElement(JournalDocument, _extends({}, props, { history: props.history }));
	                    }
	                }),
	                React.createElement(Route, { exact: true, path: '/lapsed/smk',
	                    render: function render(props) {
	                        return React.createElement(SmkRegister, { history: props.history,
	                            initData: props.initData,
	                            module: MODULE });
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/smk/:docId',
	                    render: function render(props) {
	                        return React.createElement(SmkDocument, _extends({}, props, { history: props.history }));
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/vmk',
	                    render: function render(props) {
	                        return React.createElement(VmkRegister, { history: props.history,
	                            initData: props.initData,
	                            module: MODULE });
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/vmk/:docId',
	                    render: function render(props) {
	                        return React.createElement(VmkDocument, _extends({}, props, {
	                            history: props.history }));
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/sorder',
	                    render: function render(props) {
	                        return React.createElement(SorderideRegister, {
	                            history: props.history,
	                            initData: props.initData,
	                            module: MODULE });
	                    }
	                }),
	                React.createElement(Route, { exact: true, path: '/lapsed/sorder/:docId',
	                    render: function render(props) {
	                        return React.createElement(SorderDocument, _extends({}, props, { history: props.history }));
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/nomenclature',
	                    render: function render(props) {
	                        return React.createElement(NomRegister, { history: props.history,
	                            initData: props.initData,
	                            module: MODULE });
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/nomenclature/:docId',
	                    render: function render(props) {
	                        return React.createElement(NomDocument, _extends({}, props, {
	                            module: MODULE,
	                            history: props.history
	                        }));
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/tunnus/:docId', component: TunnusDocument }),
	                React.createElement(Route, { exact: true, path: '/lapsed/tunnus',
	                    render: function render(props) {
	                        return React.createElement(TunnusRegister, {
	                            module: MODULE,
	                            history: props.history,
	                            initData: props.initData });
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/teatis/:docId', component: TeatisDocument }),
	                React.createElement(Route, { exact: true, path: '/lapsed/teatis',
	                    render: function render(props) {
	                        return React.createElement(TeatisRegister, {
	                            module: MODULE,
	                            history: props.history,
	                            initData: props.initData });
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/pank_vv/:docId', component: PankVVDocument }),
	                React.createElement(Route, { exact: true, path: '/lapsed/pank_vv',
	                    render: function render(props) {
	                        return React.createElement(PankVVRegister, {
	                            module: MODULE,
	                            history: props.history,
	                            initData: _this2.props.initData });
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/config/:docId',
	                    render: function render(props) {
	                        return React.createElement(ConfigDocument, _extends({}, props, { history: props.history }));
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/config',
	                    render: function render() {
	                        return React.createElement(Redirect, { to: '/lapsed/config/' + DocContext.userData.asutusId });
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/e-mail/:docId',
	                    render: function render(props) {
	                        return React.createElement(EmailDocument, _extends({}, props, { history: props.history }));
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/e-mail',
	                    render: function render() {
	                        return React.createElement(Redirect, { to: '/lapsed/e-mail/0' });
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/rekv/:docId',
	                    render: function render(props) {
	                        return React.createElement(RekvDocument, _extends({}, props, { history: props.history }));
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/rekv',
	                    render: function render() {
	                        return React.createElement(Redirect, { to: '/lapsed/rekv/' + DocContext.userData.asutusId });
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/dokprops/:docId',
	                    render: function render(props) {
	                        return React.createElement(DokpropsDocument, _extends({}, props, { history: props.history }));
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/userid/:docId',
	                    render: function render(props) {
	                        return React.createElement(UserDocument, _extends({}, props, { history: props.history }));
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/userid/',
	                    render: function render() {
	                        return React.createElement(Redirect, { to: '/lapsed/userid/' + DocContext.userData.id });
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/inf3',
	                    render: function render(props) {
	                        return React.createElement(Inf3Report, {
	                            module: MODULE,
	                            history: props.history,
	                            initData: props.initData });
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/laps_kokkuvotte',
	                    render: function render(props) {
	                        return React.createElement(ChildSummaryReport, {
	                            module: MODULE,
	                            history: props.history,
	                            initData: props.initData });
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/arved_koodi_jargi',
	                    render: function render(props) {
	                        return React.createElement(ArvedKoodiJargiReport, {
	                            module: MODULE,
	                            history: props.history,
	                            initData: props.initData });
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/saldo_ja_kaive',
	                    render: function render(props) {
	                        return React.createElement(SaldoJaKaiveReport, {
	                            module: MODULE,
	                            history: props.history,
	                            initData: props.initData });
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/kaive_aruanne',
	                    render: function render(props) {
	                        return React.createElement(KaiveAruanne, {
	                            module: MODULE,
	                            history: props.history,
	                            initData: props.initData });
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/kaive_aruanne_kokku',
	                    render: function render(props) {
	                        return React.createElement(KaiveAruanneKokku, {
	                            module: MODULE,
	                            history: props.history,
	                            initData: props.initData });
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/saldo_ja_kaibeandmik',
	                    render: function render(props) {
	                        return React.createElement(SaldoJaKaibeAndmik, {
	                            module: MODULE,
	                            history: props.history,
	                            initData: props.initData });
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/sent_docs',
	                    render: function render(props) {
	                        return React.createElement(SentDocsReport, {
	                            module: MODULE,
	                            history: props.history,
	                            initData: props.initData });
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/child_age',
	                    render: function render(props) {
	                        return React.createElement(ChildAgeReport, {
	                            module: MODULE,
	                            history: props.history,
	                            initData: _this2.props.initData });
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/soodustused',
	                    render: function render(props) {
	                        return React.createElement(SoodustusedReport, {
	                            module: MODULE,
	                            history: props.history,
	                            initData: props.initData });
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/statistika',
	                    render: function render(props) {
	                        return React.createElement(StatistikaReport, {
	                            module: MODULE,
	                            history: props.history,
	                            initData: _this2.props.initData });
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/ebatoenaolised',
	                    render: function render(props) {
	                        return React.createElement(EbatoenaolisedReport, {
	                            module: MODULE,
	                            history: props.history,
	                            initData: props.initData });
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/kondarve',
	                    render: function render(props) {
	                        return React.createElement(KondArveReport, {
	                            module: MODULE,
	                            history: props.history,
	                            initData: props.initData });
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/aasta_naitajad',
	                    render: function render(props) {
	                        return React.createElement(AastaNaitajadReport, {
	                            module: MODULE,
	                            history: props.history,
	                            initData: props.initData });
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/kuu_taabel',
	                    render: function render(props) {
	                        return React.createElement(KuuTaabel, {
	                            module: MODULE,
	                            history: props.history,
	                            initData: _this2.props.initData });
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/yksuse_taabel',
	                    render: function render(props) {
	                        return React.createElement(YksuseTaabel, {
	                            module: MODULE,
	                            history: props.history,
	                            initData: _this2.props.initData });
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/kohaloleku_aruanne',
	                    render: function render(props) {
	                        return React.createElement(KohalolekuAruanne, {
	                            module: MODULE,
	                            history: props.history,
	                            initData: props.initData });
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/topeltmaksud',
	                    render: function render(props) {
	                        return React.createElement(Topeltmaksud, {
	                            module: MODULE,
	                            history: props.history,
	                            initData: props.initData });
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/kuutabeli_aruanne',
	                    render: function render(props) {
	                        return React.createElement(Kuutabeli_aruanne, {
	                            module: MODULE,
	                            history: props.history,
	                            initData: props.initData });
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/asutuse_liik',
	                    render: function render(props) {
	                        return React.createElement(AsutuseLiikRegister, {
	                            module: MODULE,
	                            history: props.history,
	                            initData: props.initData });
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/asutuse_liik/:docId',
	                    render: function render(props) {
	                        return React.createElement(AsutuseLiikDocument, _extends({}, props, {
	                            module: MODULE,
	                            history: props.history
	                        }));
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/koolituse_tyyp',
	                    render: function render(props) {
	                        return React.createElement(KoolituseTyypRegister, {
	                            module: MODULE,
	                            history: props.history,
	                            initData: props.initData });
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/koolituse_tyyp/:docId',
	                    render: function render(props) {
	                        return React.createElement(KoolituseTyypDocument, _extends({}, props, {
	                            module: MODULE,
	                            history: props.history
	                        }));
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/koolituse_liik',
	                    render: function render(props) {
	                        return React.createElement(KoolituseLiikRegister, {
	                            module: MODULE,
	                            history: props.history,
	                            initData: props.initData });
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/koolituse_Liik/:docId',
	                    render: function render(props) {
	                        return React.createElement(KoolituseLiikDocument, _extends({}, props, {
	                            module: MODULE,
	                            history: props.history
	                        }));
	                    } }),
	                React.createElement(Route, { exact: true, path: '/lapsed/viitenr/:docId',
	                    render: function render(props) {
	                        return React.createElement(ViitenrDocument, _extends({}, props, {
	                            module: MODULE,
	                            history: props.history
	                        }));
	                    } })
	            );
	        }
	    }, {
	        key: 'prepareParamsForToolbar',
	        value: function prepareParamsForToolbar() {
	            return {
	                btnStart: {
	                    show: true
	                },
	                btnLogin: {
	                    show: true,
	                    disabled: false
	                },
	                btnAccount: {
	                    show: true,
	                    disabled: false
	                }

	            };
	        }
	    }, {
	        key: 'prepareComponents',
	        value: function prepareComponents(components) {
	            return components['LapseDocument'] = function (props) {
	                var LapseDocument = __webpack_require__(231);
	                return React.createElement(LapseDocument, props);
	            };
	        }
	    }]);

	    return App;
	}(React.Component);

	module.exports = App;

/***/ }),
/* 50 */,
/* 51 */,
/* 52 */,
/* 53 */,
/* 54 */,
/* 55 */,
/* 56 */,
/* 57 */,
/* 58 */,
/* 59 */,
/* 60 */,
/* 61 */,
/* 62 */,
/* 63 */,
/* 64 */,
/* 65 */,
/* 66 */,
/* 67 */,
/* 68 */,
/* 69 */,
/* 70 */,
/* 71 */,
/* 72 */,
/* 73 */,
/* 74 */,
/* 75 */,
/* 76 */,
/* 77 */,
/* 78 */,
/* 79 */,
/* 80 */,
/* 81 */,
/* 82 */,
/* 83 */,
/* 84 */,
/* 85 */,
/* 86 */,
/* 87 */,
/* 88 */,
/* 89 */,
/* 90 */,
/* 91 */,
/* 92 */,
/* 93 */,
/* 94 */,
/* 95 */,
/* 96 */,
/* 97 */,
/* 98 */,
/* 99 */,
/* 100 */,
/* 101 */,
/* 102 */,
/* 103 */,
/* 104 */,
/* 105 */,
/* 106 */,
/* 107 */,
/* 108 */,
/* 109 */,
/* 110 */,
/* 111 */,
/* 112 */,
/* 113 */,
/* 114 */,
/* 115 */,
/* 116 */,
/* 117 */,
/* 118 */,
/* 119 */,
/* 120 */,
/* 121 */,
/* 122 */,
/* 123 */,
/* 124 */,
/* 125 */,
/* 126 */,
/* 127 */,
/* 128 */,
/* 129 */,
/* 130 */,
/* 131 */,
/* 132 */,
/* 133 */,
/* 134 */,
/* 135 */,
/* 136 */,
/* 137 */,
/* 138 */,
/* 139 */,
/* 140 */,
/* 141 */,
/* 142 */,
/* 143 */,
/* 144 */,
/* 145 */,
/* 146 */,
/* 147 */,
/* 148 */,
/* 149 */,
/* 150 */,
/* 151 */,
/* 152 */,
/* 153 */,
/* 154 */,
/* 155 */,
/* 156 */,
/* 157 */,
/* 158 */,
/* 159 */,
/* 160 */,
/* 161 */,
/* 162 */,
/* 163 */,
/* 164 */,
/* 165 */,
/* 166 */,
/* 167 */,
/* 168 */,
/* 169 */,
/* 170 */,
/* 171 */,
/* 172 */,
/* 173 */,
/* 174 */,
/* 175 */,
/* 176 */,
/* 177 */,
/* 178 */,
/* 179 */,
/* 180 */,
/* 181 */,
/* 182 */,
/* 183 */,
/* 184 */,
/* 185 */,
/* 186 */,
/* 187 */,
/* 188 */,
/* 189 */,
/* 190 */,
/* 191 */,
/* 192 */,
/* 193 */,
/* 194 */,
/* 195 */,
/* 196 */,
/* 197 */,
/* 198 */,
/* 199 */,
/* 200 */,
/* 201 */,
/* 202 */,
/* 203 */,
/* 204 */,
/* 205 */,
/* 206 */,
/* 207 */,
/* 208 */,
/* 209 */,
/* 210 */,
/* 211 */,
/* 212 */,
/* 213 */,
/* 214 */,
/* 215 */,
/* 216 */,
/* 217 */,
/* 218 */,
/* 219 */,
/* 220 */,
/* 221 */,
/* 222 */,
/* 223 */,
/* 224 */,
/* 225 */,
/* 226 */,
/* 227 */,
/* 228 */,
/* 229 */,
/* 230 */,
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var DocContext = __webpack_require__(1);

	var PropTypes = __webpack_require__(33);
	var React = __webpack_require__(10);
	var _fetchData = __webpack_require__(51);
	var createEmptyFilterData = __webpack_require__(2);
	var compareDate = __webpack_require__(232);

	var DocumentTemplate = __webpack_require__(197),
	    InputText = __webpack_require__(219),
	    TextArea = __webpack_require__(226),
	    DataGrid = __webpack_require__(170),
	    InputDate = __webpack_require__(217),
	    styles = __webpack_require__(233);

	var LIBRARIES = [{ id: 'lapse_grupp', filter: '' }];

	var DOCS = ['ARV', 'SMK', 'VMK', 'LAPSE_TAABEL'];

	var Laps = function (_React$PureComponent) {
	    _inherits(Laps, _React$PureComponent);

	    function Laps(props) {
	        _classCallCheck(this, Laps);

	        var _this = _possibleConstructorReturn(this, (Laps.__proto__ || Object.getPrototypeOf(Laps)).call(this, props));

	        _this.state = {
	            loadedData: false,
	            docId: props.docId ? props.docId : Number(props.match.params.docId),
	            vanemId: null,
	            module: 'lapsed',
	            kehtiv: '2019-12-31'
	        };

	        _this.renderer = _this.renderer.bind(_this);
	        _this.handlePageClick = _this.handlePageClick.bind(_this);
	        _this.handleGridBtnClick = _this.handleGridBtnClick.bind(_this);
	        _this.fetchData = _this.fetchData.bind(_this);
	        _this.setFilter = _this.setFilter.bind(_this);
	        _this.handleInputChange = _this.handleInputChange.bind(_this);

	        _this.docId = props.docId ? props.docId : Number(props.match.params.docId);

	        _this.pages = [{ pageName: 'Lapse kaart', docTypeId: 'LAPS' }];
	        return _this;
	    }

	    _createClass(Laps, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            if (this.props.history && this.props.history.location.state) {
	                var vanemId = this.props.history.location.state.vanemId;
	                var _module = this.props.history.location.state.module ? this.props.history.location.state.module : 'lapsed';
	                this.setState({ vanemId: vanemId, module: _module });
	            }

	            //сохраним последний docId
	            if (this.state.docId) {
	                DocContext.lapsId = this.state.docId;
	            }
	        }
	    }, {
	        key: 'render',
	        value: function render() {

	            return React.createElement(DocumentTemplate, { docId: this.state.docId,
	                ref: 'document',
	                history: this.props.history,
	                module: this.state.module,
	                docTypeId: 'LAPS',
	                reload: true,
	                initData: this.props.initData ? this.props.initData : {},
	                libs: LIBRARIES,
	                pages: this.pages,
	                renderer: this.renderer,
	                handleGridBtnClick: this.handleGridBtnClick,
	                focusElement: 'input-isikukood'
	            });
	        }

	        /**
	         *Вернет кастомные компоненты документа
	         */

	    }, {
	        key: 'renderer',
	        value: function renderer(self) {
	            var _this2 = this;

	            var isEditMode = self.state.edited,
	                gridVanemadData = self.docData.vanemad,
	                gridVanemadColumns = self.docData.gridConfig,
	                gridTeenusteData = self.docData.teenused,
	                gridTeenusteColumns = self.docData.gridTeenusteConfig,
	                gridViitenumbersData = self.docData.viitenumbers,
	                gridViitenumbersColumns = self.docData.gridViitenumberConfig;

	            var gridSoodustusteData = [];

	            if (self.docData.id === 0) {
	                //neew record
	                self.docData.vanemid = this.state.vanemId;
	            } else {
	                // наложим фильтры
	                this.setFilter(self.docData.isikukood);
	            }

	            if (!this.docId && self.docData.id) {
	                this.docId = self.docData.id;
	            }

	            // наложить фильтр на действующие услуги
	            if (gridTeenusteData && gridTeenusteData.length) {

	                // фильтруем льготы
	                gridSoodustusteData = gridTeenusteData.filter(function (row) {
	                    return compareDate(row.lopp_kpv, _this2.state.kehtiv) && row.tyyp && row.tyyp === 'SOODUSTUS';
	                });

	                //услуги без льгот
	                gridTeenusteData = gridTeenusteData.filter(function (row) {
	                    return compareDate(row.lopp_kpv, _this2.state.kehtiv) && (!row.tyyp || row.tyyp === '');
	                });
	            }
	            return React.createElement(
	                'div',
	                { style: styles.doc },
	                self.docData && self.docData.isikukood && !Number(self.docData.arveldus) ? React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.warning },
	                        'Puudub arvestuse eest vastutav isik '
	                    )
	                ) : null,
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(InputText, { ref: 'input-isikukood',
	                            title: 'Isikukood:',
	                            name: 'isikukood',
	                            value: self.docData.isikukood || '',
	                            readOnly: !isEditMode,
	                            maxLength: '11',
	                            onChange: self.handleInputChange }),
	                        React.createElement(InputText, { title: 'Nimi:',
	                            name: 'nimi',
	                            value: self.docData.nimi || '',
	                            ref: 'input-nimi',
	                            readOnly: !isEditMode,
	                            onChange: self.handleInputChange }),
	                        React.createElement(InputText, { title: 'Viitenumber:',
	                            name: 'viitenumber',
	                            value: self.docData.viitenumber || '',
	                            ref: 'input-viitenumber',
	                            readOnly: true,
	                            disabled: true,
	                            onChange: self.handleInputChange }),
	                        React.createElement(InputText, { ref: 'input-jaak',
	                            title: 'J\xE4\xE4k:',
	                            name: 'jaak',
	                            value: self.docData.jaak || '',
	                            readOnly: true,
	                            style: styles.jaak
	                        })
	                    ),
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(
	                            'div',
	                            { style: styles.docRow },
	                            React.createElement(
	                                'label',
	                                { ref: 'label' },
	                                'Vana viitenumbrid'
	                            )
	                        ),
	                        React.createElement(
	                            'div',
	                            { style: styles.docRow },
	                            React.createElement(DataGrid, { source: 'viitenumbers',
	                                gridData: gridViitenumbersData,
	                                gridColumns: gridViitenumbersColumns,
	                                showToolBar: !isEditMode,
	                                handleGridBtnClick: self.handleGridBtnClick,
	                                readOnly: isEditMode,
	                                style: styles.grid.headerTable,
	                                docTypeId: 'viitenr',
	                                ref: 'viitenr-data-grid' })
	                        )
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(TextArea, { title: 'M\xE4rkused',
	                        name: 'muud',
	                        ref: 'textarea-muud',
	                        onChange: self.handleInputChange,
	                        value: self.docData.muud || '',
	                        readOnly: !isEditMode })
	                ),
	                React.createElement(
	                    'div',
	                    {
	                        style: styles.docRow },
	                    React.createElement(
	                        'label',
	                        {
	                            ref: 'label' },
	                        'Vanemad'
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(DataGrid, { source: 'vanemad',
	                        gridData: gridVanemadData,
	                        gridColumns: gridVanemadColumns,
	                        showToolBar: !isEditMode,
	                        handleGridBtnClick: self.handleGridBtnClick,
	                        readOnly: isEditMode,
	                        style: styles.grid.headerTable,
	                        docTypeId: 'vanem',
	                        ref: 'vanemad-data-grid' })
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(
	                            'label',
	                            { ref: 'label' },
	                            'Teenused'
	                        )
	                    ),
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(InputDate, { title: 'Kehtiv seisuga: ',
	                            name: 'kehtivSeisuga',
	                            value: this.state.kehtiv,
	                            ref: 'input-kehtiv',
	                            readOnly: false,
	                            styles: styles.kehtivSeisuga,
	                            onChange: this.handleInputChange })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(DataGrid, { source: 'teenused',
	                        gridData: gridTeenusteData,
	                        gridColumns: gridTeenusteColumns,
	                        showToolBar: !isEditMode,
	                        handleGridBtnClick: self.handleGridBtnClick,
	                        docTypeId: 'lapse_kaart',
	                        readOnly: !isEditMode,
	                        style: styles.grid.headerTable,
	                        ref: 'teenuste-data-grid' })
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'label',
	                        { ref: 'label' },
	                        'Lühiajalised soodustused (miinusmärgiga)'
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(DataGrid, { source: 'soodustused',
	                        gridData: gridSoodustusteData,
	                        gridColumns: gridTeenusteColumns,
	                        showToolBar: !isEditMode,
	                        handleGridBtnClick: self.handleGridBtnClick,
	                        docTypeId: 'lapse_kaart',
	                        readOnly: !isEditMode,
	                        style: styles.grid.headerTable,
	                        ref: 'soodustused-data-grid' })
	                )
	            );
	        }

	        /**
	         * установим фильтр на документа
	         */

	    }, {
	        key: 'setFilter',
	        value: function setFilter(isikukood) {

	            // проверим наличие фильтра
	            DOCS.forEach(function (doc) {
	                if (!DocContext.filter[doc] || !DocContext.filter[doc].length) {
	                    // создаем пустой фильтр для заданного типа
	                    DocContext.filter[doc] = createEmptyFilterData(DocContext.gridConfig[doc], [], doc);
	                }

	                // накладываем фильтр
	                DocContext.filter[doc].forEach(function (row) {
	                    if (row.id == 'isikukood') {
	                        row.value = isikukood;
	                    }
	                });
	            });
	        }
	    }, {
	        key: 'handlePageClick',
	        value: function handlePageClick(pageDocTypeId) {
	            var _this3 = this;

	            // данные для фильтра
	            var isikukood = this.refs['document'].docData.isikukood;

	            // register name
	            if (DocContext.menu) {
	                var docType = DocContext['menu'].find(function (row) {
	                    return row.kood.toUpperCase() === pageDocTypeId.toUpperCase();
	                });
	                if (docType) {
	                    DocContext.pageName = docType;
	                }
	            } else {
	                var page = this.pages.find(function (row) {
	                    return row.docTypeId == pageDocTypeId;
	                });
	                if (page && page.pageName) {
	                    DocContext.pageName = page.pageName;
	                }
	            }

	            // проверим наличие фильтра
	            if (!DocContext.filter[pageDocTypeId] || !DocContext.filter[pageDocTypeId].length) {
	                // создаем пустой фильтр для заданного типа
	                DocContext.filter[pageDocTypeId] = createEmptyFilterData(DocContext.gridConfig[pageDocTypeId], [], pageDocTypeId);
	            }

	            // накладываем фильтр
	            DocContext.filter[pageDocTypeId].forEach(function (row) {
	                if (row.id == 'isikukood') {
	                    row.value = isikukood;
	                }
	            });

	            var route = '/lapsed/' + pageDocTypeId;
	            this.props.history.replace('/reload');
	            setTimeout(function () {
	                _this3.props.history.replace(route);
	            });
	        }

	        // обработчик события клик на гриде родителей

	    }, {
	        key: 'handleGridBtnClick',
	        value: function handleGridBtnClick(btnName, activeRow, id, docTypeId) {
	            var _this4 = this;

	            switch (btnName.toUpperCase()) {
	                case "EDIT":

	                    this.props.history.push({
	                        pathname: '/lapsed/' + docTypeId + '/' + id,
	                        state: { lapsId: this.docId, module: this.state.module }
	                    });
	                    break;
	                case "MUUDA":

	                    this.props.history.push({
	                        pathname: '/lapsed/' + docTypeId + '/' + id,
	                        state: { lapsId: this.docId, module: this.state.module }
	                    });
	                    break;

	                case "ADD":
	                    this.props.history.push({
	                        pathname: '/lapsed/' + docTypeId + '/0',
	                        state: { lapsId: this.docId, module: this.state.module }
	                    });
	                    break;
	                case "LISA":
	                    this.props.history.push({
	                        pathname: '/lapsed/' + docTypeId + '/0',
	                        state: { lapsId: this.docId, module: this.state.module }
	                    });
	                    break;
	                case "DELETE":
	                    //send post to delete row
	                    this.fetchData(docTypeId, id).then(function (response) {
	                        var isTrue = response && response.status && response.status === 200 ? 'Ok' : 'Error';
	                        var errorMessage = 'Viga';
	                        if (isTrue && response.data && response.data.error) {
	                            // error
	                            isTrue = false;
	                            errorMessage = response.data.error_message;
	                        }
	                        var Doc = _this4.refs['document'];
	                        // обновим справочник
	                        Doc.loadLibs('vanem');

	                        if (isTrue === 'Ok') {

	                            Doc.setState({
	                                reloadData: true,
	                                warning: 'Kiri kustutatud',
	                                warningType: 'ok'
	                            }, function () {
	                                setTimeout(function () {
	                                    var current = _this4.props.location.pathname;
	                                    _this4.props.history.replace('/reload');
	                                    setTimeout(function () {
	                                        _this4.props.history.replace(current);
	                                    });
	                                }, 2000);
	                            });
	                        } else {
	                            Doc.setState({
	                                reloadData: false,
	                                warning: '' + errorMessage,
	                                warningType: 'error'
	                            });
	                        }
	                    });
	                    break;
	                case "KUSTUTA":
	                    //send post to delete row
	                    this.fetchData(docTypeId, id).then(function (response) {
	                        var isTrue = response && response.status && response.status === 200 ? 'Ok' : 'Error';
	                        var Doc = _this4.refs['document'];
	                        if (isTrue === 'Ok') {

	                            // обновим справочник
	                            Doc.loadLibs('vanem');

	                            // извещение
	                            Doc.setState({
	                                reloadData: true,
	                                warning: 'Kiri kustutatud',
	                                warningType: 'ok'
	                            });
	                        } else {
	                            var errorMessage = response.data && response.data.error_message ? response.data.error_message : 'Viga';
	                            Doc.setState({
	                                reloadData: false,
	                                warning: '' + errorMessage,
	                                warningType: 'error'
	                            });
	                        }
	                    });
	                    break;
	                default:
	                    console.log('Vigane click', btnName);
	            }
	        }

	        // отправит запрос на удаление с параметром тип документа и ид

	    }, {
	        key: 'fetchData',
	        value: function fetchData(docTypeId, id) {

	            var url = '/newApi/delete';

	            var params = {
	                parameter: docTypeId,
	                module: 'lapsed',
	                userId: DocContext.userData.userId,
	                uuid: DocContext.userData.uuid,
	                docId: id
	            };

	            return _fetchData['fetchDataPost'](url, params);
	        }

	        /**
	         * отработает фильтр на данные услуг
	         */

	    }, {
	        key: 'handleInputChange',
	        value: function handleInputChange(inputName, inputValue) {
	            // обработчик изменений
	            this.setState({ kehtiv: inputValue });
	        }
	    }]);

	    return Laps;
	}(React.PureComponent);

	Laps.propTypes = {
	    docId: PropTypes.number,
	    initData: PropTypes.object,
	    userData: PropTypes.object
	};

	Laps.defaultProps = {
	    params: { docId: 0 },
	    initData: {},
	    userData: {}
	};

	module.exports = Laps;

/***/ }),
/* 232 */
/***/ (function(module, exports) {

	"use strict";function compareDates(date1,date2){var kpv1=new Date(date1);kpv1.setDate(kpv1.getDate()+1);var kpv2=new Date(date2);if(kpv1>=kpv2){return true;}else{return false;}}module.exports=compareDates;

/***/ }),
/* 233 */
/***/ (function(module, exports) {

	'use strict';module.exports={docRow:{display:'flex',flexDirection:'row'/*
	                border: '1px solid blue'
	        */},warning:{backgroundColor:'lightcoral',width:'100%',textAlign:'left'},docColumn:{display:'flex',flexDirection:'column',/*
	                border: '1px solid yellow',
	        */width:'50%'},doc:{display:'flex',flexDirection:'column'/*
	                border: '1px solid brown'
	        */},grid:{mainTable:{width:'100%',zIndex:'-1'},headerTable:{width:'100%'},gridContainer:{width:'100%'}},gridRow:{/*
	                border: '1px solid black',
	        */backgroundColor:'white',position:'relative',margin:'10% 30% 10% 30%',width:'auto',opacity:'1',top:'100px'},kehtivSeisuga:{width:'min-content'},jaak:{width:'min-content',margin:'0px'}};

/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(10);
	var DocumentRegister = __webpack_require__(235);
	var BtnArvesta = __webpack_require__(244);
	var ButtonUpload = __webpack_require__(245);
	var InputText = __webpack_require__(219);

	var ToolbarContainer = __webpack_require__(78);
	var ModalReport = __webpack_require__(224);

	var styles = __webpack_require__(247);

	var DOC_TYPE_ID = 'LAPS';
	var EVENTS = __webpack_require__(193).events[DOC_TYPE_ID];

	var DocRights = __webpack_require__(198);
	var checkRights = __webpack_require__(199);
	var DocContext = __webpack_require__(1);

	/**
	 * Класс реализует документ справочника признаков.
	 */

	var Documents = function (_React$PureComponent) {
	    _inherits(Documents, _React$PureComponent);

	    function Documents(props) {
	        _classCallCheck(this, Documents);

	        var _this = _possibleConstructorReturn(this, (Documents.__proto__ || Object.getPrototypeOf(Documents)).call(this, props));

	        var today = new Date();

	        _this.onClickHandler = _this.onClickHandler.bind(_this);
	        _this.handleClick = _this.handleClick.bind(_this);
	        _this.renderer = _this.renderer.bind(_this);
	        _this.modalReportePageBtnClick = _this.modalReportePageBtnClick.bind(_this);

	        _this.state = {
	            read: 0,
	            filtri_read: 0,
	            isReport: false,
	            txtReport: [],
	            kehtivus: today
	        };

	        return _this;
	    }

	    _createClass(Documents, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(
	                'div',
	                null,
	                React.createElement(DocumentRegister, { initData: this.props.initData,
	                    history: this.props.history ? this.props.history : null,
	                    module: this.props.module,
	                    ref: 'register',
	                    docTypeId: DOC_TYPE_ID,
	                    style: styles,
	                    render: this.renderer }),
	                React.createElement(InputText, { title: 'Filtri all / read kokku:',
	                    name: 'read_kokku',
	                    style: styles.total,
	                    ref: 'input-read',
	                    value: String(this.state.filtri_read + '/' + this.state.read),
	                    disabled: true }),
	                React.createElement(ModalReport, {
	                    show: this.state.isReport,
	                    report: this.state.txtReport,
	                    modalPageBtnClick: this.modalReportePageBtnClick })
	            );
	        }
	    }, {
	        key: 'renderer',
	        value: function renderer(self) {
	            var _this2 = this;

	            if (!self) {
	                // не инициализировано
	                return null;
	            }

	            var docRights = DocRights[DOC_TYPE_ID] ? DocRights[DOC_TYPE_ID] : [];
	            var userRoles = DocContext.userData ? DocContext.userData.roles : [];

	            var events = EVENTS.filter(function (event) {
	                // только доступные таски должны попасть в список
	                var kas_lubatud = checkRights(userRoles, docRights, event.method);
	                return kas_lubatud;
	            });

	            if (self.gridData) {
	                this.setState({
	                    read: self.gridData && self.gridData.length && self.gridData[0].rows_total ? self.gridData[0].rows_total : this.state.read,
	                    filtri_read: self.gridData && self.gridData.length && self.gridData[0].filter_total ? self.gridData[0].filter_total : 0
	                });
	            }

	            return React.createElement(
	                ToolbarContainer,
	                null,
	                checkRights(userRoles, docRights, 'arvestaTaabel') ? events.map(function (event) {
	                    return React.createElement(BtnArvesta, {
	                        value: event.name,
	                        onClick: _this2.onClickHandler,
	                        ref: 'btn-' + event.name,
	                        key: 'key-' + event.name
	                    });
	                }) : null,
	                checkRights(userRoles, docRights, 'importLapsed') ? React.createElement(ButtonUpload, {
	                    ref: 'btnUpload',
	                    docTypeId: DOC_TYPE_ID,
	                    onClick: this.handleClick,
	                    show: true,
	                    value: 'Import lapsed',
	                    mimeTypes: '.csv'
	                }) : null,
	                checkRights(userRoles, docRights, 'importViitenr') ? React.createElement(ButtonUpload, {
	                    ref: 'btnUpload',
	                    docTypeId: 'VIITENR',
	                    onClick: this.handleClick,
	                    show: true,
	                    value: 'Import viitenumbrid',
	                    mimeTypes: '.csv'
	                }) : null
	            );
	        }
	    }, {
	        key: 'onClickHandler',
	        value: function onClickHandler(event, seisuga) {
	            var _this3 = this;

	            var Doc = this.refs['register'];

	            // собираем параметры
	            var ids = [];
	            Doc.gridData.filter(function (row) {
	                return row.select;
	            }).forEach(function (row) {
	                ids.push(row.id);
	            });

	            var task = EVENTS.find(function (task) {
	                return task.name === event;
	            });
	            if (!task) {
	                return Doc.setState({ warning: 'Task: ' + event + ' ei leidnud', warningType: 'error' });
	            }

	            // отправляем запрос на выполнение
	            var message = 'v\xF5ib olla selles perioodil k\xF5ik arved juba v\xE4ljastatud';
	            Doc.fetchData('calc/' + task.method, { docs: ids, seisuga: seisuga }).then(function (data) {
	                if (data.result) {
	                    message = 'task saadetud t\xE4itmisele';
	                    Doc.setState({ warning: '' + message, warningType: 'ok' });

	                    var tulemused = data.data.result.tulemused;
	                    // открываем отчет
	                    _this3.setState({ isReport: true, txtReport: tulemused });
	                } else {
	                    if (data.error_message) {
	                        Doc.setState({ warning: 'Tekkis viga: ' + data.error_message, warningType: 'error' });
	                    } else {
	                        Doc.setState({
	                            warning: 'Kokku arvestatud : ' + data.result + ', ' + message,
	                            warningType: 'notValid'
	                        });
	                    }
	                }
	            });
	        }

	        /**
	         * кастомный обработчик события клик на кнопку импорта
	         */

	    }, {
	        key: 'handleClick',
	        value: function handleClick(result) {

	            //обновим данные
	            var Doc = this.refs['register'];
	            if (!Doc) {
	                return null;
	            }
	            if (result) {
	                Doc.setState({ warning: 'Edukalt:  ' + result + ': ', warningType: 'ok' });
	                setTimeout(function () {
	                    Doc.fetchData('selectDocs');
	                }, 10000);
	            }
	        }

	        /**
	         * уберет окно с отчетом
	         */

	    }, {
	        key: 'modalReportePageBtnClick',
	        value: function modalReportePageBtnClick(event) {
	            var isReport = event && event == 'Ok' ? false : true;
	            this.setState({ isReport: isReport });
	        }
	    }]);

	    return Documents;
	}(React.PureComponent);

	module.exports = Documents;

/***/ }),
/* 235 */,
/* 236 */,
/* 237 */,
/* 238 */,
/* 239 */,
/* 240 */,
/* 241 */,
/* 242 */,
/* 243 */,
/* 244 */,
/* 245 */,
/* 246 */,
/* 247 */
/***/ (function(module, exports) {

	'use strict';module.exports={grid:{mainTable:{width:'100%',td:{border:'1px solid lightGrey',display:'table-cell',paddingLeft:'5px'},position:'initial'},headerTable:{width:'100%'},gridContainer:{width:'100%'}},total:{width:'auto'}};

/***/ }),
/* 248 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(10);
	var DocumentRegister = __webpack_require__(235);
	var BtnTask = __webpack_require__(244);

	var ToolbarContainer = __webpack_require__(78);
	var ButtonUpload = __webpack_require__(245);
	var InputText = __webpack_require__(219);

	var styles = __webpack_require__(249);
	var DOC_TYPE_ID = 'LAPSE_KAART';

	var DocRights = __webpack_require__(198);
	var checkRights = __webpack_require__(199);
	var DocContext = __webpack_require__(1);

	var docRights = DocRights[DOC_TYPE_ID] ? DocRights[DOC_TYPE_ID] : [];

	/**
	 * Класс реализует документ справочника признаков.
	 */

	var Documents = function (_React$PureComponent) {
	    _inherits(Documents, _React$PureComponent);

	    function Documents(props) {
	        _classCallCheck(this, Documents);

	        var _this = _possibleConstructorReturn(this, (Documents.__proto__ || Object.getPrototypeOf(Documents)).call(this, props));

	        _this.onClickHandler = _this.onClickHandler.bind(_this);
	        _this.onClickExport = _this.onClickExport.bind(_this);
	        _this.onClickTeenusteTahtaegHandler = _this.onClickTeenusteTahtaegHandler.bind(_this);
	        _this.renderer = _this.renderer.bind(_this);
	        _this.state = {
	            read: 0,
	            filtri_read: 0
	        };

	        return _this;
	    }

	    _createClass(Documents, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(
	                'div',
	                null,
	                React.createElement(DocumentRegister, { initData: this.props.initData,
	                    userData: this.props.userData,
	                    history: this.props.history ? this.props.history : null,
	                    module: this.props.module,
	                    ref: 'register',
	                    docTypeId: DOC_TYPE_ID,
	                    style: styles,
	                    render: this.renderer }),
	                React.createElement(InputText, { title: 'Filtri all / read kokku:',
	                    name: 'read_kokku',
	                    style: styles.total,
	                    ref: 'input-read',
	                    value: String(this.state.filtri_read + '/' + this.state.read),
	                    disabled: true })
	            );
	        }
	    }, {
	        key: 'renderer',
	        value: function renderer(self) {
	            var userRoles = DocContext.userData ? DocContext.userData.roles : [];
	            if (self && self.gridData) {
	                var rows_total = self.gridData.length && self.gridData[0].rows_total ? self.gridData[0].rows_total : 0;
	                this.setState({
	                    read: rows_total,
	                    filtri_read: self.gridData.length && self.gridData[0].filter_total ? self.gridData[0].filter_total : rows_total
	                });
	            }

	            return React.createElement(
	                ToolbarContainer,
	                null,
	                checkRights(userRoles, docRights, 'muudaTeenusteTahtaeg') ? React.createElement(BtnTask, {
	                    value: 'Muuda teenuste tähtaeg',
	                    onClick: this.onClickTeenusteTahtaegHandler,
	                    showDate: true,
	                    showKogus: false,
	                    ref: 'btn-teenuste_tahtaeg'
	                }) : null,
	                checkRights(userRoles, docRights, 'muudaEttemaksuPeriod') ? React.createElement(BtnTask, {
	                    value: 'Muuda ettemaksu period',
	                    onClick: this.onClickHandler.bind(this, 'muudaEttemaks'),
	                    showDate: false,
	                    showKogus: true,
	                    ref: 'btn-ettemaksu_period'
	                }) : null,
	                checkRights(userRoles, docRights, 'importTeenused') ? React.createElement(ButtonUpload, {
	                    ref: 'btnUpload',
	                    docTypeId: DOC_TYPE_ID,
	                    onClick: this.handleClick,
	                    show: true,
	                    mimeTypes: '.csv'
	                }) : null,
	                React.createElement(BtnTask, {
	                    value: 'Saama CSV fail',
	                    onClick: this.onClickExport,
	                    showDate: false,
	                    showKogus: false,
	                    showKond: true,
	                    ref: 'btn-sama_csv'
	                })
	            );
	        }
	    }, {
	        key: 'onClickHandler',
	        value: function onClickHandler(event, ettemaksuPeriod) {

	            var Doc = this.refs['register'];

	            // собираем параметры
	            var ids = [];
	            Doc.gridData.filter(function (row) {
	                if (row.ettemaks && row.select) {
	                    return row;
	                }
	            }).forEach(function (row) {
	                ids.push(row.id);
	            });

	            // отправляем запрос на выполнение
	            Doc.fetchData('calc/muuda_ettemaksu_period', { docs: ids, ettemaksuPeriod: ettemaksuPeriod }).then(function (data) {

	                if (data.result) {
	                    Doc.setState({ warning: 'Kokku arvestatud: ' + data.result, warningType: 'ok' });
	                } else {
	                    Doc.setState({ warning: 'Tekkis viga: ' + data.error_message, warningType: 'notValid' });
	                }
	            });
	        }
	    }, {
	        key: 'onClickExport',
	        value: function onClickExport(event, value, kond) {
	            var Doc = this.refs['register'];

	            if (Doc.gridData && Doc.gridData.length) {

	                //делаем редайрект на конфигурацию


	                var sqlWhere = Doc.state.sqlWhere;
	                var params = encodeURIComponent('' + sqlWhere);
	                var url = '/reports/lapse_kaart/' + DocContext.userData.uuid + '/' + kond;

	                var filter = encodeURIComponent('' + JSON.stringify(Doc.filterData));
	                var fullUrl = sqlWhere ? url + '/' + filter + '/' + params : url + '/' + filter;

	                window.open(fullUrl);
	            } else {
	                Doc.setState({
	                    warning: 'Mitte ühtegi teenused leidnum', // строка извещений
	                    warningType: 'notValid'

	                });
	            }
	        }
	    }, {
	        key: 'onClickTeenusteTahtaegHandler',
	        value: function onClickTeenusteTahtaegHandler(event, teenusteTahtaeg) {

	            var Doc = this.refs['register'];

	            // собираем параметры
	            var ids = [];
	            Doc.gridData.filter(function (row) {
	                if (row.select) {
	                    return row;
	                }
	            }).forEach(function (row) {
	                ids.push(row.id);
	            });

	            // отправляем запрос на выполнение
	            Doc.fetchData('calc/muuda_teenuste_tahtaeg', { docs: ids, teenusteTahtaeg: teenusteTahtaeg }).then(function (data) {

	                if (data.result) {
	                    Doc.btnRefreshClick();
	                    Doc.setState({ warning: 'Kokku muudetud: ' + data.result, warningType: 'ok' });
	                } else {
	                    Doc.setState({ warning: 'Tekkis viga: ' + data.error_message, warningType: 'notValid' });
	                }
	            });
	        }
	    }]);

	    return Documents;
	}(React.PureComponent);

	module.exports = Documents;

/***/ }),
/* 249 */
/***/ (function(module, exports) {

	'use strict';module.exports={grid:{mainTable:{width:'100%',position:'initial',td:{border:'1px solid lightGrey',display:'table-cell',paddingLeft:'5px'}},headerTable:{width:'100%'},gridContainer:{width:'100%'}},total:{width:'auto'}};

/***/ }),
/* 250 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var PropTypes = __webpack_require__(33);
	var React = __webpack_require__(10);
	var DocContext = __webpack_require__(1);

	var DocumentTemplate = __webpack_require__(197),
	    InputNumber = __webpack_require__(221),
	    ButtonEdit = __webpack_require__(84),
	    InputDate = __webpack_require__(217),
	    Select = __webpack_require__(215),
	    CheckBox = __webpack_require__(175),
	    SelectData = __webpack_require__(251),
	    TextArea = __webpack_require__(226),
	    Loading = __webpack_require__(253),
	    styles = __webpack_require__(255);

	var LIBRARIES = __webpack_require__(193).LAPSE_KAART.LIBRARIES;

	var LapseKaart = function (_React$PureComponent) {
	    _inherits(LapseKaart, _React$PureComponent);

	    function LapseKaart(props) {
	        _classCallCheck(this, LapseKaart);

	        var _this = _possibleConstructorReturn(this, (LapseKaart.__proto__ || Object.getPrototypeOf(LapseKaart)).call(this, props));

	        _this.state = {
	            docId: props.docId ? props.docId : Number(props.match.params.docId),
	            module: 'lapsed',
	            kas_soodustus: false
	        };

	        _this.renderer = _this.renderer.bind(_this);
	        _this.handlePageClick = _this.handlePageClick.bind(_this);
	        _this.handleGridBtnClick = _this.handleGridBtnClick.bind(_this);
	        _this.btnEditNomClick = _this.btnEditNomClick.bind(_this);
	        _this.btnEditLapsClick = _this.btnEditLapsClick.bind(_this);
	        _this.btnEditLapseGruppClick = _this.btnEditLapseGruppClick.bind(_this);
	        _this.handleInputChange = _this.handleInputChange.bind(_this);

	        _this.pages = [{ pageName: 'Teenus', docTypeId: 'LAPSE_KAART' }];

	        return _this;
	    }

	    _createClass(LapseKaart, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            var lapsId = void 0;

	            //если параметр на ребенка задан в стейте, то используем его. Иначе ищем его в контексте
	            if (this.props.history && this.props.history.location.state) {
	                lapsId = this.props.history.location.state.lapsId;
	            } else {
	                lapsId = DocContext['laps'] ? DocContext['laps'] : null;
	            }
	            this.setState({ lapsId: lapsId });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var initData = this.props.initData ? this.props.initData : {};

	            return React.createElement(DocumentTemplate, { docId: this.state.docId,
	                ref: 'document',
	                module: this.state.module,
	                docTypeId: 'LAPSE_KAART',
	                userData: this.props.userData,
	                initData: initData,
	                libs: LIBRARIES,
	                pages: this.pages,
	                renderer: this.renderer,
	                handleGridBtnClick: this.handleGridBtnClick,
	                handleInputChange: this.handleInputChange,
	                history: this.props.history
	            });
	        }

	        /**
	         *Вернет кастомные компоненты документа
	         */

	    }, {
	        key: 'renderer',
	        value: function renderer(self) {
	            var _this2 = this;

	            //|| !self.state.loadedLibs
	            if (!self || !self.docData || !self.state.loadedLibs) {
	                // не загружены данные
	                return React.createElement(
	                    'div',
	                    { style: styles.doc },
	                    React.createElement(Loading, { label: 'Laadimine...' })
	                );
	            }

	            // не успевает подгрузиться справочник, перегрузка формы
	            if (!self.libs['nomenclature'].length) {
	                setTimeout(function () {
	                    _this2.forceUpdate();
	                }, 1);
	            }

	            var isEditMode = self.state.edited;

	            if ((!Number(self.docData.id) || !self.docData.parentid) && this.state.lapsId) {
	                //new record
	                self.docData.parentid = this.state.lapsId;
	            }

	            var buttonEditNom = styles.btnEditNom;

	            var yksus = void 0;
	            var all_yksused = [{ id: 0, nimetus: '' }];
	            if (self.libs['lapse_grupp'] && self.docData.yksus) {
	                yksus = self.libs['lapse_grupp'].find(function (yksus) {
	                    return yksus.kood === self.docData.yksus;
	                });

	                all_yksused = (yksus && yksus.all_yksused ? yksus.all_yksused : []).map(function (item, index) {
	                    return { id: index++, nimetus: item };
	                });
	            }

	            var nomData = [];
	            // берем только услуги для группы, добавляяем цену и ед.измерения и сортируем
	            try {
	                if (yksus) {
	                    if (DocContext.libs && DocContext.libs[yksus.id] && DocContext.libs[yksus.id].length) {
	                        // берем из кеша
	                        nomData = DocContext.libs[yksus.id];
	                    } else {
	                        nomData = (yksus.teenused && self.libs['nomenclature'].length > 0 ? yksus.teenused : []).map(function (nom) {
	                            var row = self.libs['nomenclature'].find(function (lib) {
	                                return lib.id === Number(nom.nomid);
	                            });

	                            if (row) {
	                                var teenuseNimetus = row.nimetus ? row.nimetus + ' (hind: ' + Number(nom.hind).toFixed(2) + ') ' : '';
	                                return _extends({}, row, { nimetus: teenuseNimetus, id: Number(nom.nomid) });
	                            }
	                        }).sort(function (a, b) {
	                            return a.kood.localeCompare(b.kood);
	                        });

	                        if (nomData.length) {
	                            // сохраним в кеше
	                            DocContext.libs[yksus.id] = nomData;

	                            // на всякий, вызовем ре рендер страницы
	                            this.forceUpdate();
	                        }
	                    }
	                } else {
	                    // фильтр на номенклатуры
	                    nomData = [{ id: 0, kood: '', nimetus: '', hind: 0, kogus: 0, kas_inf3: false }];
	                }
	            } catch (e) {
	                console.error(e, nomData);
	            }

	            // накладываем фильтр на справочник старых витенумберов на ребенка
	            var viitenr = [{ id: 0, kood: '', nimetus: '', laps_id: self.docData.parentid }];
	            var defaultViitenr = void 0;

	            if (self.libs['viitenr'] && self.libs['viitenr'].length && self.docData.parentid) {
	                viitenr.push.apply(viitenr, _toConsumableArray(self.libs['viitenr'].filter(function (kaart) {
	                    return kaart.laps_id == self.docData.parentid;
	                })));

	                // считаем кол-во старых номеров
	                var index = viitenr.length - 1;
	                defaultViitenr = viitenr[index].kood;

	                if (!self.docData.viitenr) {
	                    // если не задан старый витенумбер, то добавим последний из регистра
	                    self.docData.viitenr = defaultViitenr;
	                }
	            }

	            // проверим стоит ли разрешить редактирование
	            var isEditLapsid = !!self.docData.parentid;

	            // если услуга имеет тип - льгота, то отметим это
	            var kas_naida_soodustus = true;
	            if (self && self.docData && nomData && nomData.length && self.docData.nomid) {
	                var teenus = nomData.find(function (row) {
	                    return row.id === self.docData.nomid && row.tyyp === 'SOODUSTUS';
	                });
	                if (teenus) {
	                    kas_naida_soodustus = false;
	                }
	            }

	            return React.createElement(
	                'div',
	                { style: styles.doc },
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(SelectData, { title: 'Lapse nimi:',
	                            name: 'parentid',
	                            userData: self.userData,
	                            libName: 'laps',
	                            sqlFields: ['nimi', 'isikukood'],
	                            data: [],
	                            value: self.docData.parentid || 0,
	                            defaultValue: self.docData.lapse_nimi,
	                            boundToGrid: 'nimi',
	                            boundToData: 'lapse_nimi',
	                            ref: 'select-parentid',
	                            btnDelete: false,
	                            onChange: self.handleInputChange,
	                            history: this.props.history,
	                            readOnly: isEditLapsid })
	                    ),
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(ButtonEdit, {
	                            ref: 'btnEdit',
	                            value: 'Muuda',
	                            onClick: this.btnEditLapsClick,
	                            show: !isEditMode,
	                            style: buttonEditNom,
	                            disabled: false
	                        })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(Select, { title: '\xDCksus:',
	                            name: 'yksus',
	                            libs: 'lapse_grupp',
	                            data: self.libs['lapse_grupp'],
	                            value: self.docData.yksus || '',
	                            defaultValue: self.docData.yksys || '',
	                            ref: 'select-lapse_grupp',
	                            collId: 'kood',
	                            btnDelete: isEditMode,
	                            onChange: self.handleInputChange,
	                            readOnly: !isEditMode
	                        })
	                    ),
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(ButtonEdit, {
	                            ref: 'btnEdit',
	                            value: 'Muuda',
	                            onClick: this.btnEditLapseGruppClick,
	                            show: !isEditMode,
	                            disabled: false,
	                            style: buttonEditNom
	                        })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(Select, { title: 'All \xFCksus:',
	                            name: 'all_yksus',
	                            libs: 'lapse_all_yksus',
	                            data: all_yksused,
	                            value: self.docData.all_yksus || '',
	                            defaultValue: self.docData.all_yksys || '',
	                            ref: 'select-lapse_all_yksus',
	                            collId: 'nimetus',
	                            onChange: self.handleInputChange,
	                            readOnly: !isEditMode
	                        })
	                    ),
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(Select, { title: 'Vana viitenumber:',
	                            name: 'viitenr',
	                            libs: 'viitenr',
	                            data: viitenr,
	                            value: self.docData.viitenr || '',
	                            defaultValue: self.docData.viitenr || '',
	                            ref: 'select-viitenr',
	                            collId: 'kood',
	                            btnDelete: isEditMode,
	                            onChange: self.handleInputChange,
	                            readOnly: !isEditMode
	                        })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(Select, { title: 'Kood:',
	                            name: 'nomid',
	                            libs: 'nomenclature',
	                            data: nomData,
	                            value: self.docData.nomid || 0,
	                            defaultValue: self.docData.kood,
	                            ref: 'select-nomid',
	                            collId: 'id',
	                            btnDelete: isEditMode,
	                            onChange: self.handleInputChange,
	                            readOnly: !isEditMode })
	                    ),
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(ButtonEdit, {
	                            ref: 'btnEdit',
	                            value: 'Muuda',
	                            onClick: this.btnEditNomClick,
	                            show: !isEditMode,
	                            disabled: false,
	                            style: buttonEditNom
	                        })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(InputNumber, { ref: 'input-hind',
	                            title: 'Hind:',
	                            name: 'hind',
	                            value: Number(self.docData.hind) || 0,
	                            readOnly: !isEditMode,
	                            onChange: self.handleInputChange })
	                    ),
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(InputNumber, { ref: 'input-kogus',
	                            title: 'Kogus:',
	                            name: 'kogus',
	                            value: Number(self.docData.kogus) || 0,
	                            readOnly: !isEditMode,
	                            onChange: self.handleInputChange })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(Select, { title: 'Tunnus:',
	                            name: 'tunnus',
	                            libs: 'tunnus',
	                            data: self.libs['tunnus'],
	                            value: self.docData.tunnus || '',
	                            defaultValue: self.docData.tunnus || '',
	                            ref: 'select-tunnus',
	                            collId: 'kood',
	                            btnDelete: isEditMode,
	                            onChange: self.handleInputChange,
	                            readOnly: !isEditMode
	                        })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(InputDate, { title: 'Kehtib alates:',
	                            name: 'alg_kpv',
	                            value: self.docData.alg_kpv || '',
	                            ref: 'input-alg_kpv',
	                            readOnly: !isEditMode,
	                            onChange: self.handleInputChange })
	                    ),
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(InputDate, { title: 'Kehtib kuni:',
	                            name: 'lopp_kpv',
	                            value: self.docData.lopp_kpv || '',
	                            ref: 'input-lopp_kpv',
	                            readOnly: !isEditMode,
	                            onChange: self.handleInputChange })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(CheckBox, { title: 'Kas ettemaks?',
	                            name: 'kas_ettemaks',
	                            value: Boolean(self.docData.kas_ettemaks),
	                            ref: 'checkbox_kas_ettemaks',
	                            onChange: self.handleInputChange,
	                            readOnly: !isEditMode
	                        })
	                    ),
	                    self.docData.kas_ettemaks ? React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(InputNumber, {
	                            ref: 'input-ettemaksu_period',
	                            title: 'Ettemaksu period:',
	                            name: 'ettemaksu_period',
	                            value: Number(self.docData.ettemaksu_period) || 0,
	                            readOnly: !isEditMode,
	                            onChange: self.handleInputChange
	                        })
	                    ) : null
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(CheckBox, { title: 'Kas arvesta eraldi?',
	                            name: 'kas_eraldi',
	                            value: Boolean(self.docData.kas_eraldi),
	                            ref: 'checkbox_kas_eraldi',
	                            onChange: self.handleInputChange,
	                            readOnly: !isEditMode
	                        })
	                    ),
	                    kas_naida_soodustus ? React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(InputNumber, {
	                            ref: 'input-soodus',
	                            title: 'Soodustus:',
	                            name: 'soodus',
	                            value: Number(self.docData.soodus) || 0,
	                            readOnly: !isEditMode,
	                            onChange: self.handleInputChange
	                        }),
	                        React.createElement(InputDate, { title: 'Kehtib alates:',
	                            name: 'sooduse_alg',
	                            value: self.docData.sooduse_alg || '',
	                            ref: 'input-soodus_alg',
	                            readOnly: !isEditMode,
	                            onChange: self.handleInputChange }),
	                        React.createElement(InputDate, {
	                            title: 'Kehtib kuni:',
	                            name: 'sooduse_lopp',
	                            value: self.docData.sooduse_lopp || '',
	                            ref: 'input-soodus_lopp',
	                            readOnly: !isEditMode,
	                            onChange: self.handleInputChange
	                        }),
	                        React.createElement(CheckBox, { title: 'Kas soodustus protsentides?',
	                            name: 'kas_protsent',
	                            value: Boolean(self.docData.kas_protsent),
	                            ref: 'checkbox_kas_protsent',
	                            onChange: self.handleInputChange,
	                            readOnly: !isEditMode
	                        })
	                    ) : null
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(TextArea, { title: 'M\xE4rkused',
	                        name: 'muud',
	                        ref: 'textarea-muud',
	                        onChange: self.handleInputChange,
	                        value: self.docData.muud || '',
	                        readOnly: !isEditMode })
	                )
	            );
	        }

	        /**
	         * отработает клик по вкладе и осуществит переход на заданную страницу
	         * @param pageDocTypeId
	         */

	    }, {
	        key: 'handlePageClick',
	        value: function handlePageClick(pageDocTypeId) {
	            this.props.history.push('/lapsed/' + pageDocTypeId);
	        }

	        //handler for input for this document type

	    }, {
	        key: 'handleInputChange',
	        value: function handleInputChange(inputName, inputValue) {
	            if (inputName === 'nomid') {
	                var Doc = this.refs['document'];

	                // надо задать цену и кол-во из того, что привязанно в группе

	                var yksus = void 0;
	                if (Doc.libs['lapse_grupp'] && Doc.docData.yksus) {
	                    yksus = Doc.libs['lapse_grupp'].find(function (obj) {
	                        return obj.kood === Doc.docData.yksus;
	                    });
	                }

	                if (yksus.teenused) {
	                    var teenus = yksus.teenused.find(function (obj) {
	                        return obj.nomid == inputValue;
	                    });

	                    Doc.docData.kogus = teenus.kogus ? teenus.kogus : Doc.docData.kogus;
	                    Doc.docData.hind = teenus.hind ? teenus.hind : Doc.docData.hind;
	                    // подменим номид на ид, так как ид виртуальный
	                    Doc.docData.nomid = teenus.nomid ? teenus.nomid : Doc.docData.nomid;

	                    // если это создание карточки, то добавим inf3
	                    var is_new = !('id' in Doc.docData) || !Doc.docData.id ? true : false;

	                    if (is_new) {
	                        var row = Doc.libs['nomenclature'].find(function (lib) {
	                            return lib.id === Number(Doc.docData.nomid);
	                        });
	                        if (row && row.hasOwnProperty('kas_inf3')) {
	                            Doc.docData.kas_inf3 = row.kas_inf3;
	                        }
	                    }
	                }
	            }
	        }

	        // обработчик события клик на гриде родителей

	    }, {
	        key: 'handleGridBtnClick',
	        value: function handleGridBtnClick(btnName, activeRow, id, docTypeId) {
	            switch (btnName) {
	                case "edit":
	                    this.props.history.push('/lapsed/' + docTypeId + '/' + id);
	                    break;
	                case "add":
	                    this.props.history.push('/lapsed/' + docTypeId + '/0/' + this.state.docId);
	                    break;
	                case "delete":
	                    console.log('btnDelete clicked');
	                    break;
	                default:
	                    console.log('Vigane click');
	            }
	        }

	        //обработчик события по клику кнопки Редактирование сноменклатуры

	    }, {
	        key: 'btnEditNomClick',
	        value: function btnEditNomClick() {
	            var docNomId = this.refs['document'].docData.nomid;

	            // осуществит переход на карточку контр-агента
	            this.props.history.push('/lapsed/nomenclature/' + docNomId);
	        }
	    }, {
	        key: 'btnEditLapseGruppClick',
	        value: function btnEditLapseGruppClick() {
	            var docLapseGruppKood = this.refs['document'].docData.yksus;
	            // ищем ид

	            var lapseGruppId = this.refs['document'].libs['lapse_grupp'].find(function (row) {
	                return row.kood === docLapseGruppKood;
	            }).id;

	            if (lapseGruppId) {
	                // осуществит переход на карточку контр-агента
	                this.props.history.push('/lapsed/lapse_grupp/' + lapseGruppId);
	            }
	        }

	        //обработчик события по клику кнопки Редактирование ребенка

	    }, {
	        key: 'btnEditLapsClick',
	        value: function btnEditLapsClick() {
	            var docLapsId = this.refs['document'].docData.parentid;

	            // осуществит переход на карточку контр-агента
	            this.props.history.push({
	                pathname: '/lapsed/laps/' + docLapsId,
	                state: { teenusId: this.state.docId, module: this.state.module }
	            });
	        }
	    }]);

	    return LapseKaart;
	}(React.PureComponent);

	LapseKaart.propTypes = {
	    docId: PropTypes.number,
	    initData: PropTypes.object,
	    userData: PropTypes.object
	};

	LapseKaart.defaultProps = {
	    params: { docId: 0 },
	    initData: {},
	    userData: {}
	};

	module.exports = LapseKaart;

/***/ }),
/* 251 */,
/* 252 */,
/* 253 */,
/* 254 */,
/* 255 */
/***/ (function(module, exports) {

	'use strict';module.exports={docRow:{display:'flex',flexDirection:'row'/*
	                border: '1px solid blue'
	        */},docColumn:{display:'flex',flexDirection:'column',/*
	                border: '1px solid yellow',
	        */width:'50%'},doc:{display:'flex',flexDirection:'column'/*
	                border: '1px solid brown'
	        */},grid:{mainTable:{width:'100%'},headerTable:{width:'100%'},gridContainer:{width:'100%'}},gridRow:{/*
	                border: '1px solid black',
	        */backgroundColor:'white',position:'relative',margin:'10% 30% 10% 30%',width:'auto',opacity:'1',top:'100px'},btnEditNom:{width:'min-content'},selectNom:{marginLeft:'10px'}};

/***/ }),
/* 256 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(10);
	var DocumentRegister = __webpack_require__(235);
	var InputNumber = __webpack_require__(221);
	var getSum = __webpack_require__(257);
	var ButtonUpload = __webpack_require__(245);
	var ToolbarContainer = __webpack_require__(78);
	var DocRights = __webpack_require__(198);
	var checkRights = __webpack_require__(199);
	var BtnGetCsv = __webpack_require__(244);

	var styles = __webpack_require__(258);
	var DOC_TYPE_ID = 'LAPSE_TAABEL';
	var docRights = DocRights[DOC_TYPE_ID] ? DocRights[DOC_TYPE_ID] : [];
	var DocContext = __webpack_require__(1);

	/**
	 * Класс реализует документ справочника признаков.
	 */

	var Documents = function (_React$PureComponent) {
	    _inherits(Documents, _React$PureComponent);

	    function Documents(props) {
	        _classCallCheck(this, Documents);

	        var _this = _possibleConstructorReturn(this, (Documents.__proto__ || Object.getPrototypeOf(Documents)).call(this, props));

	        _this.state = {
	            summa: 0,
	            soodustus: 0
	        };
	        _this.renderer = _this.renderer.bind(_this);
	        _this.onClickHandler = _this.onClickHandler.bind(_this);

	        return _this;
	    }

	    _createClass(Documents, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(
	                'div',
	                null,
	                React.createElement(DocumentRegister, { history: this.props.history ? this.props.history : null,
	                    module: this.props.module,
	                    ref: 'register',
	                    docTypeId: DOC_TYPE_ID,
	                    style: styles,
	                    render: this.renderer }),
	                React.createElement(InputNumber, { title: 'Summa kokku:',
	                    name: 'summa_kokku',
	                    style: styles.total,
	                    ref: 'input-summa',
	                    value: Number(this.state.summa).toFixed(2) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'Soodustus kokku:',
	                    name: 'soodustus_kokku',
	                    style: styles.total,
	                    ref: 'input-soodustus',
	                    value: Number(this.state.soodustus).toFixed(2) || 0,
	                    disabled: true

	                })
	            );
	        }

	        // custom render

	    }, {
	        key: 'renderer',
	        value: function renderer(self) {
	            var userRoles = DocContext.userData ? DocContext.userData.roles : [];

	            var summa = self.gridData && self.gridData.length ? self.gridData[0].summa_kokku : 0;
	            var soodustus = self.gridData && self.gridData.length ? self.gridData[0].soodustus_kokku : 0;

	            if (summa || soodustus) {
	                this.setState({ summa: summa, read: self.gridData.length, soodustus: soodustus });
	            }

	            console.log('self.gridData', self.gridData);
	            return React.createElement(
	                ToolbarContainer,
	                null,
	                checkRights(userRoles, docRights, 'importTaabel') ? React.createElement(ButtonUpload, {
	                    ref: 'btnUpload',
	                    docTypeId: DOC_TYPE_ID,
	                    onClick: this.handleClick,
	                    show: true,
	                    mimeTypes: '.csv'
	                }) : null,
	                React.createElement(BtnGetCsv, {
	                    value: 'Saama CSV fail',
	                    onClick: this.onClickHandler,
	                    showDate: false,
	                    ref: 'btn-getcsv'
	                })
	            );

	            return null;
	        }

	        //handler для события клик на кнопках панели

	    }, {
	        key: 'onClickHandler',
	        value: function onClickHandler(event) {
	            var Doc = this.refs['register'];
	            var ids = new Set(); // сюда пишем ид счетом, которые под обработку
	            //Saama CSV fail
	            if (Doc.gridData && Doc.gridData.length) {
	                //делаем редайрект на конфигурацию
	                var sqlWhere = Doc.state.sqlWhere;
	                var url = '/reports/' + DOC_TYPE_ID.toLowerCase() + '/' + DocContext.userData.uuid;
	                var params = encodeURIComponent('' + sqlWhere);
	                window.open(url + '/' + params);
	            } else {
	                Doc.setState({
	                    warning: 'Mitte ühtegi kirjed leidnud', // строка извещений
	                    warningType: 'notValid'

	                });
	            }
	        }
	    }]);

	    return Documents;
	}(React.PureComponent);

	module.exports = Documents;

/***/ }),
/* 257 */,
/* 258 */
/***/ (function(module, exports) {

	'use strict';module.exports={grid:{mainTable:{width:'100%',td:{border:'1px solid lightGrey',display:'table-cell',paddingLeft:'5px'},position:'initial'},headerTable:{width:'100%'},gridContainer:{width:'95%'}},total:{width:'auto'}};

/***/ }),
/* 259 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var PropTypes = __webpack_require__(33);
	var React = __webpack_require__(10);

	var DocumentTemplate = __webpack_require__(197),
	    InputNumber = __webpack_require__(221),
	    ButtonEdit = __webpack_require__(84),
	    Select = __webpack_require__(215),
	    SelectData = __webpack_require__(251),
	    TextArea = __webpack_require__(226),
	    CheckBox = __webpack_require__(175),
	    Loading = __webpack_require__(253),
	    styles = __webpack_require__(260);

	var DocContext = __webpack_require__(1);

	var Laps = function (_React$PureComponent) {
	    _inherits(Laps, _React$PureComponent);

	    function Laps(props) {
	        _classCallCheck(this, Laps);

	        var _this = _possibleConstructorReturn(this, (Laps.__proto__ || Object.getPrototypeOf(Laps)).call(this, props));

	        _this.state = {
	            module: 'lapsed',
	            loadedData: false,
	            docId: props.docId ? props.docId : Number(props.match.params.docId),
	            lapsId: props.lapsId ? props.lapsId : props.match.params.paramId ? Number(props.match.params.paramId) : 0
	        };

	        _this.renderer = _this.renderer.bind(_this);
	        _this.handlePageClick = _this.handlePageClick.bind(_this);
	        _this.handleGridBtnClick = _this.handleGridBtnClick.bind(_this);
	        _this.btnEditNomClick = _this.btnEditNomClick.bind(_this);
	        _this.btnEditLapsClick = _this.btnEditLapsClick.bind(_this);
	        _this.lapsIdChangehandler = _this.lapsIdChangehandler.bind(_this);

	        _this.pages = [{ pageName: 'Lapse taabel', docTypeId: 'LAPSE_TAABEL' }];
	        return _this;
	    }

	    _createClass(Laps, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            if (!this.state.lapsId && DocContext['laps']) {
	                //есть значение ид ребенка
	                this.setState({ lapsId: DocContext['laps'] });
	            }
	        }
	    }, {
	        key: 'componentDidUpdate',
	        value: function componentDidUpdate(prevProps, prevState) {
	            // обновим справочники ребенка
	            if (this.state.lapsId !== prevState.lapsId) {
	                var doc = this.refs['document'];
	                doc.createLibs();
	            }
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var filter = this.state.lapsId ? 'where lapsid = ' + this.state.lapsId : '';

	            var LIBRARIES = [{ id: 'lapse_kaart', filter: filter }];

	            var initData = this.props.initData ? this.props.initData : {};

	            return React.createElement(DocumentTemplate, { docId: this.state.docId,
	                ref: 'document',
	                docTypeId: 'LAPSE_TAABEL',
	                module: this.state.module,
	                initData: initData,
	                libs: LIBRARIES,
	                pages: this.pages,
	                renderer: this.renderer,
	                handleGridBtnClick: this.handleGridBtnClick,
	                history: this.props.history
	            });
	        }

	        /**
	         *Вернет кастомные компоненты документа
	         */

	    }, {
	        key: 'renderer',
	        value: function renderer(self) {
	            var _this2 = this;

	            //|| !self.state.loadedLibs
	            if (!self || !self.docData || !self.libs['lapse_kaart']) {
	                // не загружены данные
	                return React.createElement(
	                    'div',
	                    { style: styles.doc },
	                    React.createElement(Loading, { label: 'Laadimine...' })
	                );
	            }

	            // не успевает подгрузиться справочник, перегрузка формы
	            if (!self.libs['lapse_kaart'].length) {
	                setTimeout(function () {
	                    _this2.forceUpdate();
	                }, 1);
	            }

	            var isEditMode = self.state.edited;

	            if ((self.docData.id === 0 || !self.docData.parentid) && this.state.lapsId) {
	                //new record
	                self.docData.parentid = this.state.lapsId;
	            }

	            if (!this.state.lapsId && self.docData.parentid) {
	                this.setState({ lapsId: self.docData.parentid });
	            }

	            var kpv = new Date(),
	                kuu = kpv.getMonth(),
	                aasta = kpv.getFullYear();

	            var buttonEditNom = styles.btnEditNom;

	            //фильтр на используемы номенклатуры
	            var nomData = self.libs['lapse_kaart'] ? self.libs['lapse_kaart'].filter(function (row) {
	                return row.lapsid === self.docData.parentid;
	            }) : [];

	            return React.createElement(
	                'div',
	                { style: styles.doc },
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(SelectData, { title: 'Lapse nimi:',
	                            name: 'parentid',
	                            libName: 'laps',
	                            sqlFields: ['nimi', 'isikukood'],
	                            data: [],
	                            value: self.docData.parentid || 0,
	                            defaultValue: self.docData.nimi,
	                            boundToGrid: 'nimi',
	                            boundToData: 'nimi',
	                            ref: 'select-parentid',
	                            btnDelete: false,
	                            userData: self.userData,
	                            onChange: this.lapsIdChangehandler,
	                            readOnly: !isEditMode })
	                    ),
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(ButtonEdit, {
	                            ref: 'btnEdit',
	                            value: 'Muuda',
	                            onClick: this.btnEditLapsClick,
	                            show: !isEditMode,
	                            style: buttonEditNom,
	                            disabled: false
	                        })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(Select, { title: 'Kood:',
	                            name: 'lapse_kaart_id',
	                            libs: 'lapse_kaart',
	                            data: nomData,
	                            value: self.docData.lapse_kaart_id || 0,
	                            defaultValue: self.docData.nimetus,
	                            ref: 'select-lapse_kaart_id',
	                            btnDelete: isEditMode,
	                            onChange: self.handleInputChange,
	                            readOnly: !isEditMode })
	                    ),
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(ButtonEdit, {
	                            ref: 'btnEdit',
	                            value: 'Muuda',
	                            onClick: this.btnEditNomClick,
	                            show: !isEditMode,
	                            style: buttonEditNom,
	                            disabled: false
	                        })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(InputNumber, { ref: 'input-kogus',
	                            title: 'Kogus:',
	                            name: 'kogus',
	                            value: Number(self.docData.kogus) || Number(null),
	                            readOnly: !isEditMode,
	                            onChange: self.handleInputChange }),
	                        !self.docData.id || Boolean(self.docData.umberarvestus) ? React.createElement(InputNumber, { ref: 'input-hind',
	                            title: 'Summa:',
	                            name: 'hind',
	                            value: Number(self.docData.hind) || Number(0),
	                            readOnly: !isEditMode,
	                            onChange: self.handleInputChange }) : null,
	                        React.createElement(CheckBox, { title: 'Kas \xFCmberarvestus?',
	                            name: 'umberarvestus',
	                            value: Boolean(self.docData.umberarvestus),
	                            ref: 'checkbox_kas_umberarvestus',
	                            onChange: self.handleInputChange,
	                            readOnly: !isEditMode
	                        }),
	                        React.createElement(InputNumber, { ref: 'input-kuu',
	                            title: 'Kuu:',
	                            name: 'kuu',
	                            value: Number(self.docData.kuu) || Number(kuu),
	                            readOnly: !isEditMode,
	                            onChange: self.handleInputChange }),
	                        React.createElement(InputNumber, { ref: 'input-aasta',
	                            title: 'Aasta:',
	                            name: 'aasta',
	                            value: Number(self.docData.aasta) || Number(aasta),
	                            readOnly: !isEditMode,
	                            onChange: self.handleInputChange })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(TextArea, { title: 'M\xE4rkused',
	                        name: 'muud',
	                        ref: 'textarea-muud',
	                        onChange: self.handleInputChange,
	                        value: self.docData.muud || '',
	                        readOnly: !isEditMode })
	                )
	            );
	        }
	    }, {
	        key: 'handlePageClick',
	        value: function handlePageClick(pageDocTypeId) {
	            //        document.location.href = `/lapsed/${pageDocTypeId}/`;//@todo Обновить
	            this.props.history.push('/lapsed/' + pageDocTypeId);
	        }

	        // обработчик события клик на гриде родителей

	    }, {
	        key: 'handleGridBtnClick',
	        value: function handleGridBtnClick(btnName, activeRow, id, docTypeId) {
	            switch (btnName) {
	                case "edit":
	                    this.props.history.push('/lapsed/' + docTypeId + '/' + id + '/0');
	                    break;
	                case "add":
	                    this.props.history.push('/lapsed/' + docTypeId + '/0/' + this.state.docId);
	                    break;
	                default:
	                    console.log('Vigane click');
	            }
	        }

	        //обработчик события по клику кнопки Редактирование сноменклатуры

	    }, {
	        key: 'btnEditNomClick',
	        value: function btnEditNomClick() {
	            var docId = this.refs['document'].docData.lapse_kaart_id;

	            // осуществит переход на карточку контр-агента
	            this.props.history.push('/lapsed/lapse_kaart/' + docId);
	        }

	        //обработчик события по клику кнопки Редактирование ребенка

	    }, {
	        key: 'btnEditLapsClick',
	        value: function btnEditLapsClick() {
	            var docLapsId = this.refs['document'].docData.parentid;

	            // осуществит переход на карточку контр-агента
	            this.props.history.push('/lapsed/laps/' + docLapsId);
	        }
	    }, {
	        key: 'lapsIdChangehandler',
	        value: function lapsIdChangehandler(inputName, inputValue) {
	            var Doc = this.refs['document'];

	            // отдать значение документу
	            Doc.handleInputChange(inputName, inputValue);

	            // обновить справочник
	            Doc.createLibs();
	        }
	    }]);

	    return Laps;
	}(React.PureComponent);

	Laps.propTypes = {
	    docId: PropTypes.number,
	    initData: PropTypes.object,
	    userData: PropTypes.object
	};

	Laps.defaultProps = {
	    params: { docId: 0 },
	    initData: {},
	    userData: {}
	};

	module.exports = Laps;

/***/ }),
/* 260 */
/***/ (function(module, exports) {

	'use strict';module.exports={docRow:{display:'flex',flexDirection:'row'/*
	                border: '1px solid blue'
	        */},docColumn:{display:'flex',flexDirection:'column',/*
	                border: '1px solid yellow',
	        */width:'50%'},doc:{display:'flex',flexDirection:'column'/*
	                border: '1px solid brown'
	        */},grid:{mainTable:{width:'100%'},headerTable:{width:'100%'},gridContainer:{width:'100%'}},gridRow:{/*
	                border: '1px solid black',
	        */backgroundColor:'white',position:'relative',margin:'10% 30% 10% 30%',width:'auto',opacity:'1',top:'100px'},btnEditNom:{width:'min-content'}};

/***/ }),
/* 261 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(10);
	var DocumentRegister = __webpack_require__(235);

	var styles = __webpack_require__(262);
	var DOC_TYPE_ID = 'PAEVA_TAABEL';
	var DocContext = __webpack_require__(1);

	/**
	 * Класс реализует документ справочника признаков.
	 */

	var Documents = function (_React$PureComponent) {
	    _inherits(Documents, _React$PureComponent);

	    function Documents(props) {
	        _classCallCheck(this, Documents);

	        var _this = _possibleConstructorReturn(this, (Documents.__proto__ || Object.getPrototypeOf(Documents)).call(this, props));

	        _this.state = {
	            kogus: 0
	        };
	        _this.renderer = _this.renderer.bind(_this);

	        return _this;
	    }

	    _createClass(Documents, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(
	                'div',
	                null,
	                React.createElement(DocumentRegister, { initData: this.props.initData,
	                    history: this.props.history ? this.props.history : null,
	                    module: this.props.module,
	                    ref: 'register',
	                    docTypeId: DOC_TYPE_ID,
	                    style: styles,
	                    render: this.renderer })
	            );
	        }

	        // custom render

	    }, {
	        key: 'renderer',
	        value: function renderer(self) {
	            return null;
	        }
	    }]);

	    return Documents;
	}(React.PureComponent);

	module.exports = Documents;

/***/ }),
/* 262 */
/***/ (function(module, exports) {

	'use strict';module.exports={grid:{mainTable:{width:'100%',td:{border:'1px solid lightGrey',display:'table-cell',paddingLeft:'5px'}},headerTable:{width:'100%'},gridContainer:{width:'95%'}},total:{width:'auto'}};

/***/ }),
/* 263 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var PropTypes = __webpack_require__(33);
	var React = __webpack_require__(10);
	var DOC_TYPE_ID = 'PAEVA_TAABEL';

	var DocRights = __webpack_require__(198);
	var checkRights = __webpack_require__(199);
	var DocContext = __webpack_require__(1);

	var docRights = DocRights[DOC_TYPE_ID] ? DocRights[DOC_TYPE_ID] : [];

	var DocumentTemplate = __webpack_require__(197),
	    InputNumber = __webpack_require__(221),
	    ButtonEdit = __webpack_require__(84),
	    BtnArvesta = __webpack_require__(244),
	    Select = __webpack_require__(215),
	    InputDate = __webpack_require__(217),
	    InputText = __webpack_require__(219),
	    TextArea = __webpack_require__(226),
	    DataGrid = __webpack_require__(170),
	    ButtonSetAll = __webpack_require__(82),
	    styles = __webpack_require__(264);
	var Loading = __webpack_require__(253);

	var LIBRARIES = __webpack_require__(193)[DOC_TYPE_ID].LIBRARIES;

	var PaevaTaabel = function (_React$PureComponent) {
	    _inherits(PaevaTaabel, _React$PureComponent);

	    function PaevaTaabel(props) {
	        _classCallCheck(this, PaevaTaabel);

	        var _this = _possibleConstructorReturn(this, (PaevaTaabel.__proto__ || Object.getPrototypeOf(PaevaTaabel)).call(this, props));

	        _this.state = {
	            module: 'lapsed',
	            loadedData: false,
	            docId: props.docId ? props.docId : Number(props.match.params.docId),
	            grupp_id: null,
	            kpv: null,
	            isRebuild: false,
	            isInit: true,
	            kogus: 0,
	            covid: 0
	        };

	        _this.renderer = _this.renderer.bind(_this);
	        _this.handlePageClick = _this.handlePageClick.bind(_this);
	        _this.onClickHandler = _this.onClickHandler.bind(_this);
	        _this.handleGridRow = _this.handleGridRow.bind(_this);
	        _this.prepaireInitData = _this.prepaireInitData.bind(_this);
	        _this.handleGridCellClick = _this.handleGridCellClick.bind(_this);
	        _this.btnEditGruppClick = _this.btnEditGruppClick.bind(_this);
	        _this.handleHeaderClick = _this.handleHeaderClick.bind(_this);
	        _this.checkData = _this.checkData.bind(_this);

	        _this.pages = [{ pageName: 'Päeva taabel', docTypeId: DOC_TYPE_ID }];

	        _this.subtotals = ['osalemine', 'covid'];

	        return _this;
	    }

	    _createClass(PaevaTaabel, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            if (!this.state.lapsId && DocContext['laps']) {
	                //есть значение ид ребенка
	                this.setState({ lapsId: DocContext['laps'] });
	            }
	        }
	    }, {
	        key: 'componentDidUpdate',
	        value: function componentDidUpdate(prevProps, prevState) {
	            // обновим справочники ребенка
	            if (this.state.lapsId !== prevState.lapsId) {
	                var doc = this.refs['document'];
	                doc.createLibs();
	            }
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var filter = this.state.lapsId ? 'where lapsid = ' + this.state.lapsId : '';
	            return React.createElement(DocumentTemplate, { docId: this.state.docId,
	                ref: 'document',
	                docTypeId: DOC_TYPE_ID,
	                module: this.state.module,
	                initData: this.props.initData,
	                libs: LIBRARIES,
	                renderer: this.renderer,
	                handleGridBtnClick: this.handleGridBtnClick,
	                history: this.props.history,
	                isDisableSave: !this.state.docId,
	                isGridDataSave: true,
	                trigger: this.checkData

	            });
	        }

	        /**
	         * поправит данные для грида
	         */

	    }, {
	        key: 'prepaireInitData',
	        value: function prepaireInitData(self) {
	            if (self.docData.gridData && self.docData.gridData.length && self.docData.noms && self.docData.noms.length) {

	                // add column nomid to grid
	                self.docData.noms.forEach(function (nom) {
	                    var column = self.docData.gridConfig.find(function (row) {
	                        return row.id == String(nom.nom_id);
	                    });
	                    // отсекаем услуги, которые не определены как дневные и те, что уже обрабтаны
	                    if (nom.teenus && !column) {
	                        self.docData.gridConfig.push({
	                            id: String(nom.nom_id),
	                            name: nom.teenus,
	                            width: '50px',
	                            type: "boolean"
	                        });
	                    }
	                });

	                // кол-во услуг
	                self.docData.gridData = self.docData.gridData.map(function (row) {
	                    row.noms.forEach(function (nom) {
	                        if (row[String(nom.nom_id)]) {
	                            // juba olemas
	                        } else {
	                            row[String(nom.nom_id)] = !!nom.kogus;
	                        }
	                    });
	                    return row;
	                });
	                this.setState({ isInit: false });
	            }
	        }

	        /**
	         *Вернет кастомные компоненты документа
	         */

	    }, {
	        key: 'renderer',
	        value: function renderer(self) {
	            var _this2 = this;

	            var isEditMode = self.state.edited;
	            var userRoles = DocContext.userData ? DocContext.userData.roles : [];

	            // ждем загрузки библиотек и данных
	            if (!self || !self.docData || !self.state.loadedLibs) {
	                // не загружены данные
	                return React.createElement(
	                    'div',
	                    { style: styles.doc },
	                    React.createElement(Loading, { label: 'Laadimine...' })
	                );
	            }

	            // не успевает подгрузиться справочник, перегрузка формы
	            if (!self.libs['lapse_grupp'].length) {
	                setTimeout(function () {
	                    _this2.forceUpdate();
	                }, 1);
	            }

	            if (self.docData && self.docData.gridData && self.docData.gridData.length && (this.state.isInit || !isEditMode)) {
	                // преобразовываем данные
	                this.prepaireInitData(self);

	                // найдем числовые поля и поставим их в массив для передачи в грид для суммирования итогов
	                var reg = /^\d+$/; // только номера

	                self.docData.gridConfig.forEach(function (row) {
	                    if (reg.test(row.id)) {
	                        if (!_this2.subtotals.some(function (item) {
	                            return item == row.id;
	                        })) {
	                            _this2.subtotals.push(row.id);
	                        }
	                    }
	                });
	            }

	            this.setState({ grupp_id: self.docData.grupp_id, kpv: self.docData.kpv });
	            var gridStyle = _extends({}, styles.grid.headerTable, styles.grid);

	            return React.createElement(
	                'div',
	                { style: styles.doc },
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(InputDate, { title: 'Kuup\xE4ev ',
	                            name: 'kpv',
	                            value: self.docData.kpv,
	                            ref: 'input-kpv',
	                            readOnly: !isEditMode,
	                            disabled: !!self.docData.id,
	                            onChange: self.handleInputChange })
	                    ),
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(InputText, { title: 'Staatus',
	                            name: 'status',
	                            value: self.docData.status || '',
	                            ref: 'input-status',
	                            readOnly: true })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(Select, { title: '\xDCksus:',
	                            name: 'grupp_id',
	                            libs: 'lapse_grupp',
	                            data: self.libs['lapse_grupp'],
	                            value: self.docData.grupp_id || 0,
	                            defaultValue: self.docData.yksys || '',
	                            ref: 'select-lapse_grupp',
	                            collId: 'id',
	                            btnDelete: isEditMode,
	                            onChange: self.handleInputChange,
	                            disabled: !!self.docData.id,
	                            readOnly: !isEditMode
	                        })
	                    ),
	                    !self.docData.id && self.docData.grupp_id && checkRights(userRoles, docRights, 'add') ? React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(BtnArvesta, {
	                            value: 'Arvesta taabel ?',
	                            onClick: this.onClickHandler.bind('arvesta'),
	                            showDate: false,
	                            style: styles.BtnArvesta,
	                            ref: 'btn-arvesta',
	                            key: 'key-arvesta'
	                        })
	                    ) : null,
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        checkRights(userRoles, docRights, 'edit') ? React.createElement(ButtonEdit, {
	                            ref: 'btnEdit',
	                            value: 'Muuda',
	                            onClick: this.btnEditGruppClick,
	                            show: !isEditMode,
	                            style: styles.btnEdit,
	                            disabled: false
	                        }) : null
	                    )
	                ),
	                self.docData.id && isEditMode ? React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement('div', { style: styles.docColumn }),
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(ButtonSetAll, {
	                            onClick: this.onClickHandler.bind('muuda'),
	                            style: styles.ButtonSetAll,
	                            value: 'Kas muuta veeru "Eriarvestus" väärtust?',
	                            ref: 'btn-muuda-covid',
	                            key: 'key-muuda-covid'
	                        })
	                    )
	                ) : null,
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(DataGrid, { source: 'details',
	                        gridData: self.docData.gridData,
	                        gridColumns: self.docData.gridConfig,
	                        showToolBar: false,
	                        handleGridRow: this.handleGridRow,
	                        onHeaderClick: this.handleHeaderClick,
	                        onClick: self.handleGridCellClick,
	                        readOnly: !isEditMode,
	                        style: gridStyle,
	                        isForUpdate: isEditMode,
	                        subtotals: this.subtotals,
	                        ref: 'data-grid' })
	                ),
	                self.docData.id ? React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(TextArea, { title: 'M\xE4rkused',
	                        name: 'muud',
	                        ref: 'textarea-muud',
	                        onChange: self.handleInputChange,
	                        value: self.docData.muud || '',
	                        readOnly: !isEditMode })
	                ) : null
	            );
	        }
	    }, {
	        key: 'handlePageClick',
	        value: function handlePageClick(pageDocTypeId) {
	            this.props.history.push('/lapsed/' + pageDocTypeId);
	        }
	    }, {
	        key: 'onClickHandler',
	        value: function onClickHandler(name, value) {
	            var _this3 = this;

	            if (name == 'Arvesta taabel ?') {
	                // действие для кнопки arvesta
	                var Doc = this.refs['document'];
	                var api = '/newApi/task/arvestaPaevaTaabel';

	                Doc.fetchData('Post', api, { seisuga: this.state.kpv, docId: this.state.grupp_id }).then(function (response) {
	                    if (response.data && response.data.error_code) {
	                        Doc.setState({
	                            warning: response.data.error_message,
	                            warningType: 'error'
	                        }, function () {
	                            _this3.forceUpdate();
	                        });
	                    } else {

	                        var docId = response.data && response.data.result ? response.data.result : null;
	                        if (docId) {
	                            // reload / redirect
	                            var current = '/lapsed/paeva_taabel/' + docId;
	                            _this3.props.history.replace('/reload');
	                            setTimeout(function () {
	                                _this3.props.history.replace(current);
	                            });
	                        }
	                    }
	                });
	            } else {
	                var data = this.refs['document'].docData.gridData;
	                if (data) {
	                    var covid = !this.state.covid;
	                    // пройти по всем записям и поменять значение наоборот
	                    data.forEach(function (row, index) {
	                        if (!row.osalemine) {
	                            _this3.checkData(null, index, 'covid', covid);
	                        }
	                    });
	                    this.setState({ covid: covid });
	                }
	            }
	        }

	        /**
	         * будет вызвана триггером при ихменении. Проврит поля посещаемости и если нет, то проставит нет всем услушам
	         * @param self
	         */

	    }, {
	        key: 'checkData',
	        value: function checkData(self, idx, columnId, value) {
	            var data = this.refs['document'].docData;
	            var isEditMode = this.refs['document'].state.edited;

	            if (!isEditMode) {
	                // не в режиме редактирования
	                return false;
	            }

	            if (columnId && columnId == 'osalemine') {
	                if (!data.gridData[idx].osalemine) {
	                    // обнулить значения всех услуг
	                    var _iteratorNormalCompletion = true;
	                    var _didIteratorError = false;
	                    var _iteratorError = undefined;

	                    try {
	                        for (var _iterator = Object.entries(data.gridData[idx])[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	                            var _ref = _step.value;

	                            var _ref2 = _slicedToArray(_ref, 2);

	                            var key = _ref2[0];
	                            var _value = _ref2[1];

	                            if (!isNaN(key) && !!_value) {
	                                // посещения нет, а значение положительное. меняем
	                                data.gridData[idx][key] = !_value;
	                            }
	                        }
	                    } catch (err) {
	                        _didIteratorError = true;
	                        _iteratorError = err;
	                    } finally {
	                        try {
	                            if (!_iteratorNormalCompletion && _iterator.return) {
	                                _iterator.return();
	                            }
	                        } finally {
	                            if (_didIteratorError) {
	                                throw _iteratorError;
	                            }
	                        }
	                    }
	                }

	                if (data.gridData[idx].osalemine && data.gridData[idx].covid) {
	                    // не может ковид быть, если нет отсутствия
	                    data.gridData[idx].covid = 0;
	                }
	            }

	            // обработка поля кодид
	            if (columnId && columnId == 'covid') {
	                if (!data.gridData[idx].osalemine) {
	                    // если есть посещение, то не может быть ковид
	                    data.gridData[idx].covid = value;
	                } else {
	                    // не меняем значение ковид, так как есть посещение
	                    data.gridData[idx].covid = !value;
	                }
	            }
	        }
	    }, {
	        key: 'handleGridRow',
	        value: function handleGridRow(gridEvent) {
	            this.setState({ gridRowEdit: true, gridRowEvent: gridEvent });
	        }

	        /**
	         * обработчик события клика по колонке
	         * @param header
	         */

	    }, {
	        key: 'handleHeaderClick',
	        value: function handleHeaderClick(header) {
	            var isEditeMode = this.refs['document'].state.edited;
	            if (!isEditeMode) {
	                console.log('not in edit mode');
	                return;
	            }

	            var column = header[0].column;
	            // проверим на колонку со значением кол-ва услуг
	            if (isNaN(Number(column))) {
	                console.log('vale verg, ignoreerime');
	                return;
	            }

	            // надо пройти циклом и поменять значение в указанном поле
	            var data = this.refs['document'].docData;
	            if (data && data.gridData && data.gridData.length) {
	                data.gridData.forEach(function (row) {
	                    if (row[column] !== null && row[column] !== undefined) {
	                        row[column] = !row[column];
	                    }
	                });
	            }
	        }
	    }, {
	        key: 'handleGridCellClick',
	        value: function handleGridCellClick(action, docId, idx, columnId) {
	            gridData[idx][columnId] = !gridData[idx][columnId];
	        }

	        /**
	         *     /обработчик события клиска на кнопке редактирования группы
	         */

	    }, {
	        key: 'btnEditGruppClick',
	        value: function btnEditGruppClick() {
	            var docGruppId = this.refs['document'].docData.grupp_id;

	            // осуществит переход на карточку
	            this.props.history.push('/' + this.state.module + '/lapse_grupp/' + docGruppId);
	        }
	    }]);

	    return PaevaTaabel;
	}(React.PureComponent);

	PaevaTaabel.propTypes = {
	    docId: PropTypes.number,
	    initData: PropTypes.object,
	    userData: PropTypes.object
	};

	PaevaTaabel.defaultProps = {
	    params: { docId: 0 },
	    initData: {},
	    userData: {}
	};

	module.exports = PaevaTaabel;

/***/ }),
/* 264 */
/***/ (function(module, exports) {

	'use strict';module.exports={docRow:{display:'flex',flexDirection:'row'/*
	                border: '1px solid blue'
	        */},docColumn:{display:'flex',flexDirection:'column',/*
	                border: '1px solid yellow',
	        */width:'50%'},doc:{display:'flex',flexDirection:'column'/*
	                border: '1px solid brown'
	        */},grid:{mainTable:{tableLayout:'fixed',width:'-webkit-calc(100% + 16px)',/*
	            position:'relative',
	*/borderCollapse:'collapse',marginBottom:'10px'},headerTable:{tableLayout:'fixed',width:'100%',borderCollapse:'collapse'},gridContainer:{width:'100%'},boolSumbol:{yes:{value:'\u2714',color:'#007300'},no:{value:null,color:'red'}}},gridRow:{/*
	                border: '1px solid black',
	        */backgroundColor:'white',position:'relative',margin:'10% 30% 10% 30%',width:'auto',opacity:'1',top:'100px'},btnEdit:{width:'min-content'},ButtonSetAll:{width:'fit-content'},BtnArvesta:{width:'fit-content'},total:{width:'auto'}};

/***/ }),
/* 265 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var PropTypes = __webpack_require__(33);
	var React = __webpack_require__(10);

	var DocumentTemplate = __webpack_require__(197),
	    InputText = __webpack_require__(219),
	    ButtonEdit = __webpack_require__(84),
	    SelectData = __webpack_require__(251),
	    Select = __webpack_require__(215),
	    TextArea = __webpack_require__(226),
	    DataGrid = __webpack_require__(170),
	    CheckBox = __webpack_require__(175),
	    Loading = __webpack_require__(253),
	    createEmptyFilterData = __webpack_require__(2),
	    styles = __webpack_require__(266);

	var _fetchData = __webpack_require__(51);

	var LIBRARIES = [];
	var DOCS = ['ARV', 'SMK', 'VMK'];
	var DocContext = __webpack_require__(1);

	var Vanem = function (_React$PureComponent) {
	    _inherits(Vanem, _React$PureComponent);

	    function Vanem(props) {
	        _classCallCheck(this, Vanem);

	        var _this = _possibleConstructorReturn(this, (Vanem.__proto__ || Object.getPrototypeOf(Vanem)).call(this, props));

	        _this.state = {
	            loadedData: false,
	            docId: props.docId ? props.docId : Number(props.match.params.docId),
	            lapsId: null,
	            module: 'lapsed'
	        };

	        _this.renderer = _this.renderer.bind(_this);
	        _this.handleLasteGridBtnClick = _this.handleLasteGridBtnClick.bind(_this);
	        _this.btnEditAsutusClick = _this.btnEditAsutusClick.bind(_this);
	        _this.setFilter = _this.setFilter.bind(_this);

	        _this.pages = [{ pageName: 'Vanem kaart', docTypeId: 'VANEM' }];
	        return _this;
	    }

	    _createClass(Vanem, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            if (this.props.history && this.props.history.location.state) {
	                var lapsId = this.props.history.location.state.lapsId;
	                var _module = this.props.history.location.state.module;
	                this.setState({ lapsId: lapsId, module: _module });
	            }
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var initData = this.props.initData ? this.props.initData : {};

	            return React.createElement(DocumentTemplate, { docId: this.state.docId,
	                ref: 'document',
	                docTypeId: 'VANEM',
	                history: this.props.history,
	                module: this.state.module,
	                userData: this.props.userData,
	                initData: initData,
	                libs: LIBRARIES,
	                pages: this.pages,
	                renderer: this.renderer,
	                handleGridBtnClick: this.handleLasteGridBtnClick
	            });
	        }

	        /**
	         *Вернет кастомные компоненты документа
	         */

	    }, {
	        key: 'renderer',
	        value: function renderer(self) {
	            if (!self || self.docData.vanem_nimi == 'undefined') {
	                // не загружены данные
	                return React.createElement(
	                    'div',
	                    { style: styles.doc },
	                    React.createElement(Loading, { label: 'Laadimine...' })
	                );
	            }

	            var isEditMode = self.state.edited,
	                gridLasteData = self.docData.lapsed,
	                gridLasteColumns = self.docData.gridConfig;

	            if (this.state.lapsId) {
	                self.docData.parentid = this.state.lapsId;
	            }

	            if (self.docData.vanem_nimi) {
	                // наложим фильтры
	                this.setFilter(self.docData.vanem_nimi);
	            }

	            return React.createElement(
	                'div',
	                { style: styles.doc },
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(SelectData, { title: 'Vanem:',
	                            name: 'asutusid',
	                            libName: 'asutused',
	                            history: this.props.history,
	                            sqlFields: ['nimetus', 'regkood'],
	                            data: [],
	                            value: self.docData.asutusid || 0,
	                            defaultValue: self.docData.vanem_nimi,
	                            boundToGrid: 'nimetus',
	                            boundToData: 'vanem_nimi',
	                            ref: 'select-asutusid',
	                            btnDelete: false,
	                            onChange: self.handleInputChange,
	                            readOnly: !isEditMode })
	                    ),
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(ButtonEdit, {
	                            ref: 'btnEdit',
	                            value: 'Muuda',
	                            onClick: this.btnEditAsutusClick,
	                            show: !isEditMode,
	                            style: styles.btnEdit,
	                            disabled: false
	                        })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(InputText, { title: 'Sugulus:',
	                            name: 'suhtumine',
	                            value: self.docData.suhtumine || '',
	                            ref: 'input-suhtumine',
	                            readOnly: !isEditMode,
	                            onChange: self.handleInputChange }),
	                        React.createElement(CheckBox, { title: 'Arveldus:',
	                            name: 'arved',
	                            value: Boolean(self.docData.arved),
	                            ref: 'checkbox_arved',
	                            onChange: self.handleInputChange,
	                            readOnly: !isEditMode
	                        }),
	                        self.docData.arved ? React.createElement(CheckBox, { title: 'Print paberil ?',
	                            name: 'kas_paberil',
	                            value: Boolean(self.docData.kas_paberil),
	                            ref: 'checkbox_kas_paberil',
	                            onChange: self.handleInputChange,
	                            readOnly: !isEditMode
	                        }) : null,
	                        self.docData.arved ? React.createElement(CheckBox, { title: 'Kas email ?',
	                            name: 'kas_email',
	                            value: Boolean(self.docData.kas_email),
	                            ref: 'checkbox_kas_email',
	                            onChange: self.handleInputChange,
	                            readOnly: !isEditMode
	                        }) : null,
	                        React.createElement(CheckBox, { title: 'Lapse seaduslik esindaja',
	                            name: 'kas_esindaja',
	                            value: Boolean(self.docData.kas_esindaja),
	                            ref: 'checkbox_kas_esindaja',
	                            onChange: self.handleInputChange,
	                            readOnly: !isEditMode
	                        })
	                    )
	                ),
	                self.docData.arved ? React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(CheckBox, { title: 'E-arve ?',
	                            name: 'kas_earve',
	                            value: Boolean(self.docData.kas_earve),
	                            ref: 'checkbox_kas_earve',
	                            onChange: self.handleInputChange,
	                            readOnly: !isEditMode
	                        })
	                    )
	                ) : null,
	                self.docData.arved && self.docData.kas_earve ? React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(Select, { title: 'E-arve pank:',
	                            name: 'pank',
	                            data: [{ id: 0, kood: '', nimetus: '' }, {
	                                id: 1,
	                                kood: 'SWED',
	                                nimetus: 'Swedpank'
	                            }, { id: 2, kood: 'SEB', nimetus: 'Seb pank' }],
	                            collId: 'kood',
	                            value: self.docData.pank || '',
	                            defaultValue: self.docData.pank,
	                            ref: 'select-pank',
	                            btnDelete: isEditMode,
	                            onChange: self.handleInputChange,
	                            readOnly: !isEditMode,
	                            style: styles.pank
	                        })
	                    ),
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(InputText, { title: 'E-arve IBAN:',
	                            name: 'iban',
	                            value: self.docData.iban || '',
	                            ref: 'input-iban',
	                            readOnly: !isEditMode,
	                            onChange: self.handleInputChange })
	                    )
	                ) : null,
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(TextArea, { title: 'M\xE4rkused',
	                        name: 'muud',
	                        ref: 'textarea-muud',
	                        onChange: self.handleInputChange,
	                        value: self.docData.muud || '',
	                        readOnly: !isEditMode })
	                ),
	                React.createElement(
	                    'div',
	                    {
	                        style: styles.docRow },
	                    React.createElement(
	                        'label',
	                        {
	                            ref: 'label' },
	                        'Lapsed'
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(DataGrid, { source: 'lapsed',
	                        gridData: gridLasteData,
	                        gridColumns: gridLasteColumns,
	                        showToolBar: !isEditMode,
	                        handleGridBtnClick: self.handleGridBtnClick,
	                        readOnly: !isEditMode,
	                        style: styles.grid.headerTable,
	                        docTypeId: 'laps',
	                        ref: 'laspsed-data-grid' })
	                )
	            );
	        }
	    }, {
	        key: 'handleLasteGridBtnClick',
	        value: function handleLasteGridBtnClick(btnName, activeRow, id, docTypeId) {
	            var _this2 = this;

	            switch (btnName) {
	                case "edit":
	                    this.props.history.push({
	                        pathname: '/lapsed/' + docTypeId + '/' + id,
	                        state: { vanemId: this.state.docId, module: this.state.module }
	                    });

	                    break;
	                case "Muuda":
	                    this.props.history.push({
	                        pathname: '/lapsed/' + docTypeId + '/' + id,
	                        state: { vanemId: this.state.docId, module: this.state.module }
	                    });

	                    break;
	                case "add":
	                    this.props.history.push({
	                        pathname: '/lapsed/' + docTypeId + '/0',
	                        state: { vanemId: this.state.docId, module: this.state.module }
	                    });
	                    break;
	                case "delete":
	                    this.fetchData(docTypeId, id).then(function (response) {
	                        var isTrue = response && response.status && response.status === 200 ? 'Ok' : 'Error';
	                        var errorMessage = 'Viga';
	                        if (isTrue && response.data && response.data.error) {
	                            // error
	                            isTrue = false;
	                            errorMessage = response.data.error_message;
	                        }
	                        var Doc = _this2.refs['document'];
	                        // обновим справочник
	                        Doc.loadLibs('vanem');

	                        if (isTrue === 'Ok') {

	                            Doc.setState({
	                                reloadData: true,
	                                warning: 'Kiri kustutatud',
	                                warningType: 'ok'
	                            }, function () {
	                                setTimeout(function () {
	                                    var current = _this2.props.location.pathname;
	                                    _this2.props.history.replace('/reload');
	                                    setTimeout(function () {
	                                        _this2.props.history.replace(current);
	                                    });
	                                }, 2000);
	                            });
	                        } else {
	                            Doc.setState({
	                                reloadData: false,
	                                warning: '' + errorMessage,
	                                warningType: 'error'
	                            });
	                        }
	                    });
	                    break;

	                    break;
	                default:
	                    console.log('Vigane click');
	            }
	        }

	        // отправит запрос на удаление с параметром тип документа и ид

	    }, {
	        key: 'fetchData',
	        value: function fetchData(docTypeId, id) {

	            var url = '/newApi/delete';

	            var params = {
	                parameter: docTypeId,
	                module: 'lapsed',
	                userId: DocContext.userData.userId,
	                uuid: DocContext.userData.uuid,
	                docId: id
	            };

	            return _fetchData['fetchDataPost'](url, params);
	        }

	        // обработчик события клиска на кнопке редактирования контр-агента

	    }, {
	        key: 'btnEditAsutusClick',
	        value: function btnEditAsutusClick() {
	            var docAsutusId = this.refs['document'].docData.asutusid;

	            // осуществит переход на карточку контр-агента
	            this.props.history.push('/lapsed/asutused/' + docAsutusId);
	        }

	        /**
	         * установим фильтр на документа
	         */

	    }, {
	        key: 'setFilter',
	        value: function setFilter(nimi) {

	            // проверим наличие фильтра
	            DOCS.forEach(function (doc) {
	                if (!DocContext.filter[doc] || !DocContext.filter[doc].length) {
	                    // создаем пустой фильтр для заданного типа
	                    DocContext.filter[doc] = createEmptyFilterData(DocContext.gridConfig[doc], [], doc);
	                }

	                // накладываем фильтр
	                DocContext.filter[doc].forEach(function (row) {
	                    if (row.id == 'asutus') {
	                        row.value = nimi;
	                    }
	                });
	            });
	        }
	    }]);

	    return Vanem;
	}(React.PureComponent);

	Vanem.propTypes = {
	    docId: PropTypes.number,
	    initData: PropTypes.object,
	    userData: PropTypes.object
	};

	Vanem.defaultProps = {
	    params: { docId: 0 },
	    initData: {},
	    userData: {}
	};

	module.exports = Vanem;

/***/ }),
/* 266 */
/***/ (function(module, exports) {

	'use strict';module.exports={docRow:{display:'flex',flexDirection:'row'/*
	                border: '1px solid blue'
	        */},docColumn:{display:'flex',flexDirection:'column',/*
	                border: '1px solid yellow',
	        */width:'50%'},doc:{display:'flex',flexDirection:'column'/*
	                border: '1px solid brown'
	        */},grid:{mainTable:{width:'100%'},headerTable:{width:'100%'},gridContainer:{width:'100%'}},gridRow:{/*
	                border: '1px solid black',
	        */backgroundColor:'white',position:'relative',margin:'10% 30% 10% 30%',width:'auto',opacity:'1',top:'100px'},btnEdit:{width:'min-content'},pank:{width:'30%'}};

/***/ }),
/* 267 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(10);
	var DocumentRegister = __webpack_require__(235);

	var styles = __webpack_require__(268);
	var ButtonUpload = __webpack_require__(245);
	var ToolbarContainer = __webpack_require__(78);
	var InputText = __webpack_require__(219);

	var DOC_TYPE_ID = 'VANEM';
	var DocRights = __webpack_require__(198);
	var checkRights = __webpack_require__(199);
	var DocContext = __webpack_require__(1);
	var docRights = DocRights[DOC_TYPE_ID] ? DocRights[DOC_TYPE_ID] : [];

	/**
	 * Класс реализует документ справочника признаков.
	 */

	var Documents = function (_React$PureComponent) {
	    _inherits(Documents, _React$PureComponent);

	    function Documents(props) {
	        _classCallCheck(this, Documents);

	        var _this = _possibleConstructorReturn(this, (Documents.__proto__ || Object.getPrototypeOf(Documents)).call(this, props));

	        _this.renderer = _this.renderer.bind(_this);
	        _this.state = {
	            read: 0,
	            filtri_read: 0
	        };

	        return _this;
	    }

	    _createClass(Documents, [{
	        key: 'render',
	        value: function render() {
	            var userRoles = DocContext.userData ? DocContext.userData.roles : [];

	            var toolbarParams = {
	                btnAdd: {
	                    show: false,
	                    disabled: false
	                },
	                btnEdit: {
	                    show: checkRights(userRoles, docRights, 'edit'),
	                    disabled: false
	                },
	                btnDelete: {
	                    show: checkRights(userRoles, docRights, 'delete'),
	                    disabled: false
	                },
	                btnPrint: {
	                    show: true,
	                    disabled: false
	                }
	            };

	            return React.createElement(
	                'div',
	                null,
	                React.createElement(DocumentRegister, { initData: this.props.initData,
	                    userData: this.props.userData,
	                    history: this.props.history ? this.props.history : null,
	                    module: this.props.module,
	                    ref: 'register',
	                    docTypeId: DOC_TYPE_ID,
	                    style: styles,
	                    toolbarParams: toolbarParams,
	                    render: this.renderer }),
	                React.createElement(InputText, { title: 'Filtri all / read kokku:',
	                    name: 'read_kokku',
	                    style: styles.total,
	                    ref: 'input-read',
	                    value: String(this.state.filtri_read + '/' + this.state.read),
	                    disabled: true })
	            );
	        }
	    }, {
	        key: 'renderer',
	        value: function renderer(self) {
	            if (self && self.gridData) {
	                var rows_total = self.gridData.length && self.gridData[0].rows_total ? self.gridData[0].rows_total : 0;
	                this.setState({
	                    read: rows_total,
	                    filtri_read: self.gridData.length && self.gridData[0].filter_total ? self.gridData[0].filter_total : rows_total
	                });
	            }

	            var userRoles = DocContext.userData ? DocContext.userData.roles : [];

	            return React.createElement(
	                ToolbarContainer,
	                null,
	                checkRights(userRoles, docRights, 'importLepingud') ? React.createElement(ButtonUpload, {
	                    ref: 'btnUploadSwed',
	                    docTypeId: 'import_leping_swed',
	                    onClick: this.handleClick,
	                    show: true,
	                    value: 'Loe panga lepingud (SWED)',
	                    mimeTypes: '.csv'
	                }) : null,
	                checkRights(userRoles, docRights, 'importLepingud') ? React.createElement(ButtonUpload, {
	                    ref: 'btnUploadSeb',
	                    docTypeId: 'import_leping_seb',
	                    onClick: this.handleClick,
	                    show: true,
	                    value: 'Loe panga lepingud (SEB)',
	                    mimeTypes: '.csv'
	                }) : null,
	                checkRights(userRoles, docRights, 'importVanemateRegister') ? React.createElement(ButtonUpload, {
	                    ref: 'btnUpload',
	                    docTypeId: DOC_TYPE_ID,
	                    onClick: this.handleClick,
	                    show: true,
	                    mimeTypes: '.csv'
	                }) : null
	            );
	        }
	    }]);

	    return Documents;
	}(React.PureComponent);

	module.exports = Documents;

/***/ }),
/* 268 */
/***/ (function(module, exports) {

	'use strict';module.exports={grid:{mainTable:{width:'100%',td:{border:'1px solid lightGrey',display:'table-cell',paddingLeft:'5px'}},headerTable:{width:'100%'},gridContainer:{width:'100%'}},total:{width:'auto'}};

/***/ }),
/* 269 */,
/* 270 */,
/* 271 */,
/* 272 */,
/* 273 */,
/* 274 */,
/* 275 */,
/* 276 */,
/* 277 */,
/* 278 */,
/* 279 */,
/* 280 */,
/* 281 */,
/* 282 */,
/* 283 */,
/* 284 */,
/* 285 */,
/* 286 */,
/* 287 */,
/* 288 */,
/* 289 */,
/* 290 */,
/* 291 */,
/* 292 */,
/* 293 */,
/* 294 */,
/* 295 */,
/* 296 */,
/* 297 */,
/* 298 */,
/* 299 */,
/* 300 */,
/* 301 */,
/* 302 */,
/* 303 */,
/* 304 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(10);
	var DocumentRegister = __webpack_require__(235);
	var ButtonUpload = __webpack_require__(245);
	var ToolbarContainer = __webpack_require__(78);

	var styles = __webpack_require__(305);
	var DOC_TYPE_ID = 'LAPSE_GRUPP';

	var DocRights = __webpack_require__(198);
	var checkRights = __webpack_require__(199);
	var DocContext = __webpack_require__(1);

	var docRights = DocRights[DOC_TYPE_ID] ? DocRights[DOC_TYPE_ID] : [];

	/**
	 * Класс реализует документ справочника признаков.
	 */

	var Documents = function (_React$PureComponent) {
	    _inherits(Documents, _React$PureComponent);

	    function Documents(props) {
	        _classCallCheck(this, Documents);

	        return _possibleConstructorReturn(this, (Documents.__proto__ || Object.getPrototypeOf(Documents)).call(this, props));
	    }

	    _createClass(Documents, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(DocumentRegister, { initData: this.props.initData,
	                userData: this.props.userData,
	                history: this.props.history ? this.props.history : null,
	                module: this.props.module,
	                ref: 'register',
	                docTypeId: DOC_TYPE_ID,
	                style: styles,
	                render: this.renderer });
	        }
	    }, {
	        key: 'renderer',
	        value: function renderer() {
	            var userRoles = DocContext.userData ? DocContext.userData.roles : [];

	            return React.createElement(
	                ToolbarContainer,
	                null,
	                checkRights(userRoles, docRights, 'importGroups') ? React.createElement(ButtonUpload, {
	                    ref: 'btnUpload',
	                    docTypeId: DOC_TYPE_ID,
	                    onClick: this.handleClick,
	                    show: true,
	                    mimeTypes: '.csv'
	                }) : null
	            );
	        }

	        /**
	         * кастомный обработчик события клик на кнопку импорта
	         */

	    }, {
	        key: 'handleClick',
	        value: function handleClick(result) {

	            //обновим данные
	            var Doc = this.refs['register'];
	            if (!Doc) {
	                return null;
	            }
	            if (result) {
	                Doc.setState({ warning: 'Edukalt:  ' + result + ': ', warningType: 'ok' });
	                setTimeout(function () {
	                    Doc.fetchData('selectDocs');
	                }, 10000);
	            }
	        }
	    }]);

	    return Documents;
	}(React.PureComponent);

	module.exports = Documents;

/***/ }),
/* 305 */
/***/ (function(module, exports) {

	'use strict';module.exports={grid:{mainTable:{width:'100%',td:{border:'1px solid lightGrey',display:'table-cell',paddingLeft:'5px'}},headerTable:{width:'100%'},gridContainer:{width:'100%'}}};

/***/ }),
/* 306 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var PropTypes = __webpack_require__(33);
	var React = __webpack_require__(10);
	var DocContext = __webpack_require__(1);

	var DocumentTemplate = __webpack_require__(197),
	    InputText = __webpack_require__(219),
	    Select = __webpack_require__(215),
	    InputNumber = __webpack_require__(221),
	    TextArea = __webpack_require__(226),
	    DataGrid = __webpack_require__(170),
	    ModalPage = __webpack_require__(168),
	    styles = __webpack_require__(307);

	var LIBRARIES = __webpack_require__(193).LAPSE_GRUPP.LIBRARIES;

	var LapseGrupp = function (_React$PureComponent) {
	    _inherits(LapseGrupp, _React$PureComponent);

	    function LapseGrupp(props) {
	        _classCallCheck(this, LapseGrupp);

	        var _this = _possibleConstructorReturn(this, (LapseGrupp.__proto__ || Object.getPrototypeOf(LapseGrupp)).call(this, props));

	        _this.state = {
	            loadedData: false,
	            docId: props.docId ? props.docId : Number(props.match.params.docId),
	            module: 'lapsed'
	        };

	        _this.renderer = _this.renderer.bind(_this);
	        _this.createGridRow = _this.createGridRow.bind(_this);
	        _this.gridValidateFields = _this.gridValidateFields.bind(_this);
	        _this.handlePageClick = _this.handlePageClick.bind(_this);

	        _this.pages = [{ pageName: 'Lapse grupp', docTypeId: 'LAPSE_GRUPP' }, { pageName: 'Laste taabel', handlePageClick: _this.handlePageClick, docTypeId: 'LAPSE_TAABEL' }];
	        return _this;
	    }

	    _createClass(LapseGrupp, [{
	        key: 'render',
	        value: function render() {
	            var initData = this.props.initData ? this.props.initData : {};

	            return React.createElement(DocumentTemplate, { docId: this.state.docId,
	                ref: 'document',
	                module: this.state.module,
	                docTypeId: 'LAPSE_GRUPP',
	                libs: LIBRARIES,
	                userData: this.props.userData,
	                pages: this.pages,
	                initData: initData,
	                renderer: this.renderer,
	                createGridRow: this.createGridRow,
	                gridValidator: this.gridValidateFields,
	                history: this.props.history,
	                focusElement: 'input-kood'
	            });
	        }

	        /**
	         *Вернет кастомные компоненты документа
	         */

	    }, {
	        key: 'renderer',
	        value: function renderer(self) {
	            var isEditMode = self.state.edited;

	            if ((self.docData.id === 0 || !self.docData.parentid) && this.state.lapsId) {
	                //new record
	                self.docData.parentid = this.state.lapsId;
	            }

	            var gridValue = void 0;
	            if (self.gridRowData) {
	                gridValue = self.gridRowData.id ? self.gridRowData.id : null;
	            }

	            // чистим кеш, чтобы информация при изменении была обновлена
	            if (self.docData && self.docData.id && DocContext.libs && DocContext.libs[self.docData.id]) {
	                delete DocContext.libs[self.docData.id];
	            }

	            return React.createElement(
	                'div',
	                { style: styles.doc },
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(InputText, { title: 'Kood:',
	                            name: 'kood',
	                            value: self.docData.kood || '',
	                            ref: 'input-kood',
	                            readOnly: !isEditMode,
	                            onChange: self.handleInputChange }),
	                        React.createElement(InputText, { title: 'Nimetus:',
	                            name: 'nimetus',
	                            value: self.docData.nimetus || '',
	                            ref: 'input-nimetus',
	                            readOnly: !isEditMode,
	                            onChange: self.handleInputChange }),
	                        React.createElement(Select, { title: 'Koolituse t\xFC\xFCp:',
	                            name: 'tyyp',
	                            data: self.libs['koolituse_tyyp'],
	                            value: self.docData.tyyp,
	                            ref: 'tyyp',
	                            collId: 'id',
	                            readOnly: !self.state.edited,
	                            onChange: self.handleInputChange }),
	                        React.createElement(
	                            'label',
	                            null,
	                            'All \xFCksused',
	                            React.createElement(InputText, { title: '',
	                                name: 'all_yksus_1',
	                                value: self.docData.all_yksus_1 || '',
	                                ref: 'input-all_yksus_1',
	                                readOnly: !isEditMode,
	                                onChange: self.handleInputChange }),
	                            React.createElement(InputText, { title: '',
	                                name: 'all_yksus_2',
	                                value: self.docData.all_yksus_2 || '',
	                                ref: 'input-all_yksus_2',
	                                readOnly: !isEditMode,
	                                onChange: self.handleInputChange }),
	                            React.createElement(InputText, { title: '',
	                                name: 'all_yksus_3',
	                                value: self.docData.all_yksus_3 || '',
	                                ref: 'input-all_yksus_3',
	                                readOnly: !isEditMode,
	                                onChange: self.handleInputChange }),
	                            React.createElement(InputText, { title: '',
	                                name: 'all_yksus_4',
	                                value: self.docData.all_yksus_4 || '',
	                                ref: 'input-all_yksus_4',
	                                readOnly: !isEditMode,
	                                onChange: self.handleInputChange }),
	                            React.createElement(InputText, { title: '',
	                                name: 'all_yksus_5',
	                                value: self.docData.all_yksus_5 || '',
	                                ref: 'input-all_yksus_5',
	                                readOnly: !isEditMode,
	                                onChange: self.handleInputChange })
	                        )
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(DataGrid, { source: 'teenused',
	                        gridData: self.docData.gridData,
	                        gridColumns: self.docData.gridConfig,
	                        showToolBar: isEditMode,
	                        createGridRow: this.createGridRow,
	                        handleGridRow: self.handleGridRow,
	                        handleGridBtnClick: self.handleGridBtnClick,
	                        readOnly: !isEditMode,
	                        style: styles.grid.headerTable,
	                        ref: 'data-grid' })
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(TextArea, { title: 'M\xE4rkused',
	                        name: 'muud',
	                        ref: 'textarea-muud',
	                        onChange: self.handleInputChange,
	                        value: self.docData.muud || '',
	                        readOnly: !isEditMode })
	                ),
	                self.state.gridRowEdit ? this.createGridRow(self) : null
	            );
	        }

	        /**
	         * формирует объекты модального окна редактирования строки грида
	         * @returns {XML}
	         */

	    }, {
	        key: 'createGridRow',
	        value: function createGridRow(self) {
	            var row = self.gridRowData ? self.gridRowData : {},
	                validateMessage = '',
	                // self.state.warning
	            buttonOkReadOnly = validateMessage.length > 0 || !self.state.checked,
	                modalObjects = ['btnOk', 'btnCancel'];

	            if (buttonOkReadOnly) {
	                // уберем кнопку Ок
	                modalObjects.splice(0, 1);
	            }

	            if (!row) return React.createElement('div', null);

	            return React.createElement(
	                'div',
	                { className: '.modalPage' },
	                React.createElement(
	                    ModalPage,
	                    {
	                        modalObjects: modalObjects,
	                        ref: 'modalpage-grid-row',
	                        show: true,
	                        modalPageBtnClick: self.modalPageClick,
	                        modalPageName: 'Rea lisamine / parandamine' },
	                    React.createElement(
	                        'div',
	                        { ref: 'grid-row-container' },
	                        self.state.gridWarning.length ? React.createElement(
	                            'div',
	                            { style: styles.docRow },
	                            React.createElement(
	                                'span',
	                                null,
	                                self.state.gridWarning
	                            )
	                        ) : null,
	                        React.createElement(
	                            'div',
	                            { style: styles.docRow },
	                            React.createElement(Select, { title: 'Teenus',
	                                name: 'nomid',
	                                libs: 'nomenclature',
	                                data: self.libs['nomenclature'],
	                                value: Number(row.nomid) || 0,
	                                defaultValue: row.kood || '',
	                                ref: 'nomid',
	                                collId: 'id',
	                                placeholder: 'Teenuse kood',
	                                onChange: self.handleGridRowChange })
	                        ),
	                        React.createElement(
	                            'div',
	                            { style: styles.docRow },
	                            React.createElement(InputNumber, { title: 'Kogus: ',
	                                name: 'kogus',
	                                value: Number(row.kogus) || 1,
	                                bindData: false,
	                                ref: 'kogus',
	                                onChange: self.handleGridRowInput })
	                        ),
	                        React.createElement(
	                            'div',
	                            { style: styles.docRow },
	                            React.createElement(InputNumber, { title: 'Hind: ',
	                                name: 'hind',
	                                value: Number(row.hind) || 0,
	                                bindData: false,
	                                ref: 'hind',
	                                onChange: self.handleGridRowInput })
	                        )
	                    ),
	                    React.createElement(
	                        'div',
	                        null,
	                        React.createElement(
	                            'span',
	                            null,
	                            validateMessage
	                        )
	                    )
	                )
	            );
	        }

	        /**
	         * валидатор для строки грида
	         * @returns {string}
	         */

	    }, {
	        key: 'gridValidateFields',
	        value: function gridValidateFields() {
	            var warning = '';
	            var doc = this.refs['document'];
	            if (doc && doc.gridRowData) {

	                // только после проверки формы на валидность
	                if (doc.gridRowData && !doc.gridRowData['nomid']) warning = warning + ' Puudub operatsioon';

	                //подставим наименование услогу

	                if (doc.gridRowData['nomid']) {

	                    var nomDataName = doc.libs['nomenclature'].find(function (lib) {
	                        return Number(lib.id) === Number(doc.gridRowData['nomid']);
	                    });

	                    doc.gridRowData['kood'] = nomDataName.kood;
	                    doc.gridRowData['nimetus'] = nomDataName.nimetus;

	                    if (!doc.gridRowData['hind']) {
	                        doc.gridRowData['hind'] = nomDataName.hind;
	                    }
	                }

	                if (!doc.gridRowData['kogus']) {
	                    doc.gridRowData['kogus'] = 1;
	                }
	            }
	            return warning;
	        }

	        /**
	         * обработчик клика на страницу
	         * @param pageDocTypeId
	         */

	    }, {
	        key: 'handlePageClick',
	        value: function handlePageClick(pageDocTypeId) {
	            // данные для фильтра
	            var yksus = this.refs['document'].docData.nimetus;

	            this.props.history.push({
	                pathname: '/lapsed/' + pageDocTypeId,
	                state: { yksus: yksus, type: 'text' }
	            });
	        }
	    }]);

	    return LapseGrupp;
	}(React.PureComponent);

	LapseGrupp.propTypes = {
	    docId: PropTypes.number,
	    initData: PropTypes.object,
	    userData: PropTypes.object
	};

	LapseGrupp.defaultProps = {
	    params: { docId: 0 },
	    initData: {},
	    userData: {}
	};

	module.exports = LapseGrupp;

/***/ }),
/* 307 */
/***/ (function(module, exports) {

	'use strict';module.exports={docRow:{display:'flex',flexDirection:'row'/*
	                border: '1px solid blue'
	        */},docColumn:{display:'flex',flexDirection:'column',/*
	                border: '1px solid yellow',
	        */width:'50%'},doc:{display:'flex',flexDirection:'column'/*
	                border: '1px solid brown'
	        */},grid:{mainTable:{width:'100%'},headerTable:{width:'100%'},gridContainer:{width:'100%'}},gridRow:{/*
	                border: '1px solid black',
	        */backgroundColor:'white',position:'relative',margin:'10% 30% 10% 30%',width:'auto',opacity:'1',top:'100px'},btnEditNom:{width:'min-content'},selectNom:{marginLeft:'10px'}};

/***/ }),
/* 308 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(10);
	var DocumentRegister = __webpack_require__(235);
	var BtnArvesta = __webpack_require__(244);
	var ToolbarContainer = __webpack_require__(78);
	var BtnEmail = __webpack_require__(208);
	var BtnPrint = __webpack_require__(207);
	var DocContext = __webpack_require__(1);

	var styles = __webpack_require__(309);
	var DOC_TYPE_ID = 'TEATIS';
	var EVENTS = [{ name: 'Tabeli koostamine', method: 'arvestaTaabel', docTypeId: 'lapse_taabel' }, { name: 'Arve koostamine', method: 'koostaArve', docTypeId: 'arv' }, { name: 'Ettemaksuarve koostamine', method: 'koostaEttemaksuArve', docTypeId: 'arv' }];

	/**
	 * Класс реализует документ справочника признаков.
	 */

	var Documents = function (_React$PureComponent) {
	    _inherits(Documents, _React$PureComponent);

	    function Documents(props) {
	        _classCallCheck(this, Documents);

	        var _this = _possibleConstructorReturn(this, (Documents.__proto__ || Object.getPrototypeOf(Documents)).call(this, props));

	        _this.onClickHandler = _this.onClickHandler.bind(_this);
	        _this.renderer = _this.renderer.bind(_this);
	        return _this;
	    }

	    _createClass(Documents, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(DocumentRegister, { initData: this.props.initData,
	                history: this.props.history ? this.props.history : null,
	                module: this.props.module,
	                ref: 'register',
	                docTypeId: DOC_TYPE_ID,
	                style: styles,
	                render: this.renderer });
	        }
	    }, {
	        key: 'renderer',
	        value: function renderer() {
	            return React.createElement(
	                ToolbarContainer,
	                null,
	                React.createElement(BtnArvesta, {
	                    value: 'Koosta teatised',
	                    onClick: this.onClickHandler,
	                    ref: 'btn-teatis'
	                }),
	                React.createElement(BtnEmail, {
	                    onClick: this.onClickHandler,
	                    ref: 'btnEmail',
	                    value: 'Email kõik valitud teatised'
	                }),
	                React.createElement(BtnPrint, {
	                    onClick: this.onClickHandler,
	                    ref: 'btnPrint',
	                    value: 'Trükk kõik valitud teatised'
	                })
	            );
	        }
	    }, {
	        key: 'onClickHandler',
	        value: function onClickHandler(event, seisuga) {
	            var Doc = this.refs['register'];
	            var ids = new Set(); // сюда пишем ид счетом, которые под обработку

	            switch (event) {
	                case 'Koosta teatised':

	                    // отправляем запрос на выполнение
	                    Doc.fetchData('calc/koostaTeatis', { seisuga: seisuga }).then(function (data) {
	                        if (data.result) {
	                            Doc.setState({ warning: 'Kokku arvestatud: ' + data.result, warningType: 'ok' });
	                        } else {
	                            if (data.error_message) {
	                                Doc.setState({ warning: 'Tekkis viga: ' + data.error_message, warningType: 'error' });
	                            } else {
	                                Doc.setState({ warning: '0 dokumendid koostatud', warningType: 'notValid' });
	                            }
	                        }
	                        Doc.fetchData('selectDocs');
	                    });
	                    break;
	                case 'Email kõik valitud teatised':

	                    // будет отправлено на почту  выбранные и только для эл.почты счета
	                    Doc.gridData.forEach(function (row) {
	                        if (row.select) {
	                            // выбрано для печати
	                            ids.add(row.id);
	                        }
	                    });

	                    // конвертация в массив
	                    ids = Array.from(ids);

	                    if (!ids.length) {
	                        Doc.setState({
	                            warning: 'Mitte ühtegi arve leidnum', // строка извещений
	                            warningType: 'notValid'
	                        });
	                    } else {
	                        // отправляем запрос на выполнение

	                        Doc.fetchData('email/teatis', ids).then(function (data) {
	                            if (data.result) {
	                                Doc.setState({ warning: 'Kokku saadetud teatised emailga: ' + data.result, warningType: 'ok' });
	                                Doc.fetchData('selectDocs');
	                            } else {
	                                console.error('email error', data);
	                                Doc.setState({ warning: 'Tekkis viga: ' + data.error_message, warningType: 'error' });
	                            }
	                        }).catch(function (error) {
	                            console.error('email error', error);
	                            Doc.setState({ warning: 'Tekkis viga: ' + error, warningType: 'error' });
	                        });
	                    }
	                    break;
	                case 'Trükk kõik valitud teatised':
	                    // Print

	                    // будет выведено на печать выбранные и только для печати счета
	                    Doc.gridData.forEach(function (row) {
	                        if (row.select) {
	                            // выбрано для печати
	                            ids.add(row.id);
	                        }
	                    });
	                    // конвертация в массив
	                    ids = Array.from(ids);

	                    if (ids.length > 0) {
	                        Doc.setState({
	                            warning: 'Leidsin ' + ids.length + ' teatised printimiseks', // строка извещений
	                            warningType: 'ok'
	                        }, function () {
	                            Doc.fetchData('selectDocs');
	                        });

	                        var url = '/multiple_print/' + DOC_TYPE_ID + '/' + DocContext.userData.uuid + '/' + ids;
	                        window.open('' + url);
	                    } else {
	                        Doc.setState({
	                            warning: 'Mitte ühtegi dokumend leidnum', // строка извещений
	                            warningType: 'notValid'
	                        });
	                    }

	            }
	        }
	    }]);

	    return Documents;
	}(React.PureComponent);

	module.exports = Documents;

/***/ }),
/* 309 */
/***/ (function(module, exports) {

	'use strict';module.exports={grid:{mainTable:{width:'100%',td:{border:'1px solid lightGrey',display:'table-cell',paddingLeft:'5px'}},headerTable:{width:'100%'},gridContainer:{width:'100%'}}};

/***/ }),
/* 310 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var PropTypes = __webpack_require__(33);
	var React = __webpack_require__(10);

	var DocumentTemplate = __webpack_require__(197),
	    SelectData = __webpack_require__(251),
	    InputDate = __webpack_require__(217),
	    InputText = __webpack_require__(219),
	    ButtonEdit = __webpack_require__(84),
	    TextArea = __webpack_require__(226),
	    relatedDocuments = __webpack_require__(229),
	    styles = __webpack_require__(311);

	var LIBDOK = 'TEATIS',
	    LIBRARIES = [];

	var now = new Date();

	var Teatis = function (_React$PureComponent) {
	    _inherits(Teatis, _React$PureComponent);

	    function Teatis(props) {
	        _classCallCheck(this, Teatis);

	        var _this = _possibleConstructorReturn(this, (Teatis.__proto__ || Object.getPrototypeOf(Teatis)).call(this, props));

	        _this.state = {
	            loadedData: false,
	            docId: props.docId ? props.docId : Number(props.match.params.docId),
	            lapsId: null,
	            module: 'lapsed'
	        };

	        _this.renderer = _this.renderer.bind(_this);
	        _this.handlePageClick = _this.handlePageClick.bind(_this);
	        _this.btnEditAsutusClick = _this.btnEditAsutusClick.bind(_this);

	        _this.pages = [{ pageName: 'Teatis', docTypeId: 'TEATIS' }];
	        return _this;
	    }

	    _createClass(Teatis, [{
	        key: 'render',
	        value: function render() {
	            var initData = this.props.initData ? this.props.initData : {};

	            return React.createElement(DocumentTemplate, { docId: this.state.docId,
	                ref: 'document',
	                docTypeId: 'TEATIS',
	                history: this.props.history,
	                module: this.state.module,
	                userData: this.props.userData,
	                initData: initData,
	                libs: LIBRARIES,
	                pages: this.pages,
	                renderer: this.renderer,
	                focusElement: 'input-number'
	            });
	        }

	        /**
	         *Вернет кастомные компоненты документа
	         */

	    }, {
	        key: 'renderer',
	        value: function renderer(self) {
	            var isEditMode = self.state.edited;

	            // формируем зависимости
	            if (self.docData.relations) {
	                relatedDocuments(self);
	            }

	            return React.createElement(
	                'div',
	                { style: styles.doc },
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(InputText, { title: 'Number:',
	                            name: 'number',
	                            value: self.docData.number || '',
	                            ref: 'input-number',
	                            readOnly: !isEditMode,
	                            onChange: self.handleInputChange }),
	                        React.createElement(InputDate, { title: 'Kuup\xE4ev ',
	                            name: 'kpv',
	                            value: self.docData.kpv,
	                            ref: 'input-kpv',
	                            readOnly: !isEditMode,
	                            onChange: self.handleInputChange })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(SelectData, { title: 'Saaja:',
	                            name: 'asutusid',
	                            libName: 'asutused',
	                            sqlFields: ['nimetus', 'regkood'],
	                            data: [],
	                            value: self.docData.asutusid || 0,
	                            defaultValue: self.docData.asutus,
	                            boundToGrid: 'nimetus',
	                            boundToData: 'asutus',
	                            ref: 'select-asutusid',
	                            btnDelete: false,
	                            onChange: self.handleInputChange,
	                            readOnly: !isEditMode })
	                    ),
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(ButtonEdit, {
	                            ref: 'btnEdit',
	                            value: 'Muuda',
	                            onClick: this.btnEditAsutusClick,
	                            show: !isEditMode,
	                            style: styles.btnEdit,
	                            disabled: false
	                        })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(TextArea, { title: 'Sisu',
	                        name: 'sisu',
	                        ref: 'textarea-sisu',
	                        onChange: self.handleInputChange,
	                        value: self.docData.sisu || '',
	                        readOnly: !isEditMode })
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(TextArea, { title: 'M\xE4rkused',
	                        name: 'muud',
	                        ref: 'textarea-muud',
	                        onChange: self.handleInputChange,
	                        value: self.docData.muud || '',
	                        readOnly: !isEditMode })
	                )
	            );
	        }
	    }, {
	        key: 'handlePageClick',
	        value: function handlePageClick(pageDocTypeId) {
	            var nimi = this.refs['document'].docData.vanem_nimi;

	            this.props.history.push({
	                pathname: '/lapsed/' + pageDocTypeId,
	                state: { asutus: nimi, type: 'text' }
	            });
	        }

	        // обработчик события клиска на кнопке редактирования контр-агента

	    }, {
	        key: 'btnEditAsutusClick',
	        value: function btnEditAsutusClick() {
	            var docAsutusId = this.refs['document'].docData.asutusid;

	            // осуществит переход на карточку контр-агента
	            this.props.history.push('/lapsed/asutused/' + docAsutusId);
	        }
	    }]);

	    return Teatis;
	}(React.PureComponent);

	Teatis.propTypes = {
	    docId: PropTypes.number,
	    initData: PropTypes.object,
	    userData: PropTypes.object
	};

	Teatis.defaultProps = {
	    params: { docId: 0 },
	    initData: {},
	    userData: {}
	};

	module.exports = Teatis;

/***/ }),
/* 311 */
/***/ (function(module, exports) {

	'use strict';module.exports={docRow:{display:'flex',flexDirection:'row'},docColumn:{display:'flex',flexDirection:'column',width:'50%'},doc:{display:'flex',flexDirection:'column'},btnEdit:{width:'min-content'}};

/***/ }),
/* 312 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(10);
	var Documents = __webpack_require__(235);
	var styles = __webpack_require__(313);

	var DOC_TYPE_ID = 'ASUTUSE_LIIK';

	/**
	 * Класс реализует документ справочника признаков.
	 */

	var AsutuseLiik = function (_React$PureComponent) {
	    _inherits(AsutuseLiik, _React$PureComponent);

	    function AsutuseLiik(props) {
	        _classCallCheck(this, AsutuseLiik);

	        return _possibleConstructorReturn(this, (AsutuseLiik.__proto__ || Object.getPrototypeOf(AsutuseLiik)).call(this, props));
	    }

	    _createClass(AsutuseLiik, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(Documents, { initData: this.props.initData,
	                history: this.props.history ? this.props.history : null,
	                module: this.props.module,
	                ref: 'register',
	                docTypeId: DOC_TYPE_ID,
	                style: styles,
	                render: this.renderer });
	        }
	    }, {
	        key: 'renderer',
	        value: function renderer() {
	            return null;
	        }
	    }]);

	    return AsutuseLiik;
	}(React.PureComponent);

	module.exports = AsutuseLiik;

/***/ }),
/* 313 */
/***/ (function(module, exports) {

	'use strict';module.exports={grid:{mainTable:{width:'100%',td:{border:'1px solid lightGrey',display:'table-cell',paddingLeft:'5px'}},headerTable:{width:'100%'},gridContainer:{width:'100%'}}};

/***/ }),
/* 314 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(10);
	var PropTypes = __webpack_require__(33);

	var DocumentTemplate = __webpack_require__(197),
	    InputText = __webpack_require__(219),
	    InputDate = __webpack_require__(217),
	    TextArea = __webpack_require__(226),
	    styles = __webpack_require__(315);

	/**
	 * Класс реализует документ справочника признаков.
	 */

	var AsutuseLiik = function (_React$PureComponent) {
	    _inherits(AsutuseLiik, _React$PureComponent);

	    function AsutuseLiik(props) {
	        _classCallCheck(this, AsutuseLiik);

	        var _this = _possibleConstructorReturn(this, (AsutuseLiik.__proto__ || Object.getPrototypeOf(AsutuseLiik)).call(this, props));

	        _this.state = {
	            docId: props.docId ? props.docId : Number(props.match.params.docId),
	            loadedData: false
	        };
	        _this.renderer = _this.renderer.bind(_this);
	        return _this;
	    }

	    _createClass(AsutuseLiik, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(DocumentTemplate, { docId: this.state.docId,
	                ref: 'document',
	                docTypeId: 'ASUTUSE_LIIK',
	                module: this.props.module,
	                initData: this.props.initData,
	                renderer: this.renderer,
	                focusElement: 'input-kood',
	                history: this.props.history

	            });
	        }

	        /**
	         * Метод вернет кастомный компонент
	         * @param self
	         * @returns {*}
	         */

	    }, {
	        key: 'renderer',
	        value: function renderer(self) {
	            if (!self.docData) {
	                return null;
	            }
	            return React.createElement(
	                'div',
	                { style: styles.doc },
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(InputText, { title: 'Kood ',
	                            name: 'kood',
	                            ref: 'input-kood',
	                            readOnly: !self.state.edited,
	                            value: self.docData.kood || '',
	                            onChange: self.handleInputChange })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(InputText, { title: 'Nimetus ',
	                            name: 'nimetus',
	                            ref: 'input-nimetus',
	                            readOnly: !self.state.edited,
	                            value: self.docData.nimetus || '',
	                            onChange: self.handleInputChange })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(InputDate, { title: 'Kehtiv kuni:',
	                            name: 'valid',
	                            value: self.docData.valid,
	                            ref: 'input-valid',
	                            readOnly: !self.state.edited,
	                            onChange: self.handleInputChange })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(TextArea, { title: 'Muud',
	                        name: 'muud',
	                        ref: 'textarea-muud',
	                        onChange: self.handleInputChange,
	                        value: self.docData.muud || '',
	                        readOnly: !self.state.edited })
	                )
	            );
	        }
	    }]);

	    return AsutuseLiik;
	}(React.PureComponent);

	AsutuseLiik.propTypes = {
	    docId: PropTypes.number,
	    initData: PropTypes.object
	};

	AsutuseLiik.defaultProps = {
	    initData: {}
	};

	module.exports = AsutuseLiik;

/***/ }),
/* 315 */
/***/ (function(module, exports) {

	'use strict';module.exports={docRow:{display:'flex',flexDirection:'row'},docColumn:{display:'flex',flexDirection:'column',width:'50%'},doc:{display:'flex',flexDirection:'column'}};

/***/ }),
/* 316 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(10);
	var Documents = __webpack_require__(235);
	var styles = __webpack_require__(317);
	var DOC_TYPE_ID = 'KOOLITUSE_TYYP';

	/**
	 * Класс реализует документ справочника признаков.
	 */

	var KoolituseTyyp = function (_React$PureComponent) {
	    _inherits(KoolituseTyyp, _React$PureComponent);

	    function KoolituseTyyp(props) {
	        _classCallCheck(this, KoolituseTyyp);

	        return _possibleConstructorReturn(this, (KoolituseTyyp.__proto__ || Object.getPrototypeOf(KoolituseTyyp)).call(this, props));
	    }

	    _createClass(KoolituseTyyp, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(Documents, { initData: this.props.initData,
	                history: this.props.history ? this.props.history : null,
	                module: this.props.module,
	                ref: 'register',
	                docTypeId: DOC_TYPE_ID,
	                style: styles,
	                render: this.renderer });
	        }
	    }, {
	        key: 'renderer',
	        value: function renderer() {
	            return null;
	        }
	    }]);

	    return KoolituseTyyp;
	}(React.PureComponent);

	module.exports = KoolituseTyyp;

/***/ }),
/* 317 */
/***/ (function(module, exports) {

	'use strict';module.exports={grid:{mainTable:{width:'100%',td:{border:'1px solid lightGrey',display:'table-cell',paddingLeft:'5px'}},headerTable:{width:'100%'},gridContainer:{width:'100%'}}};

/***/ }),
/* 318 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(10);
	var PropTypes = __webpack_require__(33);

	var DocumentTemplate = __webpack_require__(197),
	    InputText = __webpack_require__(219),
	    InputDate = __webpack_require__(217),
	    TextArea = __webpack_require__(226),
	    styles = __webpack_require__(319);

	/**
	 * Класс реализует документ справочника признаков.
	 */

	var KoolituseTyyp = function (_React$PureComponent) {
	    _inherits(KoolituseTyyp, _React$PureComponent);

	    function KoolituseTyyp(props) {
	        _classCallCheck(this, KoolituseTyyp);

	        var _this = _possibleConstructorReturn(this, (KoolituseTyyp.__proto__ || Object.getPrototypeOf(KoolituseTyyp)).call(this, props));

	        _this.state = {
	            docId: props.docId ? props.docId : Number(props.match.params.docId),
	            loadedData: false
	        };
	        _this.renderer = _this.renderer.bind(_this);
	        return _this;
	    }

	    _createClass(KoolituseTyyp, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(DocumentTemplate, { docId: this.state.docId,
	                ref: 'document',
	                docTypeId: 'KOOLITUSE_TYYP',
	                module: this.props.module,
	                initData: this.props.initData,
	                renderer: this.renderer,
	                focusElement: 'input-kood',
	                history: this.props.history

	            });
	        }

	        /**
	         * Метод вернет кастомный компонент
	         * @param self
	         * @returns {*}
	         */

	    }, {
	        key: 'renderer',
	        value: function renderer(self) {
	            if (!self.docData) {
	                return null;
	            }
	            return React.createElement(
	                'div',
	                { style: styles.doc },
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(InputText, { title: 'Kood ',
	                            name: 'kood',
	                            ref: 'input-kood',
	                            readOnly: !self.state.edited,
	                            value: self.docData.kood || '',
	                            onChange: self.handleInputChange })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(InputText, { title: 'Nimetus ',
	                            name: 'nimetus',
	                            ref: 'input-nimetus',
	                            readOnly: !self.state.edited,
	                            value: self.docData.nimetus || '',
	                            onChange: self.handleInputChange })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(InputDate, { title: 'Kehtiv kuni:',
	                            name: 'valid',
	                            value: self.docData.valid,
	                            ref: 'input-valid',
	                            readOnly: !self.state.edited,
	                            onChange: self.handleInputChange })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(TextArea, { title: 'Muud',
	                        name: 'muud',
	                        ref: 'textarea-muud',
	                        onChange: self.handleInputChange,
	                        value: self.docData.muud || '',
	                        readOnly: !self.state.edited })
	                )
	            );
	        }
	    }]);

	    return KoolituseTyyp;
	}(React.PureComponent);

	KoolituseTyyp.propTypes = {
	    docId: PropTypes.number,
	    initData: PropTypes.object
	};

	KoolituseTyyp.defaultProps = {
	    initData: {}
	};

	module.exports = KoolituseTyyp;

/***/ }),
/* 319 */
/***/ (function(module, exports) {

	'use strict';module.exports={docRow:{display:'flex',flexDirection:'row'},docColumn:{display:'flex',flexDirection:'column',width:'50%'},doc:{display:'flex',flexDirection:'column'}};

/***/ }),
/* 320 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(10);
	var Documents = __webpack_require__(235);
	var styles = __webpack_require__(321);
	var DOC_TYPE_ID = 'KOOLITUSE_LIIK';

	/**
	 * Класс реализует документ справочника признаков.
	 */

	var KoolituseLiik = function (_React$PureComponent) {
	    _inherits(KoolituseLiik, _React$PureComponent);

	    function KoolituseLiik(props) {
	        _classCallCheck(this, KoolituseLiik);

	        return _possibleConstructorReturn(this, (KoolituseLiik.__proto__ || Object.getPrototypeOf(KoolituseLiik)).call(this, props));
	    }

	    _createClass(KoolituseLiik, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(Documents, { initData: this.props.initData,
	                history: this.props.history ? this.props.history : null,
	                module: this.props.module,
	                ref: 'register',
	                docTypeId: DOC_TYPE_ID,
	                style: styles,
	                render: this.renderer });
	        }
	    }, {
	        key: 'renderer',
	        value: function renderer() {
	            return null;
	        }
	    }]);

	    return KoolituseLiik;
	}(React.PureComponent);

	module.exports = KoolituseLiik;

/***/ }),
/* 321 */
/***/ (function(module, exports) {

	'use strict';module.exports={grid:{mainTable:{width:'100%',td:{border:'1px solid lightGrey',display:'table-cell',paddingLeft:'5px'}},headerTable:{width:'100%'},gridContainer:{width:'100%'}}};

/***/ }),
/* 322 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(10);
	var PropTypes = __webpack_require__(33);

	var DocumentTemplate = __webpack_require__(197),
	    InputText = __webpack_require__(219),
	    InputDate = __webpack_require__(217),
	    TextArea = __webpack_require__(226),
	    styles = __webpack_require__(323);

	/**
	 * Класс реализует документ справочника признаков.
	 */

	var KoolituseLiik = function (_React$PureComponent) {
	    _inherits(KoolituseLiik, _React$PureComponent);

	    function KoolituseLiik(props) {
	        _classCallCheck(this, KoolituseLiik);

	        var _this = _possibleConstructorReturn(this, (KoolituseLiik.__proto__ || Object.getPrototypeOf(KoolituseLiik)).call(this, props));

	        _this.state = {
	            docId: props.docId ? props.docId : Number(props.match.params.docId),
	            loadedData: false
	        };
	        _this.renderer = _this.renderer.bind(_this);
	        return _this;
	    }

	    _createClass(KoolituseLiik, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(DocumentTemplate, { docId: this.state.docId,
	                ref: 'document',
	                docTypeId: 'KOOLITUSE_LIIK',
	                module: this.props.module,
	                initData: this.props.initData,
	                renderer: this.renderer,
	                focusElement: 'input-kood',
	                history: this.props.history

	            });
	        }

	        /**
	         * Метод вернет кастомный компонент
	         * @param self
	         * @returns {*}
	         */

	    }, {
	        key: 'renderer',
	        value: function renderer(self) {
	            if (!self.docData) {
	                return null;
	            }
	            return React.createElement(
	                'div',
	                { style: styles.doc },
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(InputText, { title: 'Kood ',
	                            name: 'kood',
	                            ref: 'input-kood',
	                            readOnly: !self.state.edited,
	                            value: self.docData.kood || '',
	                            onChange: self.handleInputChange })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(InputText, { title: 'Nimetus ',
	                            name: 'nimetus',
	                            ref: 'input-nimetus',
	                            readOnly: !self.state.edited,
	                            value: self.docData.nimetus || '',
	                            onChange: self.handleInputChange })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(InputDate, { title: 'Kehtiv kuni:',
	                            name: 'valid',
	                            value: self.docData.valid,
	                            ref: 'input-valid',
	                            readOnly: !self.state.edited,
	                            onChange: self.handleInputChange })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(TextArea, { title: 'Muud',
	                        name: 'muud',
	                        ref: 'textarea-muud',
	                        onChange: self.handleInputChange,
	                        value: self.docData.muud || '',
	                        readOnly: !self.state.edited })
	                )
	            );
	        }
	    }]);

	    return KoolituseLiik;
	}(React.PureComponent);

	KoolituseLiik.propTypes = {
	    docId: PropTypes.number,
	    initData: PropTypes.object
	};

	KoolituseLiik.defaultProps = {
	    initData: {}
	};

	module.exports = KoolituseLiik;

/***/ }),
/* 323 */
/***/ (function(module, exports) {

	'use strict';module.exports={docRow:{display:'flex',flexDirection:'row'},docColumn:{display:'flex',flexDirection:'column',width:'50%'},doc:{display:'flex',flexDirection:'column'}};

/***/ }),
/* 324 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(10);
	var DocumentRegister = __webpack_require__(235);
	var InputNumber = __webpack_require__(221);
	var InputText = __webpack_require__(219);
	var ToolbarContainer = __webpack_require__(78);
	var BtnLoeTasu = __webpack_require__(244);

	var styles = __webpack_require__(325);
	var DOC_TYPE_ID = 'PANK_VV';

	var DocRights = __webpack_require__(198);
	var checkRights = __webpack_require__(199);
	var DocContext = __webpack_require__(1);

	var docRights = DocRights[DOC_TYPE_ID] ? DocRights[DOC_TYPE_ID] : [];
	var userRoles = DocContext.userData ? DocContext.userData.roles : [];
	var getSum = __webpack_require__(257);

	/**
	 * Класс реализует документ справочника признаков.
	 */

	var Documents = function (_React$PureComponent) {
	    _inherits(Documents, _React$PureComponent);

	    function Documents(props) {
	        _classCallCheck(this, Documents);

	        var _this = _possibleConstructorReturn(this, (Documents.__proto__ || Object.getPrototypeOf(Documents)).call(this, props));

	        _this.Doc = null; //ссылка на страницу
	        _this.renderer = _this.renderer.bind(_this);
	        _this.render = _this.render.bind(_this);
	        _this.onClickHandler = _this.onClickHandler.bind(_this);
	        _this.state = {
	            summa: 0,
	            read: 0,
	            filtri_read: 0

	        };

	        _this.makse = {}; // данные на строку

	        return _this;
	    }

	    _createClass(Documents, [{
	        key: 'render',
	        value: function render() {
	            var state = void 0;
	            if (this.Doc) {
	                state = this.Doc && this.Doc.state ? this.Doc.state : null;
	            }

	            var toolbarParams = {
	                btnAdd: {
	                    show: false
	                },
	                btnEdit: {
	                    show: true
	                },
	                btnDelete: {
	                    show: false
	                },
	                btnPrint: {
	                    show: false
	                },
	                btnStart: {
	                    show: false
	                }
	            };

	            return React.createElement(
	                'div',
	                null,
	                React.createElement(DocumentRegister, { history: this.props.history ? this.props.history : null,
	                    module: this.props.module,
	                    ref: 'register',
	                    docTypeId: DOC_TYPE_ID,
	                    style: styles,
	                    toolbarParams: toolbarParams,
	                    render: this.renderer }),
	                React.createElement(InputText, { title: 'Filtri all / read kokku:',
	                    name: 'read_kokku',
	                    style: styles.total,
	                    ref: 'input-read',
	                    value: String(this.state.filtri_read + '/' + this.state.read),
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'Summa kokku:',
	                    name: 'summa_kokku',
	                    style: styles.total,
	                    ref: 'input-summa',
	                    value: Number(this.state.summa).toFixed(2) || 0,
	                    disabled: true })
	            );
	        }
	    }, {
	        key: 'renderer',
	        value: function renderer(self) {
	            if (!self) {
	                // не инициализировано
	                return null;
	            }

	            this.Doc = self;
	            var kasLoeMakse = false;

	            // определим ид строки
	            var rowId = this.Doc.state && this.Doc.state.value ? this.Doc.state.value : 0;
	            // найдем строку
	            if (rowId) {
	                this.makse = this.Doc.gridData.find(function (row) {
	                    return row.id == rowId;
	                });
	                if (this.makse && !this.makse.doc_id) {
	                    kasLoeMakse = true;
	                }
	            }

	            // подсчет итогов
	            var summa = self.gridData ? getSum(self.gridData, 'summa') : 0;
	            this.setState({
	                summa: summa,
	                read: self.gridData && self.gridData.length && self.gridData[0].rows_total ? self.gridData[0].rows_total : this.state.read,
	                filtri_read: self.gridData && self.gridData.length && self.gridData[0].filter_total ? self.gridData[0].filter_total : 0
	            });

	            return React.createElement(
	                ToolbarContainer,
	                null,
	                kasLoeMakse ? React.createElement(BtnLoeTasu, {
	                    showDate: false,
	                    value: 'Loe makse',
	                    onClick: this.onClickHandler,
	                    ref: 'btn-loe_makse',
	                    key: 'key-loe_makse'
	                }) : null
	            );
	        }
	    }, {
	        key: 'onClickHandler',
	        value: function onClickHandler(event, seisuga) {
	            var Doc = this.refs['register'];
	            var message = 'Edukalt';

	            Doc.fetchData('calc/loe_makse', { makse_id: this.makse.id }).then(function (data) {
	                if (data.result) {
	                    if (data.result && data.result.error_code) {
	                        // error
	                        Doc.setState({ warning: 'Tekkis viga: ' + data.result.error_message, warningType: 'error' });
	                    } else {
	                        if (data.result.data[0].error_message) {
	                            // error
	                            Doc.setState({
	                                warning: 'Tekkis viga: ' + data.result.data[0].error_message,
	                                warningType: 'error'
	                            });
	                        } else {
	                            Doc.setState({ warning: '' + message, warningType: 'ok' }, function () {
	                                return Doc.fetchData('selectDocs');
	                            });
	                        }
	                    }

	                    // открываем отчет
	                } else {
	                    if (data.error_message) {
	                        Doc.setState({ warning: 'Tekkis viga: ' + data.error_message, warningType: 'error' });
	                    } else {
	                        Doc.setState({
	                            warning: 'Kokku arvestatud : ' + data.result + ', ' + message,
	                            warningType: 'notValid'
	                        });
	                    }
	                }
	            });
	        }
	    }]);

	    return Documents;
	}(React.PureComponent);

	module.exports = Documents;

/***/ }),
/* 325 */
/***/ (function(module, exports) {

	'use strict';module.exports={grid:{mainTable:{width:'100%',td:{border:'1px solid lightGrey',display:'table-cell',paddingLeft:'5px'}},headerTable:{width:'100%'},gridContainer:{width:'100%'}},total:{width:'auto'}};

/***/ }),
/* 326 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(10);
	var PropTypes = __webpack_require__(33);

	var DocumentTemplate = __webpack_require__(197),
	    InputText = __webpack_require__(219),
	    InputDate = __webpack_require__(217),
	    InputNumber = __webpack_require__(221),
	    TextArea = __webpack_require__(226),
	    ButtonEdit = __webpack_require__(84),
	    Loading = __webpack_require__(253);

	var styles = __webpack_require__(327);

	/**
	 * Класс реализует документ справочника признаков.
	 */

	var Tunnus = function (_React$PureComponent) {
	    _inherits(Tunnus, _React$PureComponent);

	    function Tunnus(props) {
	        _classCallCheck(this, Tunnus);

	        var _this = _possibleConstructorReturn(this, (Tunnus.__proto__ || Object.getPrototypeOf(Tunnus)).call(this, props));

	        _this.state = {
	            docId: props.docId ? props.docId : Number(props.match.params.docId),
	            loadedData: false
	        };
	        _this.renderer = _this.renderer.bind(_this);
	        _this.btnEditMKClick = _this.btnEditMKClick.bind(_this);

	        return _this;
	    }

	    _createClass(Tunnus, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(DocumentTemplate, { docId: this.state.docId,
	                ref: 'document',
	                docTypeId: 'PANK_VV',
	                module: this.props.module,
	                initData: this.props.initData,
	                userData: this.props.userData,
	                renderer: this.renderer,
	                focusElement: 'input-kood',
	                history: this.props.history,
	                reload: true

	            });
	        }

	        /**
	         * Метод вернет кастомный компонент
	         * @param self
	         * @returns {*}
	         */

	    }, {
	        key: 'renderer',
	        value: function renderer(self) {
	            if (!self.docData) {
	                // не загружены данные
	                return React.createElement(
	                    'div',
	                    { style: styles.doc },
	                    React.createElement(Loading, { label: 'Laadimine...' })
	                );
	            }
	            return React.createElement(
	                'div',
	                { style: styles.doc },
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(InputText, { title: 'Pank ID ',
	                            name: 'pank_id',
	                            ref: 'input-pank_id',
	                            readOnly: !self.state.edited,
	                            value: self.docData.pank_id || '',
	                            onChange: self.handleInputChange })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(InputDate, { title: 'Maksep\xE4ev:',
	                            name: 'valid',
	                            value: self.docData.kpv,
	                            ref: 'input-kpv',
	                            readOnly: !self.state.edited,
	                            onChange: self.handleInputChange })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(InputNumber, { title: 'Summa: ',
	                            name: 'summa',
	                            value: Number(self.docData.summa),
	                            ref: 'summa',
	                            readOnly: !self.state.edited,
	                            onChange: self.handleInputChange })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(InputText, { title: 'Viitenumber:',
	                            name: 'viitenumber',
	                            ref: 'input-viitenumber',
	                            readOnly: !self.state.edited,
	                            value: self.docData.viitenumber || '',
	                            onChange: self.handleInputChange })
	                    ),
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(
	                            'label',
	                            null,
	                            '(' + (self.docData.nimi ? self.docData.nimi || ',' || self.docData.asutus : 'Puudub') + ')'
	                        )
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(InputText, { title: 'Reg.(Isiku) kood:',
	                            name: 'isikukood',
	                            ref: 'input-isikukood',
	                            readOnly: !self.state.edited,
	                            value: self.docData.isikukood || '',
	                            onChange: self.handleInputChange })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(InputText, { title: 'Maksja:',
	                            name: 'maksja',
	                            ref: 'input-maksja',
	                            readOnly: !self.state.edited,
	                            value: self.docData.maksja || '',
	                            onChange: self.handleInputChange })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(InputText, { title: 'Maksja AA:',
	                            name: 'iban',
	                            ref: 'input-iban',
	                            readOnly: !self.state.edited,
	                            value: self.docData.iban || '',
	                            onChange: self.handleInputChange })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(InputText, { title: 'Pank:',
	                            name: 'pank',
	                            ref: 'input-pank',
	                            readOnly: !self.state.edited,
	                            value: self.docData.pank || '',
	                            onChange: self.handleInputChange })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(TextArea, { title: 'Selgitus',
	                        name: 'selg',
	                        ref: 'textarea-selg',
	                        onChange: self.handleInputChange,
	                        value: self.docData.selg || '',
	                        readOnly: !self.state.edited })
	                ),
	                self.docData.doc_id ? React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(InputText, { title: 'Koostatud MK:',
	                            name: 'number',
	                            ref: 'input-number',
	                            readOnly: true,
	                            value: self.docData.number || '',
	                            onChange: self.handleInputChange })
	                    ),
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(ButtonEdit, {
	                            ref: 'btnEdit',
	                            value: 'Muuda',
	                            onClick: this.btnEditMKClick,
	                            show: !self.state.edited,
	                            style: styles.btnEdit,
	                            disabled: false
	                        })
	                    )
	                ) : null
	            );
	        }

	        // обработчик события клиска на кнопке редактирования контр-агента

	    }, {
	        key: 'btnEditMKClick',
	        value: function btnEditMKClick() {
	            var docMkId = this.refs['document'].docData.doc_id;

	            // осуществит переход на карточку контр-агента
	            this.props.history.push('/lapsed/smk/' + docMkId);
	        }
	    }]);

	    return Tunnus;
	}(React.PureComponent);

	Tunnus.propTypes = {
	    docId: PropTypes.number,
	    initData: PropTypes.object
	};

	Tunnus.defaultProps = {
	    initData: {}
	};

	module.exports = Tunnus;

/***/ }),
/* 327 */
/***/ (function(module, exports) {

	'use strict';module.exports={docRow:{display:'flex',flexDirection:'row'},docColumn:{display:'flex',flexDirection:'column',width:'50%'},doc:{display:'flex',flexDirection:'column'},btnEdit:{width:'min-content'}};

/***/ }),
/* 328 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(10);
	var PropTypes = __webpack_require__(33);

	var DocumentTemplate = __webpack_require__(197),
	    InputText = __webpack_require__(219),
	    Loading = __webpack_require__(253),
	    SelectData = __webpack_require__(251);

	var DocContext = __webpack_require__(1);

	var styles = __webpack_require__(329);

	var LIBRARIES = [{ id: 'laps', filter: '' }];

	/**
	 * Класс реализует документ справочника признаков.
	 */

	var Viitenr = function (_React$PureComponent) {
	    _inherits(Viitenr, _React$PureComponent);

	    function Viitenr(props) {
	        _classCallCheck(this, Viitenr);

	        var _this = _possibleConstructorReturn(this, (Viitenr.__proto__ || Object.getPrototypeOf(Viitenr)).call(this, props));

	        _this.state = {
	            docId: props.docId ? props.docId : Number(props.match.params.docId),
	            loadedData: false,
	            lapsId: null
	        };
	        _this.renderer = _this.renderer.bind(_this);
	        return _this;
	    }

	    _createClass(Viitenr, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            var lapsId = void 0;

	            //если параметр на ребенка задан в стейте, то используем его. Иначе ищем его в контексте
	            if (this.props.history && this.props.history.location.state) {
	                lapsId = this.props.history.location.state.lapsId;
	            } else {
	                lapsId = DocContext['laps'] ? DocContext['laps'] : null;
	            }
	            this.setState({ lapsId: lapsId });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            return React.createElement(DocumentTemplate, { docId: this.state.docId,
	                ref: 'document',
	                docTypeId: 'VIITENR',
	                module: this.props.module,
	                initData: this.props.initData,
	                userData: this.props.userData,
	                libs: LIBRARIES,
	                reload: true,
	                renderer: this.renderer,
	                focusElement: 'input-viitenumber',
	                history: this.props.history

	            });
	        }

	        /**
	         * Метод вернет кастомный компонент
	         * @param self
	         * @returns {*}
	         */

	    }, {
	        key: 'renderer',
	        value: function renderer(self) {
	            var _this2 = this;

	            if (!self.docData) {
	                // не загружены данные
	                return React.createElement(
	                    'div',
	                    { style: styles.doc },
	                    React.createElement(Loading, { label: 'Laadimine...' })
	                );
	            }

	            if ((!Number(self.docData.id) || !self.docData.laps_id) && this.state.lapsId) {
	                //new record
	                self.docData.laps_id = this.state.lapsId;
	                var lapsRow = self.libs['laps'].filter(function (laps) {
	                    return laps.id == _this2.state.lapsId;
	                });
	                if (lapsRow) {
	                    self.docData.nimi = lapsRow.nimi;
	                    self.docData.isikukood = lapsRow.isikukood;
	                }
	            }

	            return React.createElement(
	                'div',
	                { style: styles.doc },
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(InputText, { title: 'Asutus',
	                            name: 'asutus',
	                            ref: 'input-asutus',
	                            readOnly: true,
	                            value: self.docData.asutus || '',
	                            onChange: self.handleInputChange })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(InputText, { title: 'Viitenumber ',
	                            name: 'viitenumber',
	                            ref: 'input-viitenumber',
	                            readOnly: !self.state.edited,
	                            value: self.docData.viitenumber || '',
	                            onChange: self.handleInputChange })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(SelectData, { title: 'Lapse nimi:',
	                            name: 'laps_id',
	                            userData: self.userData,
	                            libName: 'laps',
	                            sqlFields: ['nimi', 'isikukood'],
	                            data: [],
	                            value: self.docData.laps_id || 0,
	                            defaultValue: self.docData.nimi,
	                            boundToGrid: 'nimi',
	                            boundToData: 'nimi',
	                            ref: 'select-isikukood',
	                            btnDelete: false,
	                            onChange: self.handleInputChange,
	                            history: this.props.history,
	                            readOnly: !self.state.edited })
	                    )
	                )
	            );
	        }
	    }]);

	    return Viitenr;
	}(React.PureComponent);

	Viitenr.propTypes = {
	    docId: PropTypes.number,
	    initData: PropTypes.object
	};

	Viitenr.defaultProps = {
	    initData: {}
	};

	module.exports = Viitenr;

/***/ }),
/* 329 */
/***/ (function(module, exports) {

	'use strict';module.exports={docRow:{display:'flex',flexDirection:'row'},docColumn:{display:'flex',flexDirection:'column',width:'50%'},doc:{display:'flex',flexDirection:'column'}};

/***/ }),
/* 330 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(10);
	var PropTypes = __webpack_require__(33);

	var DocumentTemplate = __webpack_require__(197),
	    InputText = __webpack_require__(219),
	    InputNumber = __webpack_require__(221),
	    TextArea = __webpack_require__(226),
	    styles = __webpack_require__(331);

	/**
	 * Класс реализует документ справочника признаков.
	 */

	var Config = function (_React$PureComponent) {
	    _inherits(Config, _React$PureComponent);

	    function Config(props) {
	        _classCallCheck(this, Config);

	        var _this = _possibleConstructorReturn(this, (Config.__proto__ || Object.getPrototypeOf(Config)).call(this, props));

	        _this.state = {
	            docId: props.docId ? props.docId : Number(props.match.params.docId),
	            loadedData: false
	        };
	        _this.renderer = _this.renderer.bind(_this);
	        return _this;
	    }

	    _createClass(Config, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(DocumentTemplate, { docId: this.state.docId,
	                ref: 'document',
	                docTypeId: 'CONFIG',
	                history: this.props.history,
	                module: this.props.module,
	                initData: this.props.initData,
	                renderer: this.renderer,
	                focusElement: 'input-number'
	            });
	        }

	        /**
	         * Метод вернет кастомный компонент
	         * @param self
	         * @returns {*}
	         */

	    }, {
	        key: 'renderer',
	        value: function renderer(self) {
	            if (!self.docData) {
	                return null;
	            }
	            return React.createElement(
	                'div',
	                { style: styles.doc },
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(InputText, { title: 'Prefiks: ',
	                            name: 'number',
	                            ref: 'input-number',
	                            readOnly: !self.state.edited,
	                            value: self.docData.number || '',
	                            onChange: self.handleInputChange }),
	                        React.createElement(InputText, { title: 'Arvete tahtp\xE4ev ',
	                            name: 'tahtpaev',
	                            ref: 'input-tahtpaev',
	                            readOnly: !self.state.edited,
	                            value: self.docData.tahtpaev || '',
	                            onChange: self.handleInputChange }),
	                        React.createElement(InputNumber, { title: 'Arve v\xF5lgnevuse limiit: ',
	                            name: 'limiit',
	                            ref: 'input-limiit',
	                            readOnly: !self.state.edited,
	                            value: self.docData.limiit || 0,
	                            onChange: self.handleInputChange })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(TextArea, { title: 'Omniva e-arvete server',
	                        name: 'earved',
	                        ref: 'textarea-earved',
	                        onChange: self.handleInputChange,
	                        value: self.docData.earved || '',
	                        readOnly: !self.state.edited })
	                )
	            );
	        }
	    }]);

	    return Config;
	}(React.PureComponent);

	Config.propTypes = {
	    docId: PropTypes.number,
	    initData: PropTypes.object
	};

	Config.defaultProps = {
	    initData: {}
	};

	module.exports = Config;

/***/ }),
/* 331 */
/***/ (function(module, exports) {

	'use strict';module.exports={docRow:{display:'flex',flexDirection:'row'/*
	                border: '1px solid blue'
	        */},docColumn:{display:'flex',flexDirection:'column',/*
	                border: '1px solid yellow',
	        */width:'50%'},doc:{display:'flex',flexDirection:'column'/*
	                border: '1px solid brown'
	        */}};

/***/ }),
/* 332 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(10);
	var PropTypes = __webpack_require__(33);

	var DocumentTemplate = __webpack_require__(197),
	    InputText = __webpack_require__(219),
	    DataGrid = __webpack_require__(170),
	    TextArea = __webpack_require__(226),
	    ModalPage = __webpack_require__(168),
	    Select = __webpack_require__(215),
	    CheckBox = __webpack_require__(175),
	    styles = __webpack_require__(333);

	var LIB_OBJS = __webpack_require__(193).REKV.LIB_OBJS;

	/**
	 * Класс реализует документ справочника признаков.
	 */

	var Rekv = function (_React$PureComponent) {
	    _inherits(Rekv, _React$PureComponent);

	    function Rekv(props) {
	        _classCallCheck(this, Rekv);

	        var _this = _possibleConstructorReturn(this, (Rekv.__proto__ || Object.getPrototypeOf(Rekv)).call(this, props));

	        _this.state = {
	            docId: props.docId ? props.docId : Number(props.match.params.docId),
	            loadedData: false
	        };
	        _this.renderer = _this.renderer.bind(_this);
	        _this.createGridRow = _this.createGridRow.bind(_this);
	        return _this;
	    }

	    _createClass(Rekv, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(DocumentTemplate, { docId: this.state.docId,
	                ref: 'document',
	                docTypeId: 'REKV',
	                history: this.props.history,
	                module: this.props.module,
	                libs: LIB_OBJS,
	                initData: this.props.initData,
	                renderer: this.renderer,
	                createGridRow: this.createGridRow

	            });
	        }

	        /**
	         * Метод вернет кастомный компонент
	         * @param self
	         * @returns {*}
	         */

	    }, {
	        key: 'renderer',
	        value: function renderer(self) {
	            if (!self.docData) {
	                return null;
	            }
	            var gridData = self.docData.gridData,
	                gridColumns = self.docData.gridConfig;

	            return React.createElement(
	                'div',
	                { style: styles.doc },
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(InputText, { title: 'Regkood: ',
	                        name: 'regkood',
	                        ref: 'input-regkood',
	                        readOnly: !self.state.edited,
	                        value: self.docData.regkood || '',
	                        onChange: self.handleInputChange })
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(InputText, { title: 'KBM kood: ',
	                        name: 'kbmkood',
	                        ref: 'input-kbmkood',
	                        readOnly: !self.state.edited,
	                        value: self.docData.kbmkood || '',
	                        onChange: self.handleInputChange })
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(InputText, {
	                        title: 'Nimetus: ',
	                        name: 'nimetus',
	                        ref: 'input-nimetus',
	                        readOnly: !self.state.edited,
	                        value: self.docData.nimetus || '',
	                        onChange: self.handleInputChange })
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(InputText, { title: 'T\xE4is. nimetus: ',
	                        name: 'muud',
	                        ref: 'input-muud',
	                        readOnly: !self.state.edited,
	                        value: self.docData.muud || '',
	                        onChange: self.handleInputChange })
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(Select, { title: 'Asutuse liik:',
	                        name: 'liik',
	                        data: self.libs['asutuse_liik'],
	                        value: self.docData.liik || '',
	                        defaultValue: self.docData.liik || '',
	                        ref: 'liik',
	                        collId: 'kood',
	                        readOnly: !self.state.edited,
	                        onChange: self.handleInputChange })
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(TextArea, { title: 'Aadress: ',
	                        name: 'aadress',
	                        ref: 'textarea-aadress',
	                        onChange: self.handleInputChange,
	                        value: self.docData.aadress || '',
	                        readOnly: !self.state.edited })
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(InputText, { title: 'Juhataja: ',
	                        name: 'juht',
	                        ref: 'input-juht',
	                        readOnly: !self.state.edited,
	                        value: self.docData.juht || '',
	                        onChange: self.handleInputChange })
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(InputText, { title: 'Raamatupidaja: ',
	                        name: 'raama',
	                        ref: 'input-raama',
	                        readOnly: !self.state.edited,
	                        value: self.docData.raama || '',
	                        onChange: self.handleInputChange })
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(InputText, { title: 'Email: ',
	                        name: 'email',
	                        ref: 'input-email',
	                        readOnly: !self.state.edited,
	                        value: self.docData.email || '',
	                        onChange: self.handleInputChange })
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(InputText, { title: 'Omniva salas\xF5na: ',
	                        name: 'earved',
	                        ref: 'input-earved',
	                        readOnly: !self.state.edited,
	                        value: self.docData.earved || '',
	                        onChange: self.handleInputChange })
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(InputText, { title: 'E-arve asutuse reg.kood: ',
	                        name: 'earve_regkood',
	                        ref: 'input-earve_regkood',
	                        readOnly: !self.state.edited,
	                        value: self.docData.earve_regkood || '',
	                        onChange: self.handleInputChange })
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(InputText, { title: 'SEB e-arve aa: ',
	                            name: 'seb_earve',
	                            ref: 'input-seb_earve',
	                            readOnly: !self.state.edited,
	                            value: self.docData.seb_earve || '',
	                            onChange: self.handleInputChange })
	                    ),
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(InputText, { title: 'SEB kasutaja tunnus: ',
	                            name: 'seb',
	                            ref: 'input-seb_parool',
	                            readOnly: !self.state.edited,
	                            value: self.docData.seb || '',
	                            onChange: self.handleInputChange })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(InputText, { title: 'SWED e-arve aa: ',
	                            name: 'swed_earve',
	                            ref: 'input-swed-earve',
	                            readOnly: !self.state.edited,
	                            value: self.docData.swed_earve || '',
	                            onChange: self.handleInputChange })
	                    ),
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(InputText, { title: 'SWED kasutaja tunnus: ',
	                            name: 'swed',
	                            ref: 'input-swed_parool',
	                            readOnly: !self.state.edited,
	                            value: self.docData.swed || '',
	                            onChange: self.handleInputChange })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(DataGrid, { source: 'details',
	                        gridData: gridData,
	                        gridColumns: gridColumns,
	                        showToolBar: self.state.edited,
	                        handleGridRow: this.handleGridRow,
	                        handleGridBtnClick: self.handleGridBtnClick,
	                        readOnly: !self.state.edited,
	                        style: styles.grid.headerTable,
	                        ref: 'data-grid' })
	                ),
	                self.state.gridRowEdit ? this.createGridRow(self) : null
	            );
	        }

	        /**
	         * Создаст компонет строки грида
	         * @returns {XML}
	         */

	    }, {
	        key: 'createGridRow',
	        value: function createGridRow(self) {

	            var row = self.gridRowData ? self.gridRowData : {},
	                validateMessage = '',
	                // self.state.warning
	            buttonOkReadOnly = validateMessage.length > 0 || !self.state.checked,
	                modalObjects = ['btnOk', 'btnCancel'];

	            if (buttonOkReadOnly) {
	                // уберем кнопку Ок
	                modalObjects.splice(0, 1);
	            }

	            if (!row) return React.createElement('div', null);

	            return React.createElement(
	                'div',
	                { className: '.modalPage' },
	                React.createElement(
	                    ModalPage,
	                    {
	                        modalObjects: modalObjects,
	                        ref: 'modalpage-grid-row',
	                        show: true,
	                        modalPageBtnClick: self.modalPageClick,
	                        modalPageName: 'Rea lisamine / parandamine' },
	                    React.createElement(
	                        'div',
	                        { ref: 'grid-row-container' },
	                        self.state.gridWarning.length ? React.createElement(
	                            'div',
	                            { style: styles.docRow },
	                            React.createElement(
	                                'span',
	                                null,
	                                self.state.gridWarning
	                            )
	                        ) : null,
	                        React.createElement(
	                            'div',
	                            { style: styles.docRow },
	                            React.createElement(InputText, { title: 'Number: ',
	                                name: 'arve',
	                                value: row.arve || '',
	                                readOnly: false,
	                                disabled: false,
	                                bindData: false,
	                                ref: 'number',
	                                onChange: self.handleGridRowInput })
	                        ),
	                        React.createElement(
	                            'div',
	                            { style: styles.docRow },
	                            React.createElement(InputText, { title: 'Nimetus: ',
	                                name: 'nimetus',
	                                value: row.nimetus || '',
	                                readOnly: false,
	                                disabled: false,
	                                bindData: false,
	                                ref: 'number',
	                                onChange: self.handleGridRowInput })
	                        ),
	                        React.createElement(
	                            'div',
	                            { style: styles.docRow },
	                            React.createElement(Select, { title: 'T\xFC\xFCp: ',
	                                name: 'kassapank',
	                                data: [{ id: 0, nimetus: 'Kassa' }, { id: 1, nimetus: 'Pank' }, { id: 2, nimetus: 'TP' }],
	                                value: row.kassapank || '',
	                                ref: 'kassapank',
	                                collId: 'id',
	                                onChange: self.handleGridRowChange })
	                        ),
	                        React.createElement(
	                            'div',
	                            { style: styles.docRow },
	                            React.createElement(Select, { title: 'Konto: ',
	                                name: 'konto',
	                                data: self.libs['kontod'],
	                                value: row.konto || '',
	                                ref: 'konto',
	                                collId: 'kood',
	                                onChange: self.handleGridRowChange })
	                        ),
	                        React.createElement(
	                            'div',
	                            { style: styles.docRow },
	                            React.createElement(CheckBox, { title: 'Kas p\xF5hiline?',
	                                name: 'default_',
	                                value: Boolean(self.docData.default_),
	                                ref: 'checkbox_default_',
	                                onChange: self.handleInputChange,
	                                readOnly: false
	                            })
	                        )
	                    ),
	                    React.createElement(
	                        'div',
	                        null,
	                        React.createElement(
	                            'span',
	                            null,
	                            validateMessage
	                        )
	                    )
	                )
	            );
	        }
	    }]);

	    return Rekv;
	}(React.PureComponent);

	Rekv.propTypes = {
	    docId: PropTypes.number,
	    initData: PropTypes.object
	};

	Rekv.defaultProps = {
	    initData: {}
	};

	module.exports = Rekv;

/***/ }),
/* 333 */
/***/ (function(module, exports) {

	'use strict';module.exports={docRow:{display:'flex',flexDirection:'row'/*
	                border: '1px solid blue'
	        */},docColumn:{display:'flex',flexDirection:'column',/*
	                border: '1px solid yellow',
	        */width:'50%'},doc:{display:'flex',flexDirection:'column'/*
	                border: '1px solid brown'
	        */},grid:{mainTable:{width:'100%'},headerTable:{width:'100%'},gridContainer:{width:'100%'}},gridRow:{/*
	                border: '1px solid black',
	        */backgroundColor:'white',position:'relative',margin:'10% 30% 10% 30%',width:'auto',opacity:'1',top:'100px'},btnEdit:{width:'min-content'}};

/***/ }),
/* 334 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(10);
	var PropTypes = __webpack_require__(33);

	var DocumentTemplate = __webpack_require__(197),
	    InputText = __webpack_require__(219),
	    TextArea = __webpack_require__(226),
	    Select = __webpack_require__(215),
	    styles = __webpack_require__(335);
	var LIBRARIES = [{ id: 'kontod', filter: '' }];

	var Project = function (_React$PureComponent) {
	    _inherits(Project, _React$PureComponent);

	    function Project(props) {
	        _classCallCheck(this, Project);

	        var _this = _possibleConstructorReturn(this, (Project.__proto__ || Object.getPrototypeOf(Project)).call(this, props));

	        _this.state = {
	            docId: props.docId ? props.docId : Number(props.match.params.docId),
	            loadedData: false,
	            docTypeId: _this.props.history.location.state ? _this.props.history.location.state.docPropId : ''
	        };
	        _this.renderer = _this.renderer.bind(_this);

	        return _this;
	    }

	    _createClass(Project, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(DocumentTemplate, { docId: this.state.docId,
	                ref: 'document',
	                history: this.props.history,
	                libs: LIBRARIES,
	                docTypeId: 'DOKPROPS',
	                initData: this.props.initData,
	                renderer: this.renderer });
	        }

	        /**
	         * Метод вернет кастомный компонент
	         * @param self
	         * @returns {*}
	         */

	    }, {
	        key: 'renderer',
	        value: function renderer(self) {
	            if (!self.docData) {
	                return null;
	            }
	            if (!self.docData.dok && this.props.history) {
	                self.docData.dok = this.props.history.location.state.dokPropId;
	            }

	            return React.createElement(
	                'div',
	                { style: styles.doc },
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(InputText, { title: 'Dokument ',
	                            name: 'dok',
	                            ref: 'input-dok',
	                            readOnly: true,
	                            value: self.docData.dok
	                        }),
	                        React.createElement(Select, { title: 'Korr. konto: ',
	                            name: 'konto',
	                            libs: 'kontod',
	                            data: self.libs['kontod'],
	                            value: self.docData['konto'] || '',
	                            readOnly: !self.state.edited,
	                            ref: 'select_konto',
	                            collId: 'kood',
	                            onChange: self.handleInputChange }),
	                        React.createElement(Select, { title: 'KBM.konto: ',
	                            name: 'kbmkonto',
	                            libs: 'kontod',
	                            data: self.libs['kontod'],
	                            value: self.docData.kbmkonto,
	                            readOnly: !self.state.edited,
	                            ref: 'kbmkonto',
	                            collId: 'kood',
	                            onChange: self.handleInputChange })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(TextArea, { title: 'Selgitus',
	                        name: 'selg',
	                        ref: 'textarea-selg',
	                        onChange: self.handleInputChange,
	                        value: self.docData.selg || '',
	                        readOnly: !self.state.edited })
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(TextArea, { title: 'Muud',
	                        name: 'muud',
	                        ref: 'textarea-muud',
	                        onChange: self.handleInputChange,
	                        value: self.docData.muud || '',
	                        readOnly: !self.state.edited })
	                )
	            );
	        }
	    }]);

	    return Project;
	}(React.PureComponent);

	Project.propTypes = {
	    docId: PropTypes.number,
	    initData: PropTypes.object,
	    userData: PropTypes.object
	};

	Project.defaultProps = {
	    initData: {},
	    userData: {}
	};
	module.exports = Project;

/***/ }),
/* 335 */
/***/ (function(module, exports) {

	'use strict';module.exports={docRow:{display:'flex',flexDirection:'row'/*
	                border: '1px solid blue'
	        */},docColumn:{display:'flex',flexDirection:'column',/*
	                border: '1px solid yellow',
	        */width:'50%'},doc:{display:'flex',flexDirection:'column'/*
	                border: '1px solid brown'
	        */}};

/***/ }),
/* 336 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(10);
	var PropTypes = __webpack_require__(33);

	var DocumentTemplate = __webpack_require__(197),
	    InputText = __webpack_require__(219),
	    TextArea = __webpack_require__(226),
	    CheckBox = __webpack_require__(175),
	    styles = __webpack_require__(337);

	/**
	 * Класс реализует документ справочника признаков.
	 */

	var User = function (_React$PureComponent) {
	    _inherits(User, _React$PureComponent);

	    function User(props) {
	        _classCallCheck(this, User);

	        var _this = _possibleConstructorReturn(this, (User.__proto__ || Object.getPrototypeOf(User)).call(this, props));

	        _this.state = {
	            docId: props.docId ? props.docId : Number(props.match.params.docId),
	            loadedData: false
	        };
	        _this.renderer = _this.renderer.bind(_this);
	        return _this;
	    }

	    _createClass(User, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(DocumentTemplate, { docId: this.state.docId,
	                ref: 'document',
	                docTypeId: 'USERID',
	                module: this.props.module,
	                initData: this.props.initData,
	                renderer: this.renderer
	            });
	        }

	        /**
	         * Метод вернет кастомный компонент
	         * @param self
	         * @returns {*}
	         */

	    }, {
	        key: 'renderer',
	        value: function renderer(self) {
	            if (!self.docData) {
	                return null;
	            }
	            return React.createElement(
	                'div',
	                { style: styles.doc },
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(
	                        'div',
	                        { style: styles.docColumn },
	                        React.createElement(InputText, { title: 'Kasutaja tunnus:  ',
	                            name: 'kasutaja',
	                            ref: 'input-kasutaja',
	                            readOnly: true,
	                            value: self.docData.kasutaja || '',
	                            onChange: self.handleInputChange }),
	                        React.createElement(InputText, { title: 'Nimi: ',
	                            name: 'ametnik',
	                            ref: 'input-ametnik',
	                            readOnly: !self.state.edited,
	                            value: self.docData.ametnik || '',
	                            onChange: self.handleInputChange }),
	                        React.createElement(InputText, { title: 'Email: ',
	                            name: 'email',
	                            ref: 'input-email',
	                            readOnly: !self.state.edited,
	                            value: self.docData.email || '',
	                            onChange: self.handleInputChange }),
	                        React.createElement(InputText, { title: 'Smtp: ',
	                            name: 'smtp',
	                            ref: 'input-smtp',
	                            readOnly: !self.state.edited,
	                            value: self.docData.smtp || '',
	                            onChange: self.handleInputChange }),
	                        React.createElement(InputText, { title: 'Port: ',
	                            name: 'port',
	                            ref: 'input-port',
	                            readOnly: !self.state.edited,
	                            value: self.docData.port || '',
	                            onChange: self.handleInputChange }),
	                        React.createElement(InputText, { title: 'Email kasutaja: ',
	                            name: 'user',
	                            ref: 'input-user',
	                            readOnly: !self.state.edited,
	                            value: self.docData.user || '',
	                            onChange: self.handleInputChange }),
	                        React.createElement(InputText, { title: 'Email parool: ',
	                            name: 'pass',
	                            ref: 'input-pass',
	                            readOnly: !self.state.edited,
	                            value: self.docData.pass || '',
	                            onChange: self.handleInputChange }),
	                        React.createElement(CheckBox, { title: 'Kas raamatupidaja?',
	                            name: 'is_kasutaja',
	                            value: Boolean(self.docData.is_kasutaja),
	                            ref: 'checkbox_is_kasutaja',
	                            onChange: self.handleInputChange,
	                            readOnly: true
	                        }),
	                        React.createElement(CheckBox, { title: 'Kas peakasutaja?',
	                            name: 'is_peakasutaja',
	                            value: Boolean(self.docData.is_peakasutaja),
	                            ref: 'checkbox_is_peakasutaja',
	                            onChange: self.handleInputChange,
	                            readOnly: true
	                        }),
	                        React.createElement(CheckBox, { title: 'Kas administraator?',
	                            name: 'is_admin',
	                            value: Boolean(self.docData.is_admin),
	                            ref: 'checkbox_is_admin',
	                            onChange: self.handleInputChange,
	                            readOnly: true
	                        }),
	                        React.createElement(CheckBox, { title: 'Kas vaatleja?',
	                            name: 'is_vaatleja',
	                            value: Boolean(self.docData.is_vaatleja),
	                            ref: 'checkbox_is_vaatleja',
	                            onChange: self.handleInputChange,
	                            readOnly: true
	                        }),
	                        React.createElement(CheckBox, { title: 'Kas laste arvestaja?',
	                            name: 'is_arvestaja',
	                            value: Boolean(self.docData.is_arvestaja),
	                            ref: 'checkbox_is_arvestaja',
	                            onChange: self.handleInputChange,
	                            readOnly: true
	                        }),
	                        React.createElement(CheckBox, { title: 'Kas eelarve taotluse koostaja?',
	                            name: 'is_eel_koostaja',
	                            value: Boolean(self.docData.is_eel_koostaja),
	                            ref: 'checkbox_is_eel_koostaja',
	                            onChange: self.handleInputChange,
	                            readOnly: true
	                        }),
	                        React.createElement(CheckBox, { title: 'Kas eelarve taotluse allkriastaja?',
	                            name: 'is_eel_allkirjastaja',
	                            value: Boolean(self.docData.is_eel_allkirjastaja),
	                            ref: 'checkbox_is_eel_allkirjastaja',
	                            onChange: self.handleInputChange,
	                            readOnly: true
	                        }),
	                        React.createElement(CheckBox, { title: 'Kas eelarve taotluse esitaja?',
	                            name: 'is_eel_esitaja',
	                            value: Boolean(self.docData.is_eel_esitaja),
	                            ref: 'checkbox_is_eel_esitaja',
	                            onChange: self.handleInputChange,
	                            readOnly: true
	                        }),
	                        React.createElement(CheckBox, { title: 'Kas asutuste korraldaja?',
	                            name: 'is_asutuste_korraldaja',
	                            value: Boolean(self.docData.is_asutuste_korraldaja),
	                            ref: 'checkbox_is_asutuste_korraldaja',
	                            onChange: self.handleInputChange,
	                            readOnly: true
	                        }),
	                        React.createElement(CheckBox, { title: 'Kas rekl.maksu administraator?',
	                            name: 'is_rekl_administrator',
	                            value: Boolean(self.docData.is_rekl_administrator),
	                            ref: 'checkbox_is_rekl_administrator',
	                            onChange: self.handleInputChange,
	                            readOnly: true
	                        }),
	                        React.createElement(CheckBox, { title: 'Kas rekl.maksu haldur?',
	                            name: 'is_rekl_maksuhaldur',
	                            value: Boolean(self.docData.is_rekl_maksuhaldur),
	                            ref: 'checkbox_is_rekl_maksuhaldur',
	                            onChange: self.handleInputChange,
	                            readOnly: true
	                        }),
	                        React.createElement(CheckBox, { title: 'Kas ladu kasutaja?',
	                            name: 'is_ladu_kasutaja',
	                            value: Boolean(self.docData.is_ladu_kasutaja),
	                            ref: 'checkbox_is_ladu_kasutaja',
	                            onChange: self.handleInputChange,
	                            readOnly: true
	                        })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: styles.docRow },
	                    React.createElement(TextArea, { title: 'Muud',
	                        name: 'muud',
	                        ref: 'textarea-muud',
	                        onChange: self.handleInputChange,
	                        value: self.docData.muud || '',
	                        readOnly: !self.state.edited })
	                )
	            );
	        }
	    }]);

	    return User;
	}(React.PureComponent);

	User.propTypes = {
	    docId: PropTypes.number,
	    initData: PropTypes.object
	};

	User.defaultProps = {
	    initData: {}
	};

	module.exports = User;

/***/ }),
/* 337 */
/***/ (function(module, exports) {

	'use strict';module.exports={docRow:{display:'flex',flexDirection:'row'/*
	                border: '1px solid blue'
	        */},docColumn:{display:'flex',flexDirection:'column',/*
	                border: '1px solid yellow',
	        */width:'50%'},doc:{display:'flex',flexDirection:'column'/*
	                border: '1px solid brown'
	        */}};

/***/ }),
/* 338 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(10);
	var PropTypes = __webpack_require__(33);
	var _fetchData = __webpack_require__(51);
	var DocContext = __webpack_require__(1);

	var InputText = __webpack_require__(219),
	    Form = __webpack_require__(200),
	    BtnEmail = __webpack_require__(208),
	    BtnGetPdf = __webpack_require__(209),
	    ToolbarContainer = __webpack_require__(78),
	    TextArea = __webpack_require__(226),
	    BtnInfo = __webpack_require__(85),
	    styles = __webpack_require__(339);

	/**
	 * Класс реализует документ справочника признаков.
	 */

	var Email = function (_React$Component) {
	    _inherits(Email, _React$Component);

	    function Email(props) {
	        _classCallCheck(this, Email);

	        var _this = _possibleConstructorReturn(this, (Email.__proto__ || Object.getPrototypeOf(Email)).call(this, props));

	        _this.state = {
	            email: null,
	            subject: null,
	            context: null,
	            attachment: null,
	            warningType: null,
	            warning: null
	        };

	        _this.btnEmailClickHandler = _this.btnEmailClickHandler.bind(_this);
	        _this.handleInputChange = _this.handleInputChange.bind(_this);
	        _this.handleBtnGetPdf = _this.handleBtnGetPdf.bind(_this);

	        return _this;
	    }

	    _createClass(Email, [{
	        key: 'render',
	        value: function render() {
	            var hasEmail = !!this.state.email;
	            var warningStyle = styles[this.state.warningType] ? styles[this.state.warningType] : null;

	            return React.createElement(
	                Form,
	                null,
	                React.createElement(
	                    ToolbarContainer,
	                    null,
	                    React.createElement(BtnEmail, {
	                        ref: 'btnEmail',
	                        docTypeId: DocContext.docTypeId,
	                        onClick: this.btnEmailClickHandler,
	                        disabled: !hasEmail
	                    }),
	                    React.createElement(BtnInfo, { ref: 'btnInfo',
	                        value: '',
	                        docTypeId: 'email_document',
	                        show: true })
	                ),
	                React.createElement(
	                    ToolbarContainer,
	                    { ref: 'toolbar-container' },
	                    React.createElement(
	                        'div',
	                        { className: 'doc-toolbar-warning', style: warningStyle },
	                        this.state.warning ? React.createElement(
	                            'span',
	                            null,
	                            this.state.warning
	                        ) : null
	                    )
	                ),
	                React.createElement(InputText, {
	                    title: 'Adressaat: ',
	                    name: 'email',
	                    ref: 'input-email',
	                    value: this.state.email || '',
	                    onChange: this.handleInputChange
	                }),
	                React.createElement(InputText, {
	                    title: 'Pealkiri: ',
	                    name: 'subject',
	                    ref: 'input-subject',
	                    value: this.state.subject || '',
	                    onChange: this.handleInputChange
	                }),
	                React.createElement(TextArea, { title: 'Sisu',
	                    name: 'context',
	                    ref: 'textarea-context',
	                    onChange: this.handleInputChange,
	                    value: this.state.context || ''
	                }),
	                React.createElement(BtnGetPdf, {
	                    value: 'doc.pdf',
	                    name: 'btnGetPdf',
	                    ref: 'btnGetPdf',
	                    onClick: this.handleBtnGetPdf
	                })
	            );
	        }
	    }, {
	        key: 'handleBtnGetPdf',
	        value: function handleBtnGetPdf() {
	            // get url
	            var url = void 0;
	            if (DocContext['email-params'].queryType == 'id') {
	                url = '/pdf/' + DocContext.docTypeId + '/' + DocContext.userData.uuid + '/' + DocContext['email-params'].docId;
	                window.open('' + url);
	            } else {
	                var params = encodeURIComponent('' + DocContext['email-params'].sqlWhere);
	                var filter = encodeURIComponent('' + JSON.stringify(DocContext['email-params'].filterData));

	                if (DocContext['email-params'].filterData.length) {
	                    url = '/pdf/' + DocContext.docTypeId + '/' + DocContext.userData.uuid + '/' + filter;
	                } else {
	                    url = '/pdf/' + DocContext.docTypeId + '/' + DocContext.userData.uuid + '/0';
	                }
	                window.open(url + '/' + params);
	            }
	        }
	    }, {
	        key: 'handleInputChange',
	        value: function handleInputChange(inputName, inputValue) {
	            var data = this.state;
	            data[inputName] = inputValue;
	            this.setState(data);
	        }
	    }, {
	        key: 'btnEmailClickHandler',
	        value: function btnEmailClickHandler() {
	            var _this2 = this;

	            var params = {
	                docTypeId: DocContext['email-params'].docTypeId,
	                id: DocContext['email-params'].queryType == 'id' ? DocContext['email-params'].docId : null,
	                sqlWhere: DocContext['email-params'].queryType == 'id' ? null : DocContext['email-params'].sqlWhere,
	                filterData: DocContext['email-params'].queryType == 'id' ? null : DocContext['email-params'].filterData,
	                module: DocContext.module,
	                userId: DocContext.userData.userId,
	                uuid: DocContext.userData.uuid,
	                context: this.state.context,
	                email: this.state.email,
	                subject: this.state.subject
	            };

	            this.fetchData('Post', '/email/sendPrintForm', params).then(function (response) {
	                if (response.status === 200) {
	                    _this2.setState({
	                        warning: 'Email saadetud edukalt, suunatan ...',
	                        warningType: 'ok'
	                    }, function () {
	                        setTimeout(function () {
	                            _this2.props.history.goBack();
	                        }, 10000);
	                    });
	                } else {
	                    _this2.setState({
	                        warning: 'Tekkis viga',
	                        warningType: 'error'
	                    });
	                }
	            }).catch(function (error) {
	                _this2.setState({
	                    warning: 'Tekkis viga ' + error.error,
	                    warningType: 'error'
	                });
	                console.error(error);
	            });
	        }

	        /**
	         * Выполнит запросы
	         */

	    }, {
	        key: 'fetchData',
	        value: function fetchData(protocol, api, params) {
	            var _this3 = this;

	            var url = api ? api : URL + '/' + this.props.docTypeId + '/' + this.state.docId;
	            var method = 'fetchDataPost';

	            if (protocol) {
	                //request call not default
	                method = 'fetchData' + protocol;
	            }

	            return new Promise(function (resolved, rejected) {
	                _fetchData[method](url, params).then(function (response) {
	                    if (response.status && response.status === 401) {
	                        document.location = '/login';
	                    }

	                    if (response.data) {

	                        //execute select calls
	                        if (response.data.action && response.data.action === 'select') {
	                            _this3.docData = response.data.data[0];

	                            // will store required fields info
	                            if (response.data.data[0].requiredFields) {
	                                _this3.requiredFields = response.data.data[0].requiredFields;
	                            }

	                            // will store bpm info
	                            if (response.data.data[0].bpm) {
	                                _this3.bpm = response.data.data[0].bpm;
	                            }

	                            //should return data and called for reload
	                            _this3.setState({ reloadData: false, warning: '', warningType: null });
	                            resolved(response.data.data[0]);
	                        }

	                        if (response.data.action && response.data.action === 'save' && response.data.result.error_code) {
	                            // error in save
	                            _this3.setState({
	                                warning: 'Tekkis viga ' + response.data.result.error_message,
	                                warningType: 'error'
	                            });
	                            return rejected();
	                        }

	                        return resolved(response.data);
	                    } else {
	                        console.error('Fetch viga ', response, params);
	                        _this3.setState({
	                            warning: 'Tekkis viga ' + (response.data.error_message ? response.data.error_message : ''),
	                            warningType: 'error'
	                        });
	                        return rejected();
	                    }
	                });
	            }, function (error) {
	                console.error('doc template Error:', error);
	                // possibly auth error, so re-login
	                if (_this3.props.history) {
	                    _this3.props.history.push('/login');
	                }
	                return rejected();
	            });
	        }
	    }]);

	    return Email;
	}(React.Component);

	/*
	Email.propTypes = {
	    docId: PropTypes.number,
	    initData: PropTypes.object
	};
	*/

	/*
	Email.defaultProps = {
	    initData: {},
	};
	*/

	module.exports = Email;

/***/ }),
/* 339 */
/***/ (function(module, exports) {

	'use strict';module.exports={docRow:{display:'flex',flexDirection:'row'/*
	                border: '1px solid blue'
	        */},docColumn:{display:'flex',flexDirection:'column',/*
	                border: '1px solid yellow',
	        */width:'50%'},doc:{display:'flex',flexDirection:'column'/*
	                border: '1px solid brown'
	        */},ok:{backgroundColor:'lightgreen',width:'100%',textAlign:'right'},error:{backgroundColor:'lightcoral',width:'100%',textAlign:'right'}};

/***/ }),
/* 340 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(10);
	var DocumentRegister = __webpack_require__(235);
	var BtnGetXml = __webpack_require__(244);
	var ToolbarContainer = __webpack_require__(78);
	var getSum = __webpack_require__(257);
	var InputNumber = __webpack_require__(221);

	var styles = __webpack_require__(341);
	var DOC_TYPE_ID = 'INF3';
	var DocContext = __webpack_require__(1);
	var TOOLBAR_PROPS = {
	    add: false,
	    edit: false,
	    delete: false,
	    start: false,
	    print: true,
	    email: true
	};

	/**
	 * Класс реализует документ справочника признаков.
	 */

	var Documents = function (_React$PureComponent) {
	    _inherits(Documents, _React$PureComponent);

	    function Documents(props) {
	        _classCallCheck(this, Documents);

	        var _this = _possibleConstructorReturn(this, (Documents.__proto__ || Object.getPrototypeOf(Documents)).call(this, props));

	        _this.onClickHandler = _this.onClickHandler.bind(_this);
	        _this.renderer = _this.renderer.bind(_this);
	        _this.state = {
	            summa: 0,
	            read: 0
	        };
	        return _this;
	    }

	    _createClass(Documents, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(
	                'div',
	                null,
	                React.createElement(DocumentRegister, { initData: this.props.initData,
	                    history: this.props.history ? this.props.history : null,
	                    module: this.props.module,
	                    ref: 'register',
	                    toolbarProps: TOOLBAR_PROPS,
	                    docTypeId: DOC_TYPE_ID,
	                    style: styles,
	                    render: this.renderer }),
	                React.createElement(InputNumber, { title: 'Read kokku:',
	                    name: 'read_kokku',
	                    style: styles.total,
	                    ref: 'input-read',
	                    value: Number(this.state.read).toFixed(2) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'Summa kokku:',
	                    name: 'summa_kokku',
	                    style: styles.total,
	                    ref: 'input-summa',
	                    value: Number(this.state.summa).toFixed(2) || 0,
	                    disabled: true })
	            );
	        }
	    }, {
	        key: 'renderer',
	        value: function renderer(self) {
	            var summa = self.gridData ? getSum(self.gridData, 'summa') : 0;
	            if (summa) {
	                this.setState({ summa: summa, read: self.gridData.length });
	            }

	            return React.createElement(
	                ToolbarContainer,
	                null,
	                React.createElement(BtnGetXml, {
	                    value: 'Saama XML fail',
	                    onClick: this.onClickHandler,
	                    ref: 'btn-getXml'
	                })
	            );
	        }

	        //handler для события клик на кнопках панели

	    }, {
	        key: 'onClickHandler',
	        value: function onClickHandler(event) {
	            var Doc = this.refs['register'];

	            if (Doc.gridData && Doc.gridData.length) {
	                //делаем редайрект на конфигурацию
	                var sqlWhere = Doc.state.sqlWhere;
	                var url = '/reports/inf3/' + DocContext.userData.uuid;
	                var params = encodeURIComponent('' + sqlWhere);
	                window.open(url + '/' + params);
	            } else {
	                Doc.setState({
	                    warning: 'Mitte ühtegi INF teenused leidnum', // строка извещений
	                    warningType: 'notValid'

	                });
	            }
	        }
	    }]);

	    return Documents;
	}(React.PureComponent);

	module.exports = Documents;

/***/ }),
/* 341 */
/***/ (function(module, exports) {

	'use strict';module.exports={grid:{mainTable:{width:'100%',td:{border:'1px solid lightGrey',display:'table-cell',paddingLeft:'5px'}},headerTable:{width:'100%'},gridContainer:{width:'100%'}},doc:{position:'relative',height:'100%',display:'flex',flexDirection:'column'},total:{width:'auto'}};

/***/ }),
/* 342 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(10);
	var DocumentRegister = __webpack_require__(235);
	var InputNumber = __webpack_require__(221);
	var getSum = __webpack_require__(257);

	var styles = __webpack_require__(343);

	var DOC_TYPE_ID = 'LAPS_KOKKUVOTTE';
	var TOOLBAR_PROPS = {
	    add: false,
	    edit: false,
	    delete: false,
	    start: false,
	    print: true,
	    email: true
	};

	/**
	 * Класс реализует документ справочника признаков.
	 */

	var Documents = function (_React$PureComponent) {
	    _inherits(Documents, _React$PureComponent);

	    function Documents(props) {
	        _classCallCheck(this, Documents);

	        var _this = _possibleConstructorReturn(this, (Documents.__proto__ || Object.getPrototypeOf(Documents)).call(this, props));

	        _this.state = {
	            summa: 0,
	            tasutud: 0,
	            mahakandmine: 0,
	            jaak: 0,
	            read: 0
	        };

	        _this.renderer = _this.renderer.bind(_this);
	        return _this;
	    }

	    _createClass(Documents, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(
	                'div',
	                null,
	                React.createElement(DocumentRegister, { initData: this.props.initData,
	                    history: this.props.history ? this.props.history : null,
	                    module: this.props.module,
	                    ref: 'register',
	                    toolbarProps: TOOLBAR_PROPS,
	                    docTypeId: DOC_TYPE_ID,
	                    style: styles,
	                    render: this.renderer }),
	                React.createElement(InputNumber, { title: 'Read kokku:',
	                    name: 'read_kokku',
	                    style: styles.total,
	                    ref: 'input-read',
	                    value: Number(this.state.read) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'Arve summa kokku:',
	                    name: 'summa_kokku',
	                    style: styles.total,
	                    ref: 'input-summa',
	                    value: Number(this.state.summa).toFixed(2) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'Tasutud kokku:',
	                    name: 'tasutud_kokku',
	                    style: styles.total,
	                    ref: 'input-tasutud',
	                    value: Number(this.state.tasutud).toFixed(2) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'Mahakantud kokku:',
	                    name: 'mahakandmine_kokku',
	                    style: styles.total,
	                    ref: 'input-mahakandmine',
	                    value: Number(this.state.mahakandmine).toFixed(2) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'J\xE4\xE4k kokku:',
	                    name: 'jaak_kokku',
	                    style: styles.total,
	                    ref: 'input-jaak',
	                    value: Number(this.state.jaak).toFixed(2) || 0,
	                    disabled: true })
	            );
	        }
	    }, {
	        key: 'renderer',
	        value: function renderer(self) {
	            var summa = self.gridData ? getSum(self.gridData, 'summa') : 0;
	            var tasutud = self.gridData ? getSum(self.gridData, 'tasutud') : 0;
	            var mahakandmine = self.gridData ? getSum(self.gridData, 'mahakandmine') : 0;
	            var jaak = self.gridData ? getSum(self.gridData, 'jaak') : 0;
	            if (summa) {
	                this.setState({ summa: summa, tasutud: tasutud, mahakandmine: mahakandmine, jaak: jaak, read: self.gridData.length });
	            }

	            return React.createElement('div', null);
	        }
	    }]);

	    return Documents;
	}(React.PureComponent);

	module.exports = Documents;

/***/ }),
/* 343 */
/***/ (function(module, exports) {

	'use strict';module.exports={grid:{mainTable:{width:'100%',td:{border:'1px solid lightGrey',display:'table-cell',paddingLeft:'5px'}},headerTable:{width:'100%'},gridContainer:{width:'100%'}},total:{width:'auto'},doc:{position:'relative',height:'100%',display:'flex',flexDirection:'column'}};

/***/ }),
/* 344 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(10);
	var DocumentRegister = __webpack_require__(235);
	var BtnGetCsv = __webpack_require__(244);
	var ToolbarContainer = __webpack_require__(78);
	var InputNumber = __webpack_require__(221);
	var BtnEarve = __webpack_require__(271);

	var getSum = __webpack_require__(257);

	var DocContext = __webpack_require__(1);

	var styles = __webpack_require__(345);
	var EVENTS = [{ name: 'Saama CSV fail', method: null, docTypeId: null }, { name: 'Saama XML e-arved (SEB) kõik valitud arved', method: null, docTypeId: null }, { name: 'Saama XML e-arved (SWED) kõik valitud arved', method: null, docTypeId: null }];

	var DOC_TYPE_ID = 'ARVED_KOODI_JARGI';
	var TOOLBAR_PROPS = {
	    add: false,
	    edit: false,
	    delete: false,
	    start: false,
	    print: true,
	    email: true
	};

	/**
	 * Класс реализует документ справочника признаков.
	 */

	var Documents = function (_React$PureComponent) {
	    _inherits(Documents, _React$PureComponent);

	    function Documents(props) {
	        _classCallCheck(this, Documents);

	        var _this = _possibleConstructorReturn(this, (Documents.__proto__ || Object.getPrototypeOf(Documents)).call(this, props));

	        _this.state = {
	            summa: 0,
	            read: 0
	        };
	        _this.renderer = _this.renderer.bind(_this);
	        _this.onClickHandler = _this.onClickHandler.bind(_this);

	        return _this;
	    }

	    _createClass(Documents, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(
	                'div',
	                null,
	                React.createElement(DocumentRegister, { initData: this.props.initData,
	                    history: this.props.history ? this.props.history : null,
	                    module: this.props.module,
	                    ref: 'register',
	                    toolbarProps: TOOLBAR_PROPS,
	                    docTypeId: DOC_TYPE_ID,
	                    style: styles,
	                    render: this.renderer }),
	                React.createElement(InputNumber, { title: 'Read kokku:',
	                    name: 'read_kokku',
	                    style: styles.total,
	                    ref: 'input-read',
	                    value: Number(this.state.read) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'Summa kokku:',
	                    name: 'summa_kokku',
	                    style: styles.total,
	                    ref: 'input-summa',
	                    value: Number(this.state.summa).toFixed(2) || 0,
	                    disabled: true })
	            );
	        }
	    }, {
	        key: 'renderer',
	        value: function renderer(self) {
	            var summa = self.gridData ? getSum(self.gridData, 'summa') : 0;
	            var read = self.gridData ? self.gridData.length : 0;
	            if (summa) {
	                this.setState({ summa: summa, read: read });
	            }

	            return React.createElement(
	                ToolbarContainer,
	                null,
	                React.createElement(BtnEarve, {
	                    onClick: this.onClickHandler,
	                    docTypeId: DOC_TYPE_ID,
	                    phrase: 'Kas laadida XML (SWED) fail?',
	                    ref: 'btnEarveSwedXML',
	                    value: EVENTS[2].name
	                }),
	                React.createElement(BtnEarve, {
	                    onClick: this.onClickHandler,
	                    docTypeId: DOC_TYPE_ID,
	                    phrase: 'Kas laadida XML (SEB) fail?',
	                    ref: 'btnEarveSebXML',
	                    value: EVENTS[1].name
	                }),
	                React.createElement(BtnGetCsv, {
	                    value: 'Saama CSV fail',
	                    onClick: this.onClickHandler,
	                    showDate: false,
	                    ref: 'btn-getcsv'
	                })
	            );
	        }

	        //handler для события клик на кнопках панели

	    }, {
	        key: 'onClickHandler',
	        value: function onClickHandler(event) {
	            var Doc = this.refs['register'];
	            var ids = new Set(); // сюда пишем ид счетом, которые под обработку
	            //Saama CSV fail
	            switch (event) {
	                case EVENTS[0].name:

	                    if (Doc.gridData && Doc.gridData.length) {
	                        //делаем редайрект на конфигурацию
	                        var sqlWhere = Doc.state.sqlWhere;
	                        var url = '/reports/arved_koodi_jargi/' + DocContext.userData.uuid;
	                        var params = encodeURIComponent('' + sqlWhere);
	                        window.open(url + '/' + params);
	                    } else {
	                        Doc.setState({
	                            warning: 'Mitte ühtegi kirjed leidnud', // строка извещений
	                            warningType: 'notValid'

	                        });
	                    }
	                case EVENTS[1].name:
	                    //e-arved SEB (XML)

	                    // будет сформирован файл для отправки в банк СЕБ
	                    Doc.gridData.forEach(function (row) {
	                        if (row.pank && row.pank == 'SEB' && row.select && Number(row.summa) > 0) {
	                            // выбрано для печати
	                            ids.add(row.id);
	                        }
	                    });
	                    // конвертация в массив
	                    ids = Array.from(ids);

	                    if (!ids.length) {
	                        Doc.setState({
	                            warning: 'Mitte ühtegi arve leidnum', // строка извещений
	                            warningType: 'notValid'
	                        });
	                    } else {
	                        // отправляем запрос на выполнение
	                        Doc.setState({
	                            warning: 'Leidsin ' + ids.length + ' arveid', // строка извещений
	                            warningType: 'ok'
	                        });
	                        var _url = '/e-arved/seb/' + DocContext.userData.uuid + '/' + ids;
	                        window.open('' + _url);
	                    }
	                    break;
	                case EVENTS[2].name:
	                    //e-arved Swed (XML)

	                    // будет сформирован файл для отправки в банк SWED
	                    Doc.gridData.forEach(function (row) {
	                        if (row.select && row.pank && row.pank == 'SWED' && Number(row.summa) > 0) {
	                            // && row.kas_swed
	                            // выбрано для печати
	                            ids.add(row.id);
	                        }
	                    });
	                    // конвертация в массив
	                    ids = Array.from(ids);

	                    if (!ids.length) {
	                        Doc.setState({
	                            warning: 'Mitte ühtegi arve leidnum', // строка извещений
	                            warningType: 'notValid'
	                        });
	                    } else {
	                        // отправляем запрос на выполнение
	                        Doc.setState({
	                            warning: 'Leidsin ' + ids.length + ' arveid', // строка извещений
	                            warningType: 'ok'
	                        });

	                        var _url2 = '/e-arved/swed/' + DocContext.userData.uuid + '/' + ids;
	                        window.open('' + _url2);
	                    }
	                    break;
	            }
	        }
	    }]);

	    return Documents;
	}(React.PureComponent);

	module.exports = Documents;

/***/ }),
/* 345 */
/***/ (function(module, exports) {

	'use strict';module.exports={grid:{mainTable:{width:'100%',td:{border:'1px solid lightGrey',display:'table-cell',paddingLeft:'5px'}},headerTable:{width:'100%'},gridContainer:{width:'95%'}},total:{width:'auto'},doc:{height:'100%'}};

/***/ }),
/* 346 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(10);
	var DocumentRegister = __webpack_require__(235);
	var BtnGetXml = __webpack_require__(244);
	var ToolbarContainer = __webpack_require__(78);
	var InputNumber = __webpack_require__(221);
	var InputText = __webpack_require__(219);
	var Loading = __webpack_require__(253);

	var styles = __webpack_require__(347);
	var DOC_TYPE_ID = 'SALDO_JA_KAIVE';
	var TOOLBAR_PROPS = {
	    add: false,
	    edit: false,
	    delete: false,
	    start: false,
	    print: true,
	    email: true
	};
	var DocContext = __webpack_require__(1);

	/**
	 * Класс реализует документ справочника признаков.
	 */

	var Documents = function (_React$PureComponent) {
	    _inherits(Documents, _React$PureComponent);

	    function Documents(props) {
	        _classCallCheck(this, Documents);

	        var _this = _possibleConstructorReturn(this, (Documents.__proto__ || Object.getPrototypeOf(Documents)).call(this, props));

	        _this.onClickHandler = _this.onClickHandler.bind(_this);
	        _this.renderer = _this.renderer.bind(_this);
	        _this.state = {
	            alg_saldo: 0,
	            arvestatud: 0,
	            soodustus: 0,
	            laekumised: 0,
	            mahakantud: 0,
	            tagastused: 0,
	            jaak: 0,
	            read: 0,
	            filtri_read: 0
	        };

	        return _this;
	    }

	    _createClass(Documents, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(
	                'div',
	                null,
	                React.createElement(DocumentRegister, { initData: this.props.initData,
	                    history: this.props.history ? this.props.history : null,
	                    module: this.props.module,
	                    ref: 'register',
	                    toolbarProps: TOOLBAR_PROPS,
	                    docTypeId: DOC_TYPE_ID,
	                    style: styles,
	                    render: this.renderer }),
	                React.createElement(InputText, { title: 'Filtri all / read kokku:',
	                    name: 'read_kokku',
	                    style: styles.total,
	                    ref: 'input-read',
	                    value: String(this.state.filtri_read + '/' + this.state.read) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'Alg.saldo kokku:',
	                    name: 'alg_saldo_kokku',
	                    style: styles.total,
	                    ref: 'input-read',
	                    value: Number(this.state.alg_saldo) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'Arvestatud (sh \xFCmberarvestus) kokku:',
	                    name: 'arvestatud_kokku',
	                    style: styles.total,
	                    ref: 'input-arvestatud',
	                    value: Number(this.state.arvestatud) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'Soodustus kokku:',
	                    name: 'soodustus_kokku',
	                    style: styles.total,
	                    ref: 'input-soodustus',
	                    value: Number(this.state.soodustus) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'Arvestatud ja Soodustus kokku:',
	                    name: 'arv_ja_soodustus_kokku',
	                    style: styles.total,
	                    ref: 'input-arv_ja_soodustus',
	                    value: Number(this.state.arv_ja_soodustus) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'Laekumised kokku:',
	                    name: 'laekumised_kokku',
	                    style: styles.total,
	                    ref: 'input-laekumised',
	                    value: Number(this.state.laekumised) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'Mahakantud kokku:',
	                    name: 'mahakantud_kokku',
	                    style: styles.total,
	                    ref: 'input-mahandmine',
	                    value: Number(this.state.mahakantud) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'Tagastused kokku:',
	                    name: 'tagastused_kokku',
	                    style: styles.total,
	                    ref: 'input-tagastused',
	                    value: Number(this.state.tagastused) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'J\xE4\xE4k kokku:',
	                    name: 'jaak_kokku',
	                    style: styles.total,
	                    ref: 'input-jaak',
	                    value: Number(this.state.jaak) || 0,
	                    disabled: true })
	            );
	        }
	    }, {
	        key: 'renderer',
	        value: function renderer(self) {

	            if (!self || !self.gridData || !self.gridData.length) {
	                // пока нет данных
	                this.setState({
	                    alg_saldo: 0,
	                    arvestatud: 0,
	                    soodustus: 0,
	                    arv_ja_soodustus: 0,
	                    laekumised: 0,
	                    mahakantud: 0,
	                    tagastused: 0,
	                    jaak: 0,
	                    read: 0,
	                    filtri_read: 0
	                });
	                return null;
	            }

	            var alg_saldo = self.gridData ? self.gridData[0].alg_saldo_total : 0;
	            var arvestatud = self.gridData ? self.gridData[0].arvestatud_total : 0;
	            var soodustus = self.gridData ? self.gridData[0].soodustus_total : 0;
	            var arv_ja_soodustus = self.gridData ? self.gridData[0].arv_ja_soodustus_total : 0;
	            var laekumised = self.gridData ? self.gridData[0].laekumised_total : 0;
	            var mahakantud = self.gridData ? self.gridData[0].mahakantud_total : 0;
	            var tagastused = self.gridData ? self.gridData[0].tagastused_total : 0;
	            var jaak = self.gridData ? self.gridData[0].jaak_total : 0;

	            var read = self.gridData && self.gridData.length && self.gridData[0].rows_total ? self.gridData[0].rows_total : 0;
	            var filtri_read = self.gridData && self.gridData.length && self.gridData[0].filter_total ? self.gridData[0].filter_total : 0;

	            this.setState({
	                alg_saldo: alg_saldo,
	                arvestatud: arvestatud,
	                soodustus: soodustus,
	                arv_ja_soodustus: arv_ja_soodustus,
	                laekumised: laekumised,
	                mahakantud: mahakantud,
	                tagastused: tagastused,
	                jaak: jaak,
	                read: read,
	                filtri_read: filtri_read
	            });

	            return React.createElement(
	                ToolbarContainer,
	                null,
	                React.createElement(BtnGetXml, {
	                    value: 'Saama CSV fail',
	                    onClick: this.onClickHandler,
	                    showDate: false,
	                    ref: 'btn-getCsv'
	                })
	            );
	        }

	        //handler для события клик на кнопках панели

	    }, {
	        key: 'onClickHandler',
	        value: function onClickHandler() {
	            var Doc = this.refs['register'];

	            if (Doc.gridData && Doc.gridData.length) {
	                //делаем редайрект на конфигурацию
	                var sqlWhere = Doc.state.sqlWhere;
	                var url = '/reports/saldo_ja_kaive/' + DocContext.userData.uuid;
	                var params = encodeURIComponent('' + sqlWhere);
	                var filter = encodeURIComponent('' + JSON.stringify(Doc.filterData));
	                var fullUrl = sqlWhere ? url + '/' + filter + '/' + params : url + '/' + filter;
	                window.open(fullUrl);
	            } else {
	                Doc.setState({
	                    warning: 'Mitte ühtegi kirjed leidnud', // строка извещений
	                    warningType: 'notValid'

	                });
	            }
	        }
	    }]);

	    return Documents;
	}(React.PureComponent);

	module.exports = Documents;

/***/ }),
/* 347 */
/***/ (function(module, exports) {

	'use strict';module.exports={grid:{mainTable:{width:'100%',td:{border:'1px solid lightGrey',display:'table-cell',paddingLeft:'5px'}},headerTable:{width:'100%'},gridContainer:{width:'100%'}},doc:{height:'100%'},total:{width:'100px',margin:'0px 0px 0px 5px'}};

/***/ }),
/* 348 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(10);
	var DocumentRegister = __webpack_require__(235);
	var BtnGetXml = __webpack_require__(244);
	var ToolbarContainer = __webpack_require__(78);
	var InputNumber = __webpack_require__(221);
	var InputText = __webpack_require__(219);
	var Loading = __webpack_require__(253);

	var styles = __webpack_require__(349);
	var DOC_TYPE_ID = 'SALDO_JA_KAIBEANDMIK';
	var TOOLBAR_PROPS = {
	    add: false,
	    edit: false,
	    delete: false,
	    start: false,
	    print: true,
	    email: true
	};
	var DocContext = __webpack_require__(1);

	/**
	 * Класс реализует документ справочника признаков.
	 */

	var Documents = function (_React$PureComponent) {
	    _inherits(Documents, _React$PureComponent);

	    function Documents(props) {
	        _classCallCheck(this, Documents);

	        var _this = _possibleConstructorReturn(this, (Documents.__proto__ || Object.getPrototypeOf(Documents)).call(this, props));

	        _this.renderer = _this.renderer.bind(_this);
	        _this.state = {
	            alg_db: 0,
	            alg_kr: 0,
	            db: 0,
	            kr: 0,
	            mahakantud: 0,
	            lopp_db: 0,
	            lopp_kr: 0,
	            read: 0,
	            filtri_read: 0
	        };

	        return _this;
	    }

	    _createClass(Documents, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(
	                'div',
	                null,
	                React.createElement(DocumentRegister, { initData: this.props.initData,
	                    history: this.props.history ? this.props.history : null,
	                    module: this.props.module,
	                    ref: 'register',
	                    toolbarProps: TOOLBAR_PROPS,
	                    docTypeId: DOC_TYPE_ID,
	                    style: styles,
	                    render: this.renderer }),
	                React.createElement(InputText, { title: 'Filtri all / read kokku:',
	                    name: 'read_kokku',
	                    style: styles.total,
	                    ref: 'input-read',
	                    value: String(this.state.filtri_read + '/' + this.state.read) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'Alg.db kokku:',
	                    name: 'alg_db_kokku',
	                    style: styles.total,
	                    ref: 'input-read',
	                    value: Number(this.state.alg_db) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'Alg.kr kokku:',
	                    name: 'alg_kr_kokku',
	                    style: styles.total,
	                    ref: 'input-arvestatud',
	                    value: Number(this.state.alg_kr) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'Deebet kokku:',
	                    name: 'db_kokku',
	                    style: styles.total,
	                    ref: 'input-db_kokku',
	                    value: Number(this.state.db) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'Kreedit kokku:',
	                    name: 'kr_kokku',
	                    style: styles.total,
	                    ref: 'input-kr_kokku',
	                    value: Number(this.state.kr) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'Mahakantud kokku:',
	                    name: 'mahakantud_kokku',
	                    style: styles.total,
	                    ref: 'input-mahandmine',
	                    value: Number(this.state.mahakantud) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'L\xF5pp db. kokku:',
	                    name: 'lopp_db_kokku',
	                    style: styles.total,
	                    ref: 'input-laekumised',
	                    value: Number(this.state.lopp_db) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'L\xF5pp kr. kokku:',
	                    name: 'kr_kokku',
	                    style: styles.total,
	                    ref: 'input-kr_kokku',
	                    value: Number(this.state.lopp_kr) || 0,
	                    disabled: true })
	            );
	        }
	    }, {
	        key: 'renderer',
	        value: function renderer(self) {

	            if (!self || !self.gridData || !self.gridData.length) {
	                // пока нет данных
	                this.setState({
	                    alg_db: 0,
	                    alg_kr: 0,
	                    db: 0,
	                    kr: 0,
	                    mahakantud: 0,
	                    lopp_db: 0,
	                    lopp_kr: 0,
	                    read: 0,
	                    filtri_read: 0
	                });
	                return null;
	            }

	            var alg_db = self.gridData ? self.gridData[0].alg_db_total : 0;
	            var alg_kr = self.gridData ? self.gridData[0].alg_kr_total : 0;
	            var db = self.gridData ? self.gridData[0].db_total : 0;
	            var kr = self.gridData ? self.gridData[0].kr_total : 0;
	            var mahakantud = self.gridData ? self.gridData[0].mahakantud_total : 0;
	            var lopp_db = self.gridData ? self.gridData[0].lopp_db_total : 0;
	            var lopp_kr = self.gridData ? self.gridData[0].lopp_kr_total : 0;

	            var read = self.gridData && self.gridData.length && self.gridData[0].rows_total ? self.gridData[0].rows_total : 0;
	            var filtri_read = self.gridData && self.gridData.length && self.gridData[0].filter_total ? self.gridData[0].filter_total : 0;

	            this.setState({
	                alg_db: alg_db,
	                alg_kr: alg_kr,
	                db: db,
	                kr: kr,
	                mahakantud: mahakantud,
	                lopp_db: lopp_db,
	                lopp_kr: lopp_kr,
	                read: read,
	                filtri_read: filtri_read
	            });

	            return null;
	        }
	    }]);

	    return Documents;
	}(React.PureComponent);

	module.exports = Documents;

/***/ }),
/* 349 */
/***/ (function(module, exports) {

	'use strict';module.exports={grid:{mainTable:{width:'100%',td:{border:'1px solid lightGrey',display:'table-cell',paddingLeft:'5px'}},headerTable:{width:'100%'},gridContainer:{width:'100%'}},doc:{height:'100%'},total:{width:'100px',margin:'0px 0px 0px 5px'}};

/***/ }),
/* 350 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(10);
	var DocumentRegister = __webpack_require__(235);
	var BtnGetXml = __webpack_require__(244);
	var ToolbarContainer = __webpack_require__(78);
	var InputNumber = __webpack_require__(221);
	var InputText = __webpack_require__(219);
	var Loading = __webpack_require__(253);

	var styles = __webpack_require__(351);
	var DOC_TYPE_ID = 'KAIVE_ARUANNE';
	var TOOLBAR_PROPS = {
	    add: false,
	    edit: false,
	    delete: false,
	    start: false,
	    print: true,
	    email: true
	};
	var DocContext = __webpack_require__(1);

	/**
	 * Класс реализует документ справочника признаков.
	 */

	var Documents = function (_React$PureComponent) {
	    _inherits(Documents, _React$PureComponent);

	    function Documents(props) {
	        _classCallCheck(this, Documents);

	        var _this = _possibleConstructorReturn(this, (Documents.__proto__ || Object.getPrototypeOf(Documents)).call(this, props));

	        _this.onClickHandler = _this.onClickHandler.bind(_this);
	        _this.renderer = _this.renderer.bind(_this);
	        _this.state = {
	            alg_saldo: 0,
	            arvestatud: 0,
	            soodustus: 0,
	            laekumised: 0,
	            mahakantud: 0,
	            tagastused: 0,
	            jaak: 0,
	            read: 0,
	            filtri_read: 0
	        };

	        return _this;
	    }

	    _createClass(Documents, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(
	                'div',
	                null,
	                React.createElement(DocumentRegister, { initData: this.props.initData,
	                    history: this.props.history ? this.props.history : null,
	                    module: this.props.module,
	                    ref: 'register',
	                    toolbarProps: TOOLBAR_PROPS,
	                    docTypeId: DOC_TYPE_ID,
	                    style: styles,
	                    render: this.renderer }),
	                React.createElement(InputText, { title: 'Filtri all / read kokku:',
	                    name: 'read_kokku',
	                    style: styles.total,
	                    ref: 'input-read',
	                    value: String(this.state.filtri_read + '/' + this.state.read) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'Alg.saldo kokku:',
	                    name: 'alg_saldo_kokku',
	                    style: styles.total,
	                    ref: 'input-read',
	                    value: Number(this.state.alg_saldo) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'Arvestatud (sh \xFCmberarvestus) kokku:',
	                    name: 'arvestatud_kokku',
	                    style: styles.total,
	                    ref: 'input-arvestatud',
	                    value: Number(this.state.arvestatud) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'Soodustus kokku:',
	                    name: 'soodustus_kokku',
	                    style: styles.total,
	                    ref: 'input-soodustus',
	                    value: Number(this.state.soodustus) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'Arvestatud ja Soodustus kokku:',
	                    name: 'arv_ja_soodustus_kokku',
	                    style: styles.total,
	                    ref: 'input-arv_ja_soodustus',
	                    value: Number(this.state.arv_ja_soodustus) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'Laekumised kokku:',
	                    name: 'laekumised_kokku',
	                    style: styles.total,
	                    ref: 'input-laekumised',
	                    value: Number(this.state.laekumised) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'Mahakantud kokku:',
	                    name: 'mahakantud_kokku',
	                    style: styles.total,
	                    ref: 'input-mahakantud',
	                    value: Number(this.state.mahakantud) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'Tagastused kokku:',
	                    name: 'tagastused_kokku',
	                    style: styles.total,
	                    ref: 'input-tagastused',
	                    value: Number(this.state.tagastused) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'J\xE4\xE4k kokku:',
	                    name: 'jaak_kokku',
	                    style: styles.total,
	                    ref: 'input-jaak',
	                    value: Number(this.state.jaak) || 0,
	                    disabled: true })
	            );
	        }
	    }, {
	        key: 'renderer',
	        value: function renderer(self) {

	            if (!self || !self.gridData || !self.gridData.length) {
	                // пока нет данных
	                this.setState({
	                    alg_saldo: 0,
	                    arvestatud: 0,
	                    soodustus: 0,
	                    arv_ja_soodustus: 0,
	                    laekumised: 0,
	                    mahakantud: 0,
	                    tagastused: 0,
	                    jaak: 0,
	                    read: 0,
	                    filtri_read: 0
	                });
	                return null;
	            }

	            var alg_saldo = self.gridData ? self.gridData[0].alg_saldo_total : 0;
	            var arvestatud = self.gridData ? self.gridData[0].arvestatud_total : 0;
	            var soodustus = self.gridData ? self.gridData[0].soodustus_total : 0;
	            var arv_ja_soodustus = self.gridData ? self.gridData[0].arv_ja_soodustus_total : 0;
	            var laekumised = self.gridData ? self.gridData[0].laekumised_total : 0;
	            var mahakantud = self.gridData ? self.gridData[0].mahakantud_total : 0;
	            var tagastused = self.gridData ? self.gridData[0].tagastused_total : 0;
	            var jaak = self.gridData ? self.gridData[0].jaak_total : 0;

	            var read = self.gridData && self.gridData.length && self.gridData[0].rows_total ? self.gridData[0].rows_total : 0;
	            var filtri_read = self.gridData && self.gridData.length && self.gridData[0].filter_total ? self.gridData[0].filter_total : 0;

	            this.setState({
	                alg_saldo: alg_saldo,
	                arvestatud: arvestatud,
	                soodustus: soodustus,
	                arv_ja_soodustus: arv_ja_soodustus,
	                laekumised: laekumised,
	                mahakantud: mahakantud,
	                tagastused: tagastused,
	                jaak: jaak,
	                read: read,
	                filtri_read: filtri_read
	            });

	            return React.createElement(
	                ToolbarContainer,
	                null,
	                React.createElement(BtnGetXml, {
	                    value: 'Saama CSV fail',
	                    onClick: this.onClickHandler,
	                    showDate: false,
	                    ref: 'btn-getCsv'
	                })
	            );
	        }

	        //handler для события клик на кнопках панели

	    }, {
	        key: 'onClickHandler',
	        value: function onClickHandler() {
	            var Doc = this.refs['register'];

	            if (Doc.gridData && Doc.gridData.length) {
	                //делаем редайрект на конфигурацию
	                var sqlWhere = Doc.state.sqlWhere;
	                var url = '/reports/kaive_aruanne/' + DocContext.userData.uuid;
	                var params = encodeURIComponent('' + sqlWhere);
	                var filter = encodeURIComponent('' + JSON.stringify(Doc.filterData));
	                var fullUrl = sqlWhere ? url + '/' + filter + '/' + params : url + '/' + filter;
	                window.open(fullUrl);
	            } else {
	                Doc.setState({
	                    warning: 'Mitte ühtegi kirjed leidnud', // строка извещений
	                    warningType: 'notValid'

	                });
	            }
	        }
	    }]);

	    return Documents;
	}(React.PureComponent);

	module.exports = Documents;

/***/ }),
/* 351 */
/***/ (function(module, exports) {

	'use strict';module.exports={grid:{mainTable:{width:'100%',td:{border:'1px solid lightGrey',display:'table-cell',paddingLeft:'5px'}},headerTable:{width:'100%'},gridContainer:{width:'100%'}},doc:{height:'100%'},total:{width:'100px',margin:'0px 0px 0px 5px'}};

/***/ }),
/* 352 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(10);
	var DocumentRegister = __webpack_require__(235);
	var BtnGetXml = __webpack_require__(244);
	var ToolbarContainer = __webpack_require__(78);
	var InputNumber = __webpack_require__(221);
	var InputText = __webpack_require__(219);
	var Loading = __webpack_require__(253);

	var styles = __webpack_require__(353);
	var DOC_TYPE_ID = 'KAIVE_ARUANNE_KOKKU';
	var TOOLBAR_PROPS = {
	    add: false,
	    edit: false,
	    delete: false,
	    start: false,
	    print: true,
	    email: true
	};
	var DocContext = __webpack_require__(1);

	/**
	 * Класс реализует документ справочника признаков.
	 */

	var Documents = function (_React$PureComponent) {
	    _inherits(Documents, _React$PureComponent);

	    function Documents(props) {
	        _classCallCheck(this, Documents);

	        var _this = _possibleConstructorReturn(this, (Documents.__proto__ || Object.getPrototypeOf(Documents)).call(this, props));

	        _this.onClickHandler = _this.onClickHandler.bind(_this);
	        _this.renderer = _this.renderer.bind(_this);
	        _this.state = {
	            alg_saldo: 0,
	            arvestatud: 0,
	            soodustus: 0,
	            laekumised: 0,
	            mahakantud: 0,
	            tagastused: 0,
	            jaak: 0,
	            read: 0,
	            filtri_read: 0
	        };

	        return _this;
	    }

	    _createClass(Documents, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(
	                'div',
	                null,
	                React.createElement(DocumentRegister, { initData: this.props.initData,
	                    history: this.props.history ? this.props.history : null,
	                    module: this.props.module,
	                    ref: 'register',
	                    toolbarProps: TOOLBAR_PROPS,
	                    docTypeId: DOC_TYPE_ID,
	                    style: styles,
	                    render: this.renderer }),
	                React.createElement(InputText, { title: 'Filtri all / read kokku:',
	                    name: 'read_kokku',
	                    style: styles.total,
	                    ref: 'input-read',
	                    value: String(this.state.filtri_read + '/' + this.state.read) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'Alg.saldo kokku:',
	                    name: 'alg_saldo_kokku',
	                    style: styles.total,
	                    ref: 'input-read',
	                    value: Number(this.state.alg_saldo) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'Arvestatud (sh \xFCmberarvestus) kokku:',
	                    name: 'arvestatud_kokku',
	                    style: styles.total,
	                    ref: 'input-arvestatud',
	                    value: Number(this.state.arvestatud) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'Soodustus kokku:',
	                    name: 'soodustus_kokku',
	                    style: styles.total,
	                    ref: 'input-soodustus',
	                    value: Number(this.state.soodustus) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'Arvestatud ja Soodustus kokku:',
	                    name: 'arv_ja_soodustus_kokku',
	                    style: styles.total,
	                    ref: 'input-arv_ja_soodustus',
	                    value: Number(this.state.arv_ja_soodustus) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'Laekumised kokku:',
	                    name: 'laekumised_kokku',
	                    style: styles.total,
	                    ref: 'input-laekumised',
	                    value: Number(this.state.laekumised) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'Mahakantud kokku:',
	                    name: 'mahakantud_kokku',
	                    style: styles.total,
	                    ref: 'input-mahandmine',
	                    value: Number(this.state.mahakantud) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'Tagastused kokku:',
	                    name: 'tagastused_kokku',
	                    style: styles.total,
	                    ref: 'input-tagastused',
	                    value: Number(this.state.tagastused) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'J\xE4\xE4k kokku:',
	                    name: 'jaak_kokku',
	                    style: styles.total,
	                    ref: 'input-jaak',
	                    value: Number(this.state.jaak) || 0,
	                    disabled: true })
	            );
	        }
	    }, {
	        key: 'renderer',
	        value: function renderer(self) {

	            if (!self || !self.gridData || !self.gridData.length) {
	                // пока нет данных
	                this.setState({
	                    alg_saldo: 0,
	                    arvestatud: 0,
	                    soodustus: 0,
	                    arv_ja_soodustus: 0,
	                    laekumised: 0,
	                    mahakantud: 0,
	                    tagastused: 0,
	                    jaak: 0,
	                    read: 0,
	                    filtri_read: 0
	                });
	                return null;
	            }

	            var alg_saldo = self.gridData ? self.gridData[0].alg_saldo_total : 0;
	            var arvestatud = self.gridData ? self.gridData[0].arvestatud_total : 0;
	            var soodustus = self.gridData ? self.gridData[0].soodustus_total : 0;
	            var arv_ja_soodustus = self.gridData ? self.gridData[0].arv_ja_soodustus_total : 0;
	            var laekumised = self.gridData ? self.gridData[0].laekumised_total : 0;
	            var mahakantud = self.gridData ? self.gridData[0].mahakantud_total : 0;
	            var tagastused = self.gridData ? self.gridData[0].tagastused_total : 0;
	            var jaak = self.gridData ? self.gridData[0].jaak_total : 0;

	            var read = self.gridData && self.gridData.length && self.gridData[0].rows_total ? self.gridData[0].rows_total : 0;
	            var filtri_read = self.gridData && self.gridData.length && self.gridData[0].filter_total ? self.gridData[0].filter_total : 0;

	            this.setState({
	                alg_saldo: alg_saldo,
	                arvestatud: arvestatud,
	                soodustus: soodustus,
	                arv_ja_soodustus: arv_ja_soodustus,
	                laekumised: laekumised,
	                mahakantud: mahakantud,
	                tagastused: tagastused,
	                jaak: jaak,
	                read: read,
	                filtri_read: filtri_read
	            });

	            return React.createElement(
	                ToolbarContainer,
	                null,
	                React.createElement(BtnGetXml, {
	                    value: 'Saama CSV fail',
	                    onClick: this.onClickHandler,
	                    showDate: false,
	                    ref: 'btn-getCsv'
	                })
	            );
	        }

	        //handler для события клик на кнопках панели

	    }, {
	        key: 'onClickHandler',
	        value: function onClickHandler() {
	            var Doc = this.refs['register'];

	            if (Doc.gridData && Doc.gridData.length) {
	                //делаем редайрект на конфигурацию
	                var sqlWhere = Doc.state.sqlWhere;
	                var url = '/reports/saldo_ja_kaive/' + DocContext.userData.uuid;
	                var params = encodeURIComponent('' + sqlWhere);
	                var filter = encodeURIComponent('' + JSON.stringify(Doc.filterData));
	                var fullUrl = sqlWhere ? url + '/' + filter + '/' + params : url + '/' + filter;
	                window.open(fullUrl);
	            } else {
	                Doc.setState({
	                    warning: 'Mitte ühtegi kirjed leidnud', // строка извещений
	                    warningType: 'notValid'

	                });
	            }
	        }
	    }]);

	    return Documents;
	}(React.PureComponent);

	module.exports = Documents;

/***/ }),
/* 353 */
/***/ (function(module, exports) {

	'use strict';module.exports={grid:{mainTable:{width:'100%',td:{border:'1px solid lightGrey',display:'table-cell',paddingLeft:'5px'}},headerTable:{width:'100%'},gridContainer:{width:'100%'}},doc:{height:'100%'},total:{width:'100px',margin:'0px 0px 0px 5px'}};

/***/ }),
/* 354 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(10);
	var DocumentRegister = __webpack_require__(235);
	var styles = __webpack_require__(355);
	var DOC_TYPE_ID = 'SENT_DOCS';
	var TOOLBAR_PROPS = {
	    add: false,
	    edit: false,
	    delete: false,
	    start: false,
	    print: true,
	    email: true
	};
	/**
	 * Класс реализует документ справочника признаков.
	 */

	var Documents = function (_React$PureComponent) {
	    _inherits(Documents, _React$PureComponent);

	    function Documents(props) {
	        _classCallCheck(this, Documents);

	        var _this = _possibleConstructorReturn(this, (Documents.__proto__ || Object.getPrototypeOf(Documents)).call(this, props));

	        _this.renderer = _this.renderer.bind(_this);
	        return _this;
	    }

	    _createClass(Documents, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(DocumentRegister, { initData: this.props.initData,
	                history: this.props.history ? this.props.history : null,
	                module: this.props.module,
	                ref: 'register',
	                toolbarProps: TOOLBAR_PROPS,
	                docTypeId: DOC_TYPE_ID,
	                style: styles,
	                render: this.renderer });
	        }
	    }, {
	        key: 'renderer',
	        value: function renderer() {
	            return null;
	        }
	    }]);

	    return Documents;
	}(React.PureComponent);

	module.exports = Documents;

/***/ }),
/* 355 */
/***/ (function(module, exports) {

	'use strict';module.exports={grid:{mainTable:{width:'100%',td:{border:'1px solid lightGrey',display:'table-cell',paddingLeft:'5px'}},headerTable:{width:'100%'},gridContainer:{width:'100%'}}};

/***/ }),
/* 356 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(10);
	var DocumentRegister = __webpack_require__(235);
	var BtnGetXml = __webpack_require__(244);
	var ToolbarContainer = __webpack_require__(78);
	var InputNumber = __webpack_require__(221);

	var DocContext = __webpack_require__(1);

	var styles = __webpack_require__(357);

	var DOC_TYPE_ID = 'CHILD_AGE';
	var TOOLBAR_PROPS = {
	    add: false,
	    edit: false,
	    delete: false,
	    start: false,
	    print: true,
	    email: true
	};

	/**
	 * Класс реализует документ справочника признаков.
	 */

	var Documents = function (_React$PureComponent) {
	    _inherits(Documents, _React$PureComponent);

	    function Documents(props) {
	        _classCallCheck(this, Documents);

	        var _this = _possibleConstructorReturn(this, (Documents.__proto__ || Object.getPrototypeOf(Documents)).call(this, props));

	        _this.onClickHandler = _this.onClickHandler.bind(_this);
	        _this.renderer = _this.renderer.bind(_this);
	        _this.state = {
	            read: 0
	        };
	        return _this;
	    }

	    _createClass(Documents, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(
	                'div',
	                null,
	                React.createElement(DocumentRegister, { initData: this.props.initData,
	                    history: this.props.history ? this.props.history : null,
	                    module: this.props.module,
	                    ref: 'register',
	                    toolbarProps: TOOLBAR_PROPS,
	                    docTypeId: DOC_TYPE_ID,
	                    style: styles,
	                    render: this.renderer }),
	                React.createElement(InputNumber, { title: 'Read kokku:',
	                    name: 'read_kokku',
	                    style: styles.total,
	                    ref: 'input-read',
	                    value: Number(this.state.read) || 0,
	                    disabled: true })
	            );
	        }
	    }, {
	        key: 'renderer',
	        value: function renderer(self) {
	            if (self.gridData && self.gridData.length) {
	                this.setState({ read: self.gridData.length });
	            }

	            return React.createElement(
	                ToolbarContainer,
	                null,
	                React.createElement(BtnGetXml, {
	                    value: 'Saama CSV fail',
	                    onClick: this.onClickHandler,
	                    showDate: false,
	                    ref: 'btn-geCsv'
	                })
	            );
	        }

	        //handler для события клик на кнопках панели

	    }, {
	        key: 'onClickHandler',
	        value: function onClickHandler() {
	            var Doc = this.refs['register'];

	            if (Doc.gridData && Doc.gridData.length) {
	                //делаем редайрект на конфигурацию
	                var sqlWhere = Doc.state.sqlWhere;
	                var url = '/reports/child_age/' + DocContext.userData.uuid;
	                var params = encodeURIComponent('' + sqlWhere);
	                var filter = encodeURIComponent('' + JSON.stringify(Doc.filterData));
	                var fullUrl = sqlWhere ? url + '/' + filter + '/' + params : url + '/' + filter;
	                window.open(fullUrl);
	            } else {
	                Doc.setState({
	                    warning: 'Mitte ühtegi kirjed leidnud', // строка извещений
	                    warningType: 'notValid'

	                });
	            }
	        }
	    }]);

	    return Documents;
	}(React.PureComponent);

	module.exports = Documents;

/***/ }),
/* 357 */
/***/ (function(module, exports) {

	'use strict';module.exports={grid:{mainTable:{width:'100%',td:{border:'1px solid lightGrey',display:'table-cell',paddingLeft:'5px'}},headerTable:{width:'100%'},gridContainer:{width:'100%'}},total:{width:'auto'},doc:{height:'100%'}};

/***/ }),
/* 358 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(10);
	var DocumentRegister = __webpack_require__(235);
	var InputNumber = __webpack_require__(221);
	var getSum = __webpack_require__(257);

	var styles = __webpack_require__(359);
	var DOC_TYPE_ID = 'SOODUSTUSED';
	var TOOLBAR_PROPS = {
	    add: false,
	    edit: false,
	    delete: false,
	    start: false,
	    print: true,
	    email: true
	};

	/**
	 * Класс реализует отчет льготы.
	 */

	var Documents = function (_React$PureComponent) {
	    _inherits(Documents, _React$PureComponent);

	    function Documents(props) {
	        _classCallCheck(this, Documents);

	        var _this = _possibleConstructorReturn(this, (Documents.__proto__ || Object.getPrototypeOf(Documents)).call(this, props));

	        _this.renderer = _this.renderer.bind(_this);
	        _this.state = {
	            soodustus: 0,
	            read: 0
	        };

	        return _this;
	    }

	    _createClass(Documents, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(
	                'div',
	                null,
	                React.createElement(DocumentRegister, { initData: this.props.initData,
	                    history: this.props.history ? this.props.history : null,
	                    module: this.props.module,
	                    ref: 'register',
	                    toolbarProps: TOOLBAR_PROPS,
	                    docTypeId: DOC_TYPE_ID,
	                    style: styles,
	                    render: this.renderer }),
	                React.createElement(InputNumber, { title: 'Read kokku:',
	                    name: 'read_kokku',
	                    style: styles.total,
	                    ref: 'input-read',
	                    value: Number(this.state.read) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'Soodustus kokku:',
	                    name: 'soodustus_kokku',
	                    style: styles.total,
	                    ref: 'input-soodustus',
	                    value: Number(this.state.soodustus).toFixed(2) || 0,
	                    disabled: true })
	            );
	        }
	    }, {
	        key: 'renderer',
	        value: function renderer(self) {
	            var soodustus = self.gridData ? getSum(self.gridData, 'soodustus') : 0;
	            if (soodustus) {
	                this.setState({ soodustus: soodustus, read: self.gridData.length });
	            }

	            return null;
	        }
	    }]);

	    return Documents;
	}(React.PureComponent);

	module.exports = Documents;

/***/ }),
/* 359 */
/***/ (function(module, exports) {

	'use strict';module.exports={grid:{mainTable:{width:'100%',td:{border:'1px solid lightGrey',display:'table-cell',paddingLeft:'5px'}},headerTable:{width:'100%'},gridContainer:{width:'100%'}},doc:{height:'100%'},total:{width:'auto'}};

/***/ }),
/* 360 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(10);
	var DocumentRegister = __webpack_require__(235);

	var styles = __webpack_require__(361);
	var DOC_TYPE_ID = 'STATISTIKA';
	var TOOLBAR_PROPS = {
	    add: false,
	    edit: false,
	    delete: false,
	    start: false,
	    print: true,
	    email: true
	};

	/**
	 * Класс реализует отчет льготы.
	 */

	var Documents = function (_React$PureComponent) {
	    _inherits(Documents, _React$PureComponent);

	    function Documents(props) {
	        _classCallCheck(this, Documents);

	        var _this = _possibleConstructorReturn(this, (Documents.__proto__ || Object.getPrototypeOf(Documents)).call(this, props));

	        _this.renderer = _this.renderer.bind(_this);
	        return _this;
	    }

	    _createClass(Documents, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(DocumentRegister, { initData: this.props.initData,
	                history: this.props.history ? this.props.history : null,
	                module: this.props.module,
	                ref: 'register',
	                toolbarProps: TOOLBAR_PROPS,
	                docTypeId: DOC_TYPE_ID,
	                style: styles,
	                render: this.renderer });
	        }
	    }, {
	        key: 'renderer',
	        value: function renderer() {
	            return null;
	        }
	    }]);

	    return Documents;
	}(React.PureComponent);

	module.exports = Documents;

/***/ }),
/* 361 */
/***/ (function(module, exports) {

	'use strict';module.exports={grid:{mainTable:{width:'100%',td:{border:'1px solid lightGrey',display:'table-cell',paddingLeft:'5px'}},headerTable:{width:'100%'},gridContainer:{width:'100%'}}};

/***/ }),
/* 362 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(10);
	var DocumentRegister = __webpack_require__(235);
	var BtnGetXml = __webpack_require__(244);
	var ToolbarContainer = __webpack_require__(78);
	var InputNumber = __webpack_require__(221);
	var getSum = __webpack_require__(257);

	var DocContext = __webpack_require__(1);

	var styles = __webpack_require__(363);

	var DOC_TYPE_ID = 'EBATOENAOLISED';
	var TOOLBAR_PROPS = {
	    add: false,
	    edit: false,
	    delete: false,
	    start: false,
	    print: true,
	    email: true
	};

	/**
	 * Класс реализует документ справочника признаков.
	 */

	var Documents = function (_React$PureComponent) {
	    _inherits(Documents, _React$PureComponent);

	    function Documents(props) {
	        _classCallCheck(this, Documents);

	        var _this = _possibleConstructorReturn(this, (Documents.__proto__ || Object.getPrototypeOf(Documents)).call(this, props));

	        _this.onClickHandler = _this.onClickHandler.bind(_this);
	        _this.renderer = _this.renderer.bind(_this);
	        _this.state = {
	            noude_50: 0,
	            noude_100: 0,
	            jaak: 0,
	            read: 0
	        };

	        return _this;
	    }

	    _createClass(Documents, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(
	                'div',
	                null,
	                React.createElement(DocumentRegister, { initData: this.props.initData,
	                    history: this.props.history ? this.props.history : null,
	                    module: this.props.module,
	                    ref: 'register',
	                    docTypeId: DOC_TYPE_ID,
	                    toolbarProps: TOOLBAR_PROPS,
	                    style: styles,
	                    render: this.renderer }),
	                React.createElement(InputNumber, { title: 'Read kokku:',
	                    name: 'read_kokku',
	                    style: styles.total,
	                    ref: 'input-read',
	                    value: Number(this.state.read) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'N\xF5ude 50% kokku:',
	                    name: 'noude_50_kokku',
	                    style: styles.total,
	                    ref: 'input-noude_50',
	                    value: Number(this.state.noude_50).toFixed(2) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'N\xF5ude 100% kokku:',
	                    name: 'noude_100_kokku',
	                    style: styles.total,
	                    ref: 'input-noude_100',
	                    value: Number(this.state.noude_100).toFixed(2) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'J\xE4\xE4k kokku:',
	                    name: 'jaak_kokku',
	                    style: styles.total,
	                    ref: 'input-jaak',
	                    value: Number(this.state.jaak).toFixed(2) || 0,
	                    disabled: true })
	            );
	        }
	    }, {
	        key: 'renderer',
	        value: function renderer(self) {
	            var noude_50 = self.gridData ? getSum(self.gridData, 'noude_50') : 0;
	            var noude_100 = self.gridData ? getSum(self.gridData, 'noude_100') : 0;
	            var jaak = self.gridData ? getSum(self.gridData, 'jaak') : 0;
	            if (self.gridData) {
	                this.setState({
	                    noude_50: noude_50,
	                    noude_100: noude_100,
	                    jaak: jaak,
	                    read: self.gridData.length });
	            }

	            return React.createElement(
	                ToolbarContainer,
	                null,
	                React.createElement(BtnGetXml, {
	                    value: 'Saama CSV fail',
	                    onClick: this.onClickHandler,
	                    showDate: false,
	                    ref: 'btn-geCsv'
	                })
	            );
	        }

	        //handler для события клик на кнопках панели

	    }, {
	        key: 'onClickHandler',
	        value: function onClickHandler() {
	            var Doc = this.refs['register'];

	            if (Doc.gridData && Doc.gridData.length) {
	                //делаем редайрект на конфигурацию
	                var sqlWhere = Doc.state.sqlWhere;
	                var url = '/reports/ebatoenaolised/' + DocContext.userData.uuid;
	                var params = encodeURIComponent('' + sqlWhere);
	                var filter = encodeURIComponent('' + JSON.stringify(Doc.filterData));
	                var fullUrl = sqlWhere ? url + '/' + filter + '/' + params : url + '/' + filter;
	                window.open(fullUrl);
	            } else {
	                Doc.setState({
	                    warning: 'Mitte ühtegi kirjed leidnud', // строка извещений
	                    warningType: 'notValid'

	                });
	            }
	        }
	    }]);

	    return Documents;
	}(React.PureComponent);

	module.exports = Documents;

/***/ }),
/* 363 */
/***/ (function(module, exports) {

	'use strict';module.exports={grid:{mainTable:{width:'100%',td:{border:'1px solid lightGrey',display:'table-cell',paddingLeft:'5px'}},headerTable:{width:'100%'},gridContainer:{width:'100%'}},total:{width:'auto'},doc:{height:'100%'}};

/***/ }),
/* 364 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(10);
	var DocumentRegister = __webpack_require__(235);
	var BtnGetXml = __webpack_require__(244);
	var ToolbarContainer = __webpack_require__(78);
	var DocContext = __webpack_require__(1);
	var InputNumber = __webpack_require__(221);
	var InputText = __webpack_require__(219);

	var styles = __webpack_require__(365);
	var DOC_TYPE_ID = 'KONDARVE';
	var TOOLBAR_PROPS = {
	    add: false,
	    edit: false,
	    delete: false,
	    start: false,
	    print: true,
	    email: true
	};
	/**
	 * Класс реализует документ справочника признаков.
	 */

	var Documents = function (_React$PureComponent) {
	    _inherits(Documents, _React$PureComponent);

	    function Documents(props) {
	        _classCallCheck(this, Documents);

	        var _this = _possibleConstructorReturn(this, (Documents.__proto__ || Object.getPrototypeOf(Documents)).call(this, props));

	        _this.onClickHandler = _this.onClickHandler.bind(_this);
	        _this.renderer = _this.renderer.bind(_this);
	        _this.state = {
	            summa: 0,
	            read: 0,
	            filtri_read: 0
	        };
	        return _this;
	    }

	    _createClass(Documents, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(
	                'div',
	                null,
	                React.createElement(DocumentRegister, { initData: this.props.initData,
	                    history: this.props.history ? this.props.history : null,
	                    module: this.props.module,
	                    ref: 'register',
	                    toolbarProps: TOOLBAR_PROPS,
	                    docTypeId: DOC_TYPE_ID,
	                    style: styles,
	                    render: this.renderer }),
	                ';',
	                React.createElement(InputText, { title: 'Filtri all / read kokku:',
	                    name: 'read_kokku',
	                    style: styles.total,
	                    ref: 'input-read',
	                    value: String(this.state.filtri_read + '/' + this.state.read) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'Summa kokku:',
	                    name: 'summa_kokku',
	                    style: styles.total,
	                    ref: 'input-read',
	                    value: Number(this.state.summa) || 0,
	                    disabled: true })
	            );
	        }
	    }, {
	        key: 'renderer',
	        value: function renderer(self) {
	            if (!self || !self.gridData || !self.gridData.length) {
	                // пока нет данных
	                this.setState({
	                    summa: 0,
	                    read: 0,
	                    filtri_read: 0
	                });
	                return null;
	            }

	            var summa = self.gridData ? self.gridData[0].summa_total : 0;

	            var read = self.gridData && self.gridData.length && self.gridData[0].rows_total ? self.gridData[0].rows_total : 0;
	            var filtri_read = self.gridData && self.gridData.length && self.gridData[0].filter_total ? self.gridData[0].filter_total : 0;

	            this.setState({
	                summa: summa,
	                read: read,
	                filtri_read: filtri_read
	            });

	            return React.createElement(
	                ToolbarContainer,
	                null,
	                React.createElement(BtnGetXml, {
	                    value: 'Saama CSV fail',
	                    onClick: this.onClickHandler,
	                    showDate: false,
	                    ref: 'btn-geCsv'
	                })
	            );
	        }

	        //handler для события клик на кнопках панели

	    }, {
	        key: 'onClickHandler',
	        value: function onClickHandler() {
	            var Doc = this.refs['register'];

	            if (Doc.gridData && Doc.gridData.length) {
	                //делаем редайрект на конфигурацию
	                var sqlWhere = Doc.state.sqlWhere;
	                var url = '/reports/kondarve/' + DocContext.userData.uuid;
	                var params = encodeURIComponent('' + sqlWhere);
	                var filter = encodeURIComponent('' + JSON.stringify(Doc.filterData));
	                var fullUrl = sqlWhere ? url + '/' + filter + '/' + params : url + '/' + filter;
	                window.open(fullUrl);
	            } else {
	                Doc.setState({
	                    warning: 'Mitte ühtegi kirjed leidnud', // строка извещений
	                    warningType: 'notValid'

	                });
	            }
	        }
	    }]);

	    return Documents;
	}(React.PureComponent);

	module.exports = Documents;

/***/ }),
/* 365 */
/***/ (function(module, exports) {

	'use strict';module.exports={grid:{mainTable:{width:'100%',td:{border:'1px solid lightGrey',display:'table-cell',paddingLeft:'5px'}},headerTable:{width:'100%'},gridContainer:{width:'100%'}},total:{width:'auto'}};

/***/ }),
/* 366 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(10);
	var DocumentRegister = __webpack_require__(235);
	var InputNumber = __webpack_require__(221);
	var getSum = __webpack_require__(257);

	var styles = __webpack_require__(367);

	var DOC_TYPE_ID = 'AASTA_NAITAJAD';
	var TOOLBAR_PROPS = {
	             add: false,
	             edit: false,
	             delete: false,
	             start: false,
	             print: true,
	             email: true
	};

	/**
	 * Класс реализует документ справочника признаков.
	 */

	var Documents = function (_React$PureComponent) {
	             _inherits(Documents, _React$PureComponent);

	             function Documents(props) {
	                          _classCallCheck(this, Documents);

	                          var _this = _possibleConstructorReturn(this, (Documents.__proto__ || Object.getPrototypeOf(Documents)).call(this, props));

	                          _this.renderer = _this.renderer.bind(_this);

	                          _this.state = {
	                                       jaanuar: 0,
	                                       veebruar: 0,
	                                       marts: 0,
	                                       apriil: 0,
	                                       mai: 0,
	                                       juuni: 0,
	                                       juuli: 0,
	                                       august: 0,
	                                       september: 0,
	                                       oktoober: 0,
	                                       november: 0,
	                                       detsember: 0,
	                                       read: 0
	                          };

	                          return _this;
	             }

	             _createClass(Documents, [{
	                          key: 'render',
	                          value: function render() {
	                                       return React.createElement(
	                                                    'div',
	                                                    null,
	                                                    React.createElement(DocumentRegister, { initData: this.props.initData,
	                                                                 history: this.props.history ? this.props.history : null,
	                                                                 module: this.props.module,
	                                                                 ref: 'register',
	                                                                 toolbarProps: TOOLBAR_PROPS,
	                                                                 docTypeId: DOC_TYPE_ID,
	                                                                 style: styles,
	                                                                 render: this.renderer }),
	                                                    React.createElement(InputNumber, { title: 'Read kokku:',
	                                                                 name: 'read_kokku',
	                                                                 style: styles.total,
	                                                                 ref: 'input-read',
	                                                                 value: Number(this.state.read) || 0,
	                                                                 disabled: true }),
	                                                    React.createElement(InputNumber, { title: 'Jaanuar kokku:',
	                                                                 name: 'jaanuar_kokku',
	                                                                 style: styles.total,
	                                                                 ref: 'input-jaanuar',
	                                                                 value: Number(this.state.jaanuar).toFixed(2) || 0,
	                                                                 disabled: true }),
	                                                    React.createElement(InputNumber, { title: 'Veebruar kokku:',
	                                                                 name: 'veebruar_kokku',
	                                                                 style: styles.total,
	                                                                 ref: 'input-veebruar',
	                                                                 value: Number(this.state.veebruar).toFixed(2) || 0,
	                                                                 disabled: true }),
	                                                    React.createElement(InputNumber, { title: 'M\xE4rts kokku:',
	                                                                 name: 'marts_kokku',
	                                                                 style: styles.total,
	                                                                 ref: 'input-marts',
	                                                                 value: Number(this.state.marts).toFixed(2) || 0,
	                                                                 disabled: true }),
	                                                    React.createElement(InputNumber, { title: 'Apriil kokku:',
	                                                                 name: 'apriil_kokku',
	                                                                 style: styles.total,
	                                                                 ref: 'input-apriil',
	                                                                 value: Number(this.state.apriil).toFixed(2) || 0,
	                                                                 disabled: true }),
	                                                    React.createElement(InputNumber, { title: 'Mai kokku:',
	                                                                 name: 'mai_kokku',
	                                                                 style: styles.total,
	                                                                 ref: 'input-mai',
	                                                                 value: Number(this.state.mai).toFixed(2) || 0,
	                                                                 disabled: true }),
	                                                    React.createElement(InputNumber, { title: 'Juuni kokku:',
	                                                                 name: 'juuni_kokku',
	                                                                 style: styles.total,
	                                                                 ref: 'input-juuni',
	                                                                 value: Number(this.state.juuni).toFixed(2) || 0,
	                                                                 disabled: true }),
	                                                    React.createElement(InputNumber, { title: 'Juuli kokku:',
	                                                                 name: 'juuli_kokku',
	                                                                 style: styles.total,
	                                                                 ref: 'input-juuli',
	                                                                 value: Number(this.state.juuli).toFixed(2) || 0,
	                                                                 disabled: true }),
	                                                    React.createElement(InputNumber, { title: 'August kokku:',
	                                                                 name: 'august_kokku',
	                                                                 style: styles.total,
	                                                                 ref: 'input-august',
	                                                                 value: Number(this.state.august).toFixed(2) || 0,
	                                                                 disabled: true }),
	                                                    React.createElement(InputNumber, { title: 'September kokku:',
	                                                                 name: 'september_kokku',
	                                                                 style: styles.total,
	                                                                 ref: 'input-september',
	                                                                 value: Number(this.state.september).toFixed(2) || 0,
	                                                                 disabled: true }),
	                                                    React.createElement(InputNumber, { title: 'Oktoober kokku:',
	                                                                 name: 'oktoober_kokku',
	                                                                 style: styles.total,
	                                                                 ref: 'input-oktoober',
	                                                                 value: Number(this.state.oktoober).toFixed(2) || 0,
	                                                                 disabled: true }),
	                                                    React.createElement(InputNumber, { title: 'November kokku:',
	                                                                 name: 'november_kokku',
	                                                                 style: styles.total,
	                                                                 ref: 'input-november',
	                                                                 value: Number(this.state.november).toFixed(2) || 0,
	                                                                 disabled: true }),
	                                                    React.createElement(InputNumber, { title: 'Detsember kokku:',
	                                                                 name: 'detsember_kokku',
	                                                                 style: styles.total,
	                                                                 ref: 'input-detsember',
	                                                                 value: Number(this.state.detsember).toFixed(2) || 0,
	                                                                 disabled: true })
	                                       );
	                          }
	             }, {
	                          key: 'renderer',
	                          value: function renderer(self) {
	                                       var jaanuar = self.gridData ? getSum(self.gridData, 'jaanuar') : 0;
	                                       var veebruar = self.gridData ? getSum(self.gridData, 'veebruar') : 0;
	                                       var marts = self.gridData ? getSum(self.gridData, 'marts') : 0;
	                                       var apriil = self.gridData ? getSum(self.gridData, 'apriil') : 0;
	                                       var mai = self.gridData ? getSum(self.gridData, 'mai') : 0;
	                                       var juuni = self.gridData ? getSum(self.gridData, 'juuni') : 0;
	                                       var juuli = self.gridData ? getSum(self.gridData, 'juuli') : 0;
	                                       var august = self.gridData ? getSum(self.gridData, 'august') : 0;
	                                       var september = self.gridData ? getSum(self.gridData, 'september') : 0;
	                                       var oktoober = self.gridData ? getSum(self.gridData, 'oktoober') : 0;
	                                       var november = self.gridData ? getSum(self.gridData, 'november') : 0;
	                                       var detsember = self.gridData ? getSum(self.gridData, 'detsember') : 0;

	                                       if (self.gridData) {
	                                                    this.setState({
	                                                                 jaanuar: jaanuar,
	                                                                 veebruar: veebruar,
	                                                                 marts: marts,
	                                                                 apriil: apriil,
	                                                                 mai: mai,
	                                                                 juuni: juuni,
	                                                                 juuli: juuli,
	                                                                 august: august,
	                                                                 september: september,
	                                                                 oktoober: oktoober,
	                                                                 november: november,
	                                                                 detsember: detsember,
	                                                                 read: self.gridData.length });
	                                       }

	                                       return null;
	                          }
	             }]);

	             return Documents;
	}(React.PureComponent);

	module.exports = Documents;

/***/ }),
/* 367 */
/***/ (function(module, exports) {

	'use strict';module.exports={grid:{mainTable:{width:'100%',td:{border:'1px solid lightGrey',display:'table-cell',paddingLeft:'5px'}},headerTable:{width:'100%'},gridContainer:{width:'100%'}},total:{width:'auto'},doc:{height:'100%'}};

/***/ }),
/* 368 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(10);
	var DocumentRegister = __webpack_require__(235);
	var BtnGetXml = __webpack_require__(244);
	var ToolbarContainer = __webpack_require__(78);

	var styles = __webpack_require__(369);
	var DOC_TYPE_ID = 'KUU_TAABEL';
	var DocContext = __webpack_require__(1);
	var TOOLBAR_PROPS = {
	    add: false,
	    edit: false,
	    delete: false,
	    start: false,
	    print: true,
	    email: true
	};

	/**
	 * Класс реализует документ справочника признаков.
	 */

	var Documents = function (_React$PureComponent) {
	    _inherits(Documents, _React$PureComponent);

	    function Documents(props) {
	        _classCallCheck(this, Documents);

	        var _this = _possibleConstructorReturn(this, (Documents.__proto__ || Object.getPrototypeOf(Documents)).call(this, props));

	        _this.renderer = _this.renderer.bind(_this);
	        _this.checkWeekEnds = _this.checkWeekEnds.bind(_this);
	        _this.custom_styling = _this.custom_styling.bind(_this);
	        _this.onClickHandler = _this.onClickHandler.bind(_this);
	        return _this;
	    }

	    _createClass(Documents, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(DocumentRegister, { initData: this.props.initData,
	                history: this.props.history ? this.props.history : null,
	                module: this.props.module,
	                ref: 'register',
	                toolbarProps: TOOLBAR_PROPS,
	                docTypeId: DOC_TYPE_ID,
	                style: styles,
	                render: this.renderer,
	                trigger_select: this.checkWeekEnds,
	                custom_styling: this.custom_styling
	            });
	        }
	    }, {
	        key: 'renderer',
	        value: function renderer(self) {
	            return React.createElement(
	                ToolbarContainer,
	                null,
	                React.createElement(BtnGetXml, {
	                    value: 'Saama CSV fail',
	                    onClick: this.onClickHandler,
	                    ref: 'btn-getXml',
	                    showDate: false
	                })
	            );
	        }

	        /**
	         * преобразует заголовок таблицы в части стиля
	         * @param self
	         */

	    }, {
	        key: 'checkWeekEnds',
	        value: function checkWeekEnds(self) {
	            if (!self.gridConfig) {
	                return null;
	            }

	            var weekEnds = [];
	            if (self.gridData.length) {
	                weekEnds = self.gridData[0].week_ends;
	            }

	            if (weekEnds.length) {
	                self.gridConfig.map(function (column) {
	                    // проверяем есть ли выходной в этот день и задаем жирный цвет если есть
	                    column.showBold = weekEnds.indexOf(Number(column.name)) > -1 ? true : false;
	                    return column;
	                });
	            }

	            // filter
	            self.gridData = self.gridData.filter(function (row) {
	                return row.is_row;
	            });
	        }

	        /**
	         * кастомное оьработка стиля для яцейки
	         */

	    }, {
	        key: 'custom_styling',
	        value: function custom_styling(column, row) {
	            var style = {};
	            if (!isNaN(column.name) && row.nom_id == 999999999 && row[column.id] !== null) {
	                // посещвемлсть
	                //В строке «Посещаемость» в полях отображаются суммарное количество посещений по группам и поля залиты соответственно: больше 0 – светло зеленым, 0 – светло красным цветом. Все поля с прочими услугами отображают суммарное значение из «Дневной формы учета ежедневных услуг», если их больше 0 или «Пусто» - если 0
	                style = row[column.id] ? styles.custom.positive : styles.custom.negative;
	            }
	            return style;
	        }

	        //handler для события клик на кнопках панели

	    }, {
	        key: 'onClickHandler',
	        value: function onClickHandler(event) {
	            var Doc = this.refs['register'];

	            if (Doc.gridData && Doc.gridData.length) {
	                //делаем редайрект на конфигурацию
	                var sqlWhere = Doc.state.sqlWhere;
	                var url = '/reports/kuu_taabel/' + DocContext.userData.uuid;
	                var params = encodeURIComponent('' + sqlWhere);
	                var filter = encodeURIComponent('' + JSON.stringify(Doc.filterData));
	                var fullUrl = sqlWhere ? url + '/' + filter + '/' + params : url + '/' + filter;
	                window.open(fullUrl);
	            } else {
	                Doc.setState({
	                    warning: 'Tulemus 0', // строка извещений
	                    warningType: 'notValid'

	                });
	            }
	        }
	    }]);

	    return Documents;
	}(React.PureComponent);

	module.exports = Documents;

/***/ }),
/* 369 */
/***/ (function(module, exports) {

	'use strict';module.exports={grid:{mainTable:{width:'100%',td:{border:'1px solid black',display:'table-cell',paddingLeft:'5px',nullColour:'lightGrey'}},headerTable:{width:'100%'},gridContainer:{width:'100%'}},// td custom styles
	custom:{positive:{backgroundColor:'lightgreen'},negative:{backgroundColor:'pink'}}};

/***/ }),
/* 370 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(10);
	var DocumentRegister = __webpack_require__(235);
	var BtnGetXml = __webpack_require__(244);
	var ToolbarContainer = __webpack_require__(78);

	var styles = __webpack_require__(371);
	var DOC_TYPE_ID = 'YKSUSE_TAABEL';
	var DocContext = __webpack_require__(1);
	var TOOLBAR_PROPS = {
	    add: false,
	    edit: false,
	    delete: false,
	    start: false,
	    print: true,
	    email: true
	};

	/**
	 * Класс реализует документ справочника признаков.
	 */

	var Documents = function (_React$PureComponent) {
	    _inherits(Documents, _React$PureComponent);

	    function Documents(props) {
	        _classCallCheck(this, Documents);

	        var _this = _possibleConstructorReturn(this, (Documents.__proto__ || Object.getPrototypeOf(Documents)).call(this, props));

	        _this.renderer = _this.renderer.bind(_this);
	        _this.checkWeekEnds = _this.checkWeekEnds.bind(_this);
	        _this.onClickHandler = _this.onClickHandler.bind(_this);

	        return _this;
	    }

	    _createClass(Documents, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(DocumentRegister, { history: this.props.history ? this.props.history : null,
	                module: this.props.module,
	                ref: 'register',
	                toolbarProps: TOOLBAR_PROPS,
	                docTypeId: DOC_TYPE_ID,
	                style: styles,
	                render: this.renderer,
	                trigger_select: this.checkWeekEnds,
	                custom_styling: this.custom_styling
	            });
	        }
	    }, {
	        key: 'renderer',
	        value: function renderer(self) {
	            return React.createElement(
	                ToolbarContainer,
	                null,
	                React.createElement(BtnGetXml, {
	                    value: 'Saama CSV fail',
	                    onClick: this.onClickHandler,
	                    ref: 'btn-getXml',
	                    showDate: false
	                })
	            );
	        }

	        /**
	         * преобразует заголовок таблицы в части стиля
	         * @param self
	         */

	    }, {
	        key: 'checkWeekEnds',
	        value: function checkWeekEnds(self) {
	            if (!self.gridConfig || !self.gridData) {
	                return null;
	            }

	            var weekEnds = [];

	            if (self.gridData && self.gridData.length) {
	                weekEnds = self.gridData[0].week_ends;
	                // если значение нулл, тогда ищем
	                if (weekEnds && weekEnds.length) {
	                    self.gridData.every(function (row) {
	                        if (row.week_ends && row.week_ends.length && row.week_ends[0]) {
	                            weekEnds = row.week_ends;
	                            return false;
	                        }
	                    });
	                } else {
	                    weekEnds = [];
	                }
	            }

	            if (weekEnds.length) {
	                self.gridConfig.map(function (column) {
	                    // проверяем есть ли выходной в этот день и задаем жирный цвет если есть
	                    column.showBold = weekEnds.indexOf(Number(column.name)) > -1 ? true : false;
	                    return column;
	                });
	            }

	            // filter
	            self.gridData = self.gridData.filter(function (row) {
	                return row.is_row;
	            });
	        }

	        /**
	         * кастомное оьработка стиля для яцейки
	         */

	    }, {
	        key: 'custom_styling',
	        value: function custom_styling(column, row) {
	            var style = {};
	            if (!isNaN(column.name) && row.nom_id == 999999999 && row[column.id] !== null) {
	                // посещвемлсть
	                //В строке «Посещаемость» в полях отображаются суммарное количество посещений по группам и поля залиты соответственно: больше 0 – светло зеленым, 0 – светло красным цветом. Все поля с прочими услугами отображают суммарное значение из «Дневной формы учета ежедневных услуг», если их больше 0 или «Пусто» - если 0
	                style = Number(row[column.id]) ? styles.custom.positive : styles.custom.negative;
	            }
	            return style;
	        }

	        //handler для события клик на кнопках панели

	    }, {
	        key: 'onClickHandler',
	        value: function onClickHandler(event) {
	            var Doc = this.refs['register'];

	            if (Doc.gridData && Doc.gridData.length) {
	                //делаем редайрект на конфигурацию
	                var sqlWhere = Doc.state.sqlWhere;
	                var url = '/reports/yksuse_taabel/' + DocContext.userData.uuid;
	                var params = encodeURIComponent('' + sqlWhere);
	                var notEmptyFilter = Doc.filterData.filter(function (row) {
	                    return row.value;
	                });
	                var filter = encodeURIComponent('' + JSON.stringify(notEmptyFilter));

	                var fullUrl = sqlWhere ? url + '/' + filter + '/' + params : url + '/' + filter;
	                window.open(fullUrl);
	            } else {
	                Doc.setState({
	                    warning: 'Tulemus 0', // строка извещений
	                    warningType: 'notValid'

	                });
	            }
	        }
	    }]);

	    return Documents;
	}(React.PureComponent);

	module.exports = Documents;

/***/ }),
/* 371 */
/***/ (function(module, exports) {

	'use strict';module.exports={grid:{mainTable:{width:'100%',td:{border:'1px solid black',display:'table-cell',paddingLeft:'5px',nullColour:'lightGrey'}},headerTable:{width:'100%'},th:{borderBottom:'1px solid black',backgroundColor:'grey',height:'30px',border:'1px solid lightgray',display:'table-cell',color:'black',boldColor:'red'},gridContainer:{width:'100%'},boolColour:{yes:null,no:null}},// td custom styles
	custom:{positive:{backgroundColor:'lightgreen'},negative:{backgroundColor:'pink'}}};

/***/ }),
/* 372 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(10);
	var DocumentRegister = __webpack_require__(235);
	var BtnGetXml = __webpack_require__(244);
	var ToolbarContainer = __webpack_require__(78);

	var styles = __webpack_require__(373);
	var DOC_TYPE_ID = 'KOHALOLEKU_ARUANNE';
	var DocContext = __webpack_require__(1);
	var TOOLBAR_PROPS = {
	    add: false,
	    edit: false,
	    delete: false,
	    start: false,
	    print: true,
	    email: true
	};

	/**
	 * Класс реализует документ справочника признаков.
	 */

	var Documents = function (_React$PureComponent) {
	    _inherits(Documents, _React$PureComponent);

	    function Documents(props) {
	        _classCallCheck(this, Documents);

	        var _this = _possibleConstructorReturn(this, (Documents.__proto__ || Object.getPrototypeOf(Documents)).call(this, props));

	        _this.renderer = _this.renderer.bind(_this);
	        _this.onClickHandler = _this.onClickHandler.bind(_this);

	        return _this;
	    }

	    _createClass(Documents, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(DocumentRegister, { initData: this.props.initData,
	                history: this.props.history ? this.props.history : null,
	                module: this.props.module,
	                ref: 'register',
	                toolbarProps: TOOLBAR_PROPS,
	                docTypeId: DOC_TYPE_ID,
	                style: styles,
	                render: this.renderer });
	        }
	    }, {
	        key: 'renderer',
	        value: function renderer(self) {
	            return React.createElement(
	                ToolbarContainer,
	                null,
	                React.createElement(BtnGetXml, {
	                    value: 'Saama CSV fail',
	                    onClick: this.onClickHandler,
	                    ref: 'btn-getXml',
	                    showDate: false
	                })
	            );
	        }

	        //handler для события клик на кнопках панели

	    }, {
	        key: 'onClickHandler',
	        value: function onClickHandler(event) {
	            var Doc = this.refs['register'];

	            if (Doc.gridData && Doc.gridData.length) {
	                //делаем редайрект на конфигурацию
	                var sqlWhere = Doc.state.sqlWhere;
	                var url = '/reports/kohaoleku_aruanne/' + DocContext.userData.uuid;
	                var params = encodeURIComponent('' + sqlWhere);
	                var filter = encodeURIComponent('' + JSON.stringify(Doc.filterData));
	                var fullUrl = sqlWhere ? url + '/' + filter + '/' + params : url + '/' + filter;
	                window.open(fullUrl);
	            } else {
	                Doc.setState({
	                    warning: 'Tulemus 0', // строка извещений
	                    warningType: 'notValid'

	                });
	            }
	        }
	    }]);

	    return Documents;
	}(React.PureComponent);

	module.exports = Documents;

/***/ }),
/* 373 */
/***/ (function(module, exports) {

	'use strict';module.exports={grid:{mainTable:{width:'100%',td:{border:'1px solid lightGrey',display:'table-cell',paddingLeft:'5px'}},headerTable:{width:'100%'},gridContainer:{width:'100%'}}};

/***/ }),
/* 374 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(10);
	var DocumentRegister = __webpack_require__(235);
	var InputNumber = __webpack_require__(221);

	var styles = __webpack_require__(375);

	var DOC_TYPE_ID = 'TOPELTMAKSUD';
	var TOOLBAR_PROPS = {
	    add: false,
	    edit: false,
	    delete: false,
	    start: false,
	    print: true,
	    email: true
	};

	/**
	 * Класс реализует документ справочника признаков.
	 */

	var Documents = function (_React$PureComponent) {
	    _inherits(Documents, _React$PureComponent);

	    function Documents(props) {
	        _classCallCheck(this, Documents);

	        var _this = _possibleConstructorReturn(this, (Documents.__proto__ || Object.getPrototypeOf(Documents)).call(this, props));

	        _this.renderer = _this.renderer.bind(_this);

	        _this.state = {
	            read: 0
	        };

	        return _this;
	    }

	    _createClass(Documents, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(
	                'div',
	                null,
	                React.createElement(DocumentRegister, { initData: this.props.initData,
	                    history: this.props.history ? this.props.history : null,
	                    module: this.props.module,
	                    ref: 'register',
	                    toolbarProps: TOOLBAR_PROPS,
	                    docTypeId: DOC_TYPE_ID,
	                    style: styles,
	                    render: this.renderer }),
	                React.createElement(InputNumber, { title: 'Read kokku:',
	                    name: 'read_kokku',
	                    style: styles.total,
	                    ref: 'input-read',
	                    value: Number(this.state.read) || 0,
	                    disabled: true })
	            );
	        }
	    }, {
	        key: 'renderer',
	        value: function renderer(self) {
	            if (self.gridData) {
	                this.setState({
	                    read: self.gridData.length });
	            }

	            return null;
	        }
	    }]);

	    return Documents;
	}(React.PureComponent);

	module.exports = Documents;

/***/ }),
/* 375 */
/***/ (function(module, exports) {

	'use strict';module.exports={grid:{mainTable:{width:'100%',td:{border:'1px solid lightGrey',display:'table-cell',paddingLeft:'5px'}},headerTable:{width:'100%'},gridContainer:{width:'100%'}},total:{width:'auto'},doc:{height:'100%'}};

/***/ }),
/* 376 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(10);
	var DocumentRegister = __webpack_require__(235);
	var InputNumber = __webpack_require__(221);
	var InputText = __webpack_require__(219);
	var BtnGetXml = __webpack_require__(244);
	var ToolbarContainer = __webpack_require__(78);

	var styles = __webpack_require__(377);
	var DocContext = __webpack_require__(1);
	var DOC_TYPE_ID = 'KUUTABELI_ARUANNE';
	var TOOLBAR_PROPS = {
	    add: false,
	    edit: false,
	    delete: false,
	    start: false,
	    print: true,
	    email: true
	};

	/**
	 * Класс реализует документ справочника признаков.
	 */

	var Documents = function (_React$PureComponent) {
	    _inherits(Documents, _React$PureComponent);

	    function Documents(props) {
	        _classCallCheck(this, Documents);

	        var _this = _possibleConstructorReturn(this, (Documents.__proto__ || Object.getPrototypeOf(Documents)).call(this, props));

	        _this.renderer = _this.renderer.bind(_this);
	        _this.onClickHandler = _this.onClickHandler.bind(_this);

	        _this.state = {
	            read: 0,
	            filtri_read: 0,
	            arvestatud: 0,
	            soodustus: 0,
	            summa: 0
	        };

	        return _this;
	    }

	    _createClass(Documents, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(
	                'div',
	                null,
	                React.createElement(DocumentRegister, { initData: this.props.initData,
	                    history: this.props.history ? this.props.history : null,
	                    module: this.props.module,
	                    ref: 'register',
	                    toolbarProps: TOOLBAR_PROPS,
	                    docTypeId: DOC_TYPE_ID,
	                    style: styles,
	                    render: this.renderer }),
	                React.createElement(InputText, { title: 'Filtri all / read kokku:',
	                    name: 'read_kokku',
	                    style: styles.total,
	                    ref: 'input-read',
	                    value: String(this.state.filtri_read + '/' + this.state.read) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'Arvestatud (sh \xFCmberarvestus) kokku:',
	                    name: 'arvestatud_kokku',
	                    style: styles.total,
	                    ref: 'input-arvestatud',
	                    value: Number(this.state.arvestatud) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'Soodustus kokku:',
	                    name: 'soodustus_kokku',
	                    style: styles.total,
	                    ref: 'input-soodustus',
	                    value: Number(this.state.soodustus) || 0,
	                    disabled: true }),
	                React.createElement(InputNumber, { title: 'Arvestatud ja Soodustus kokku:',
	                    name: 'arv_ja_soodustus_kokku',
	                    style: styles.total,
	                    ref: 'input-arv_ja_soodustus',
	                    value: Number(this.state.summa) || 0,
	                    disabled: true })
	            );
	        }
	    }, {
	        key: 'renderer',
	        value: function renderer(self) {

	            if (self.gridData) {
	                var arvestatud = self.gridData && self.gridData.length && self.gridData[0].arvestatud_total ? self.gridData[0].arvestatud_total : 0;
	                var soodustus = self.gridData && self.gridData.length && self.gridData[0].soodustus_total ? self.gridData[0].soodustus_total : 0;
	                var summa = self.gridData && self.gridData.length && self.gridData[0].summa_total ? self.gridData[0].summa_total : 0;

	                var filtri_read = self.gridData && self.gridData.length && self.gridData[0].filter_total ? self.gridData[0].filter_total : 0;
	                var read = self.gridData && self.gridData.length && self.gridData[0].rows_total ? self.gridData[0].rows_total : 0;

	                this.setState({
	                    read: read,
	                    arvestatud: arvestatud,
	                    soodustus: soodustus,
	                    summa: summa,
	                    filtri_read: filtri_read
	                });
	            }
	            return React.createElement(
	                ToolbarContainer,
	                null,
	                React.createElement(BtnGetXml, {
	                    value: 'Saama CSV fail',
	                    onClick: this.onClickHandler,
	                    showDate: false,
	                    ref: 'btn-getCsv'
	                })
	            );

	            return null;
	        }

	        //handler для события клик на кнопках панели

	    }, {
	        key: 'onClickHandler',
	        value: function onClickHandler() {
	            var Doc = this.refs['register'];

	            if (Doc.gridData && Doc.gridData.length) {
	                //делаем редайрект на конфигурацию
	                var sqlWhere = Doc.state.sqlWhere;
	                var url = '/reports/kuutabeli_aruanne/' + DocContext.userData.uuid;
	                var params = encodeURIComponent('' + sqlWhere);
	                var filter = encodeURIComponent('' + JSON.stringify(Doc.filterData));
	                var fullUrl = sqlWhere ? url + '/' + filter + '/' + params : url + '/' + filter;
	                window.open(fullUrl);
	            } else {
	                Doc.setState({
	                    warning: 'Mitte ühtegi kirjed leidnud', // строка извещений
	                    warningType: 'notValid'

	                });
	            }
	        }
	    }]);

	    return Documents;
	}(React.PureComponent);

	module.exports = Documents;

/***/ }),
/* 377 */
/***/ (function(module, exports) {

	'use strict';module.exports={grid:{mainTable:{width:'100%',td:{border:'1px solid lightGrey',display:'table-cell',paddingLeft:'5px'}},headerTable:{width:'100%'},gridContainer:{width:'100%'}},total:{width:'auto'},doc:{height:'100%'}};

/***/ })
]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGFwc2VkLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vZnJvbnRlbmQvbGFwc2VkLmpzIiwid2VicGFjazovLy8uL2Zyb250ZW5kL21vZHVsZXMvbGFwc2VkLmpzeCIsIndlYnBhY2s6Ly8vLi9mcm9udGVuZC9kb2NzL2xhcHMvZG9jdW1lbnQvaW5kZXguanN4Iiwid2VicGFjazovLy8uL2xpYnMvY29tcGFyZURhdGVzLmpzIiwid2VicGFjazovLy8uL2Zyb250ZW5kL2RvY3MvbGFwcy9kb2N1bWVudC9sYXBzLnN0eWxlcy5qcyIsIndlYnBhY2s6Ly8vLi9mcm9udGVuZC9kb2NzL2xhcHMvaW5kZXguanN4Iiwid2VicGFjazovLy8uL2Zyb250ZW5kL2RvY3MvbGFwcy9sYXBzLXJlZ2lzdGVyLXN0eWxlcy5qcyIsIndlYnBhY2s6Ly8vLi9mcm9udGVuZC9kb2NzL2xhcHNlX2thYXJ0L2luZGV4LmpzeCIsIndlYnBhY2s6Ly8vLi9mcm9udGVuZC9kb2NzL2xhcHNlX2thYXJ0L3N0eWxlcy5qcyIsIndlYnBhY2s6Ly8vLi9mcm9udGVuZC9kb2NzL2xhcHNlX2thYXJ0L2RvY3VtZW50L2luZGV4LmpzeCIsIndlYnBhY2s6Ly8vLi9mcm9udGVuZC9kb2NzL2xhcHNlX2thYXJ0L2RvY3VtZW50L3N0eWxlcy5qcyIsIndlYnBhY2s6Ly8vLi9mcm9udGVuZC9kb2NzL2xhcHNlX3RhYWJlbC9pbmRleC5qc3giLCJ3ZWJwYWNrOi8vLy4vZnJvbnRlbmQvZG9jcy9sYXBzZV90YWFiZWwvc3R5bGVzLmpzIiwid2VicGFjazovLy8uL2Zyb250ZW5kL2RvY3MvbGFwc2VfdGFhYmVsL2RvY3VtZW50L2luZGV4LmpzeCIsIndlYnBhY2s6Ly8vLi9mcm9udGVuZC9kb2NzL2xhcHNlX3RhYWJlbC9kb2N1bWVudC9zdHlsZXMuanMiLCJ3ZWJwYWNrOi8vLy4vZnJvbnRlbmQvZG9jcy9wYWV2YV90YWFiZWwvaW5kZXguanN4Iiwid2VicGFjazovLy8uL2Zyb250ZW5kL2RvY3MvcGFldmFfdGFhYmVsL3N0eWxlcy5qcyIsIndlYnBhY2s6Ly8vLi9mcm9udGVuZC9kb2NzL3BhZXZhX3RhYWJlbC9kb2N1bWVudC9pbmRleC5qc3giLCJ3ZWJwYWNrOi8vLy4vZnJvbnRlbmQvZG9jcy9wYWV2YV90YWFiZWwvZG9jdW1lbnQvc3R5bGVzLmpzIiwid2VicGFjazovLy8uL2Zyb250ZW5kL2RvY3MvdmFuZW0vZG9jdW1lbnQvaW5kZXguanN4Iiwid2VicGFjazovLy8uL2Zyb250ZW5kL2RvY3MvdmFuZW0vZG9jdW1lbnQvc3R5bGVzLmpzIiwid2VicGFjazovLy8uL2Zyb250ZW5kL2RvY3MvdmFuZW0vaW5kZXguanN4Iiwid2VicGFjazovLy8uL2Zyb250ZW5kL2RvY3MvdmFuZW0vc3R5bGVzLmpzIiwid2VicGFjazovLy8uL2Zyb250ZW5kL2RvY3MvbGFwc2VfZ3J1cHAvaW5kZXguanN4Iiwid2VicGFjazovLy8uL2Zyb250ZW5kL2RvY3MvbGFwc2VfZ3J1cHAvc3R5bGVzLmpzIiwid2VicGFjazovLy8uL2Zyb250ZW5kL2RvY3MvbGFwc2VfZ3J1cHAvZG9jdW1lbnQvaW5kZXguanN4Iiwid2VicGFjazovLy8uL2Zyb250ZW5kL2RvY3MvbGFwc2VfZ3J1cHAvZG9jdW1lbnQvc3R5bGVzLmpzIiwid2VicGFjazovLy8uL2Zyb250ZW5kL2RvY3MvdGVhdGlzL2luZGV4LmpzeCIsIndlYnBhY2s6Ly8vLi9mcm9udGVuZC9kb2NzL3RlYXRpcy9zdHlsZXMuanMiLCJ3ZWJwYWNrOi8vLy4vZnJvbnRlbmQvZG9jcy90ZWF0aXMvZG9jdW1lbnQvaW5kZXguanN4Iiwid2VicGFjazovLy8uL2Zyb250ZW5kL2RvY3MvdGVhdGlzL2RvY3VtZW50L3N0eWxlcy5qcyIsIndlYnBhY2s6Ly8vLi9mcm9udGVuZC9kb2NzL2FzdXR1c2VfbGlpay9pbmRleC5qc3giLCJ3ZWJwYWNrOi8vLy4vZnJvbnRlbmQvZG9jcy9hc3V0dXNlX2xpaWsvc3R5bGVzLmpzIiwid2VicGFjazovLy8uL2Zyb250ZW5kL2RvY3MvYXN1dHVzZV9saWlrL2RvY3VtZW50L2luZGV4LmpzeCIsIndlYnBhY2s6Ly8vLi9mcm9udGVuZC9kb2NzL2FzdXR1c2VfbGlpay9kb2N1bWVudC9zdHlsZXMuanMiLCJ3ZWJwYWNrOi8vLy4vZnJvbnRlbmQvZG9jcy9rb29saXR1c2VfdHl5cC9pbmRleC5qc3giLCJ3ZWJwYWNrOi8vLy4vZnJvbnRlbmQvZG9jcy9rb29saXR1c2VfdHl5cC9zdHlsZXMuanMiLCJ3ZWJwYWNrOi8vLy4vZnJvbnRlbmQvZG9jcy9rb29saXR1c2VfdHl5cC9kb2N1bWVudC9pbmRleC5qc3giLCJ3ZWJwYWNrOi8vLy4vZnJvbnRlbmQvZG9jcy9rb29saXR1c2VfdHl5cC9kb2N1bWVudC9zdHlsZXMuanMiLCJ3ZWJwYWNrOi8vLy4vZnJvbnRlbmQvZG9jcy9rb29saXR1c2VfbGlpay9pbmRleC5qc3giLCJ3ZWJwYWNrOi8vLy4vZnJvbnRlbmQvZG9jcy9rb29saXR1c2VfbGlpay9zdHlsZXMuanMiLCJ3ZWJwYWNrOi8vLy4vZnJvbnRlbmQvZG9jcy9rb29saXR1c2VfbGlpay9kb2N1bWVudC9pbmRleC5qc3giLCJ3ZWJwYWNrOi8vLy4vZnJvbnRlbmQvZG9jcy9rb29saXR1c2VfbGlpay9kb2N1bWVudC9zdHlsZXMuanMiLCJ3ZWJwYWNrOi8vLy4vZnJvbnRlbmQvZG9jcy9wYW5rX3Z2L2luZGV4LmpzeCIsIndlYnBhY2s6Ly8vLi9mcm9udGVuZC9kb2NzL3BhbmtfdnYvc3R5bGVzLmpzIiwid2VicGFjazovLy8uL2Zyb250ZW5kL2RvY3MvcGFua192di9kb2N1bWVudC9pbmRleC5qc3giLCJ3ZWJwYWNrOi8vLy4vZnJvbnRlbmQvZG9jcy9wYW5rX3Z2L2RvY3VtZW50L3N0eWxlcy5qcyIsIndlYnBhY2s6Ly8vLi9mcm9udGVuZC9kb2NzL3ZpaXRlbnIvZG9jdW1lbnQvaW5kZXguanN4Iiwid2VicGFjazovLy8uL2Zyb250ZW5kL2RvY3MvdmlpdGVuci9kb2N1bWVudC9zdHlsZXMuanMiLCJ3ZWJwYWNrOi8vLy4vZnJvbnRlbmQvZG9jcy9jb25maWcvZG9jdW1lbnQvaW5kZXguanN4Iiwid2VicGFjazovLy8uL2Zyb250ZW5kL2RvY3MvY29uZmlnL2RvY3VtZW50L3N0eWxlcy5qcyIsIndlYnBhY2s6Ly8vLi9mcm9udGVuZC9kb2NzL3Jla3YvZG9jdW1lbnQvaW5kZXguanN4Iiwid2VicGFjazovLy8uL2Zyb250ZW5kL2RvY3MvcmVrdi9kb2N1bWVudC9zdHlsZXMuanMiLCJ3ZWJwYWNrOi8vLy4vZnJvbnRlbmQvZG9jcy9kb2twcm9wcy9kb2N1bWVudC9pbmRleC5qc3giLCJ3ZWJwYWNrOi8vLy4vZnJvbnRlbmQvZG9jcy9kb2twcm9wcy9kb2N1bWVudC9zdHlsZXMuanMiLCJ3ZWJwYWNrOi8vLy4vZnJvbnRlbmQvZG9jcy91c2VyaWQvZG9jdW1lbnQvaW5kZXguanN4Iiwid2VicGFjazovLy8uL2Zyb250ZW5kL2RvY3MvdXNlcmlkL2RvY3VtZW50L3N0eWxlcy5qcyIsIndlYnBhY2s6Ly8vLi9mcm9udGVuZC9kb2NzL2UtbWFpbC9kb2N1bWVudC9pbmRleC5qc3giLCJ3ZWJwYWNrOi8vLy4vZnJvbnRlbmQvZG9jcy9lLW1haWwvZG9jdW1lbnQvc3R5bGVzLmpzIiwid2VicGFjazovLy8uL2Zyb250ZW5kL2RvY3MvaW5mMy9pbmRleC5qc3giLCJ3ZWJwYWNrOi8vLy4vZnJvbnRlbmQvZG9jcy9pbmYzL3N0eWxlcy5qcyIsIndlYnBhY2s6Ly8vLi9mcm9udGVuZC9kb2NzL2NoaWxkX3N1bW1hcnkvaW5kZXguanN4Iiwid2VicGFjazovLy8uL2Zyb250ZW5kL2RvY3MvY2hpbGRfc3VtbWFyeS9zdHlsZXMuanMiLCJ3ZWJwYWNrOi8vLy4vZnJvbnRlbmQvZG9jcy9hcnZlZF9rb29kaV9qYXJnaS9pbmRleC5qc3giLCJ3ZWJwYWNrOi8vLy4vZnJvbnRlbmQvZG9jcy9hcnZlZF9rb29kaV9qYXJnaS9zdHlsZXMuanMiLCJ3ZWJwYWNrOi8vLy4vZnJvbnRlbmQvZG9jcy9zYWxkb19qYV9rYWl2ZS9pbmRleC5qc3giLCJ3ZWJwYWNrOi8vLy4vZnJvbnRlbmQvZG9jcy9zYWxkb19qYV9rYWl2ZS9zdHlsZXMuanMiLCJ3ZWJwYWNrOi8vLy4vZnJvbnRlbmQvZG9jcy9zYWxkb19qYV9rYWliZWFuZG1pay9pbmRleC5qc3giLCJ3ZWJwYWNrOi8vLy4vZnJvbnRlbmQvZG9jcy9zYWxkb19qYV9rYWliZWFuZG1pay9zdHlsZXMuanMiLCJ3ZWJwYWNrOi8vLy4vZnJvbnRlbmQvZG9jcy9rYWl2ZV9hcnVhbm5lL2luZGV4LmpzeCIsIndlYnBhY2s6Ly8vLi9mcm9udGVuZC9kb2NzL2thaXZlX2FydWFubmUvc3R5bGVzLmpzIiwid2VicGFjazovLy8uL2Zyb250ZW5kL2RvY3Mva2FpdmVfYXJ1YW5uZV9rb2trdS9pbmRleC5qc3giLCJ3ZWJwYWNrOi8vLy4vZnJvbnRlbmQvZG9jcy9rYWl2ZV9hcnVhbm5lX2tva2t1L3N0eWxlcy5qcyIsIndlYnBhY2s6Ly8vLi9mcm9udGVuZC9kb2NzL3NlbnRfZG9jcy9pbmRleC5qc3giLCJ3ZWJwYWNrOi8vLy4vZnJvbnRlbmQvZG9jcy9zZW50X2RvY3Mvc3R5bGVzLmpzIiwid2VicGFjazovLy8uL2Zyb250ZW5kL2RvY3MvY2hpbGRfYWdlL2luZGV4LmpzeCIsIndlYnBhY2s6Ly8vLi9mcm9udGVuZC9kb2NzL2NoaWxkX2FnZS9zdHlsZXMuanMiLCJ3ZWJwYWNrOi8vLy4vZnJvbnRlbmQvZG9jcy9zb29kdXN0dXNlZC9pbmRleC5qc3giLCJ3ZWJwYWNrOi8vLy4vZnJvbnRlbmQvZG9jcy9zb29kdXN0dXNlZC9zdHlsZXMuanMiLCJ3ZWJwYWNrOi8vLy4vZnJvbnRlbmQvZG9jcy9zdGF0aXN0aWthL2luZGV4LmpzeCIsIndlYnBhY2s6Ly8vLi9mcm9udGVuZC9kb2NzL3N0YXRpc3Rpa2Evc3R5bGVzLmpzIiwid2VicGFjazovLy8uL2Zyb250ZW5kL2RvY3MvZWJhdG9lbmFvbGlzZWQvaW5kZXguanN4Iiwid2VicGFjazovLy8uL2Zyb250ZW5kL2RvY3MvZWJhdG9lbmFvbGlzZWQvc3R5bGVzLmpzIiwid2VicGFjazovLy8uL2Zyb250ZW5kL2RvY3Mva29uZGFydmUvaW5kZXguanN4Iiwid2VicGFjazovLy8uL2Zyb250ZW5kL2RvY3Mva29uZGFydmUvc3R5bGVzLmpzIiwid2VicGFjazovLy8uL2Zyb250ZW5kL2RvY3MvYWFzdGFfbmFpdGFqYWQvaW5kZXguanN4Iiwid2VicGFjazovLy8uL2Zyb250ZW5kL2RvY3MvYWFzdGFfbmFpdGFqYWQvc3R5bGVzLmpzIiwid2VicGFjazovLy8uL2Zyb250ZW5kL2RvY3Mva3V1X3RhYWJlbC9pbmRleC5qc3giLCJ3ZWJwYWNrOi8vLy4vZnJvbnRlbmQvZG9jcy9rdXVfdGFhYmVsL3N0eWxlcy5qcyIsIndlYnBhY2s6Ly8vLi9mcm9udGVuZC9kb2NzL3lrc3VzZV90YWFiZWwvaW5kZXguanN4Iiwid2VicGFjazovLy8uL2Zyb250ZW5kL2RvY3MveWtzdXNlX3RhYWJlbC9zdHlsZXMuanMiLCJ3ZWJwYWNrOi8vLy4vZnJvbnRlbmQvZG9jcy9rb2hhbG9sZWt1X2FydWFubmUvaW5kZXguanN4Iiwid2VicGFjazovLy8uL2Zyb250ZW5kL2RvY3Mva29oYWxvbGVrdV9hcnVhbm5lL3N0eWxlcy5qcyIsIndlYnBhY2s6Ly8vLi9mcm9udGVuZC9kb2NzL3RvcGVsdG1ha3N1ZC9pbmRleC5qc3giLCJ3ZWJwYWNrOi8vLy4vZnJvbnRlbmQvZG9jcy90b3BlbHRtYWtzdWQvc3R5bGVzLmpzIiwid2VicGFjazovLy8uL2Zyb250ZW5kL2RvY3Mva3V1dGFiZWxpX2FydWFubmUvaW5kZXguanN4Iiwid2VicGFjazovLy8uL2Zyb250ZW5kL2RvY3Mva3V1dGFiZWxpX2FydWFubmUvc3R5bGVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jzt2YXIgX2RvY0NvbnRleHQ9cmVxdWlyZSgnLi9kb2MtY29udGV4dC5qcycpO3ZhciBfZG9jQ29udGV4dDI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZG9jQ29udGV4dCk7ZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmope3JldHVybiBvYmomJm9iai5fX2VzTW9kdWxlP29iajp7ZGVmYXVsdDpvYmp9O312YXIgUmVhY3RET009cmVxdWlyZSgncmVhY3QtZG9tJyk7dmFyIF9yZXF1aXJlPXJlcXVpcmUoJ3JlYWN0LXJvdXRlci1kb20nKSxCcm93c2VyUm91dGVyPV9yZXF1aXJlLkJyb3dzZXJSb3V0ZXI7dmFyIERvYz1yZXF1aXJlKCcuLi9mcm9udGVuZC9tb2R1bGVzL2xhcHNlZC5qc3gnKTtpbml0RGF0YT1KU09OLnBhcnNlKGluaXREYXRhKTt1c2VyRGF0YT1KU09OLnBhcnNlKHVzZXJEYXRhKTsvLyDRgdC+0YXRgNCw0L3QuNC8INCx0LDQt9C+0LLRi9C1INC00LDQvdC90YvQtSDQsiDQv9Cw0LzQtdGC0Lhcbl9kb2NDb250ZXh0Mi5kZWZhdWx0LnNldEluaXREYXRhPWluaXREYXRhO19kb2NDb250ZXh0Mi5kZWZhdWx0LnNldFVzZXJEYXRhPXVzZXJEYXRhO19kb2NDb250ZXh0Mi5kZWZhdWx0LnNldE1vZHVsZT0nbGFwc2VkJztfZG9jQ29udGV4dDIuZGVmYXVsdC5zZXRQYWdlTmFtZT0nTGFzdGUgcmVnaXN0ZXInO1JlYWN0RE9NLmh5ZHJhdGUoUmVhY3QuY3JlYXRlRWxlbWVudChCcm93c2VyUm91dGVyLG51bGwsUmVhY3QuY3JlYXRlRWxlbWVudChEb2Mse2luaXREYXRhOmluaXREYXRhLHVzZXJEYXRhOnVzZXJEYXRhLG1vZHVsZTonbGFwc2VkJ30pKSxkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZG9jJykpO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vZnJvbnRlbmQvbGFwc2VkLmpzXG4vLyBtb2R1bGUgaWQgPSAwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxudmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuXG52YXIgTWVudSA9IHJlcXVpcmUoJy4vLi4vY29tcG9uZW50cy9tZW51LXRvb2xiYXIvbWVudS10b29sYmFyLmpzeCcpO1xudmFyIEpvdXJuYWxEb2N1bWVudCA9IHJlcXVpcmUoJy4uL2RvY3Mvam91cm5hbC9kb2N1bWVudC9pbmRleC5qc3gnKTtcblxudmFyIExhcHNlRG9rdW1lbnQgPSByZXF1aXJlKCcuLy4uL2RvY3MvbGFwcy9kb2N1bWVudC9pbmRleC5qc3gnKTtcbnZhciBMYXN0ZVJlZ2lzdGVyID0gcmVxdWlyZSgnLi8uLi9kb2NzL2xhcHMvaW5kZXguanN4Jyk7XG5cbnZhciBMYXN0ZVRlZW51c3RSZWdpc3RlciA9IHJlcXVpcmUoJy4vLi4vZG9jcy9sYXBzZV9rYWFydC9pbmRleC5qc3gnKTtcbnZhciBMYXBzZUthYXJ0RG9rdW1lbnQgPSByZXF1aXJlKCcuLy4uL2RvY3MvbGFwc2Vfa2FhcnQvZG9jdW1lbnQvaW5kZXguanN4Jyk7XG5cbnZhciBMYXN0ZVRhYWJlbFJlZ2lzdGVyID0gcmVxdWlyZSgnLi8uLi9kb2NzL2xhcHNlX3RhYWJlbC9pbmRleC5qc3gnKTtcbnZhciBMYXBzZVRhYWJlbERva3VtZW50ID0gcmVxdWlyZSgnLi8uLi9kb2NzL2xhcHNlX3RhYWJlbC9kb2N1bWVudC9pbmRleC5qc3gnKTtcblxudmFyIFBhZXZhVGFhYmVsUmVnaXN0ZXIgPSByZXF1aXJlKCcuLy4uL2RvY3MvcGFldmFfdGFhYmVsL2luZGV4LmpzeCcpO1xudmFyIFBhZXZhVGFhYmVsRG9rdW1lbnQgPSByZXF1aXJlKCcuLy4uL2RvY3MvcGFldmFfdGFhYmVsL2RvY3VtZW50L2luZGV4LmpzeCcpO1xuXG52YXIgVmFuZW1Eb2t1bWVudCA9IHJlcXVpcmUoJy4vLi4vZG9jcy92YW5lbS9kb2N1bWVudC9pbmRleC5qc3gnKTtcbnZhciBWYW5lbWF0ZVJlZ2lzdGVyID0gcmVxdWlyZSgnLi8uLi9kb2NzL3ZhbmVtL2luZGV4LmpzeCcpO1xuXG52YXIgQXJ2ZWRlUmVnaXN0ZXIgPSByZXF1aXJlKCcuLy4uL2RvY3MvYXJ2L2luZGV4LmpzeCcpO1xudmFyIEFydmVEb2N1bWVudCA9IHJlcXVpcmUoJy4vLi4vZG9jcy9hcnYvZG9jdW1lbnQvaW5kZXguanN4Jyk7XG5cbnZhciBTbWtSZWdpc3RlciA9IHJlcXVpcmUoJy4vLi4vZG9jcy9zbWsvaW5kZXguanN4Jyk7XG52YXIgU21rRG9jdW1lbnQgPSByZXF1aXJlKCcuLy4uL2RvY3Mvc21rL2RvY3VtZW50L2luZGV4LmpzeCcpO1xudmFyIFZta1JlZ2lzdGVyID0gcmVxdWlyZSgnLi8uLi9kb2NzL3Ztay9pbmRleC5qc3gnKTtcbnZhciBWbWtEb2N1bWVudCA9IHJlcXVpcmUoJy4vLi4vZG9jcy92bWsvZG9jdW1lbnQvaW5kZXguanN4Jyk7XG5cbnZhciBTb3JkZXJpZGVSZWdpc3RlciA9IHJlcXVpcmUoJy4vLi4vZG9jcy9zb3JkZXIvaW5kZXguanN4Jyk7XG52YXIgU29yZGVyRG9jdW1lbnQgPSByZXF1aXJlKCcuLy4uL2RvY3Mvc29yZGVyL2RvY3VtZW50L2luZGV4LmpzeCcpO1xuXG52YXIgTm9tUmVnaXN0ZXIgPSByZXF1aXJlKCcuLy4uL2RvY3Mvbm9tZW5jbGF0dXJlL2luZGV4LmpzeCcpLFxuICAgIE5vbURvY3VtZW50ID0gcmVxdWlyZSgnLi8uLi9kb2NzL25vbWVuY2xhdHVyZS9kb2N1bWVudC9pbmRleC5qc3gnKTtcblxudmFyIFR1bm51c1JlZ2lzdGVyID0gcmVxdWlyZSgnLi8uLi9kb2NzL3R1bm51cy9pbmRleC5qc3gnKSxcbiAgICBUdW5udXNEb2N1bWVudCA9IHJlcXVpcmUoJy4vLi4vZG9jcy90dW5udXMvZG9jdW1lbnQvaW5kZXguanN4Jyk7XG5cbnZhciBBc3V0dXNSZWdpc3RlciA9IHJlcXVpcmUoJy4vLi4vZG9jcy9hc3V0dXNlZC9pbmRleC5qc3gnKSxcbiAgICBBc3V0dXNEb2N1bWVudCA9IHJlcXVpcmUoJy4vLi4vZG9jcy9hc3V0dXNlZC9kb2N1bWVudC9pbmRleC5qc3gnKTtcblxudmFyIExhcHNlR3J1cHBSZWdpc3RlciA9IHJlcXVpcmUoJy4vLi4vZG9jcy9sYXBzZV9ncnVwcC9pbmRleC5qc3gnKSxcbiAgICBMYXBzZUdydXBwRG9jdW1lbnQgPSByZXF1aXJlKCcuLy4uL2RvY3MvbGFwc2VfZ3J1cHAvZG9jdW1lbnQvaW5kZXguanN4Jyk7XG5cbnZhciBUZWF0aXNSZWdpc3RlciA9IHJlcXVpcmUoJy4vLi4vZG9jcy90ZWF0aXMvaW5kZXguanN4JyksXG4gICAgVGVhdGlzRG9jdW1lbnQgPSByZXF1aXJlKCcuLy4uL2RvY3MvdGVhdGlzL2RvY3VtZW50L2luZGV4LmpzeCcpO1xuXG52YXIgQXN1dHVzZUxpaWtSZWdpc3RlciA9IHJlcXVpcmUoJy4vLi4vZG9jcy9hc3V0dXNlX2xpaWsvaW5kZXguanN4JyksXG4gICAgQXN1dHVzZUxpaWtEb2N1bWVudCA9IHJlcXVpcmUoJy4vLi4vZG9jcy9hc3V0dXNlX2xpaWsvZG9jdW1lbnQvaW5kZXguanN4Jyk7XG5cbnZhciBLb29saXR1c2VUeXlwUmVnaXN0ZXIgPSByZXF1aXJlKCcuLy4uL2RvY3Mva29vbGl0dXNlX3R5eXAvaW5kZXguanN4JyksXG4gICAgS29vbGl0dXNlVHl5cERvY3VtZW50ID0gcmVxdWlyZSgnLi8uLi9kb2NzL2tvb2xpdHVzZV90eXlwL2RvY3VtZW50L2luZGV4LmpzeCcpO1xuXG52YXIgS29vbGl0dXNlTGlpa1JlZ2lzdGVyID0gcmVxdWlyZSgnLi8uLi9kb2NzL2tvb2xpdHVzZV9saWlrL2luZGV4LmpzeCcpLFxuICAgIEtvb2xpdHVzZUxpaWtEb2N1bWVudCA9IHJlcXVpcmUoJy4vLi4vZG9jcy9rb29saXR1c2VfbGlpay9kb2N1bWVudC9pbmRleC5qc3gnKTtcblxudmFyIFBhbmtWVlJlZ2lzdGVyID0gcmVxdWlyZSgnLi8uLi9kb2NzL3BhbmtfdnYvaW5kZXguanN4Jyk7XG52YXIgUGFua1ZWRG9jdW1lbnQgPSByZXF1aXJlKCcuLy4uL2RvY3MvcGFua192di9kb2N1bWVudC9pbmRleC5qc3gnKTtcbnZhciBWaWl0ZW5yRG9jdW1lbnQgPSByZXF1aXJlKCcuLy4uL2RvY3MvdmlpdGVuci9kb2N1bWVudC9pbmRleC5qc3gnKTtcblxudmFyIENvbmZpZ0RvY3VtZW50ID0gcmVxdWlyZSgnLi8uLi9kb2NzL2NvbmZpZy9kb2N1bWVudC9pbmRleC5qc3gnKTtcbnZhciBSZWt2RG9jdW1lbnQgPSByZXF1aXJlKCcuLy4uL2RvY3MvcmVrdi9kb2N1bWVudC9pbmRleC5qc3gnKTtcbnZhciBEb2twcm9wc0RvY3VtZW50ID0gcmVxdWlyZSgnLi8uLi9kb2NzL2Rva3Byb3BzL2RvY3VtZW50L2luZGV4LmpzeCcpO1xudmFyIFVzZXJEb2N1bWVudCA9IHJlcXVpcmUoJy4vLi4vZG9jcy91c2VyaWQvZG9jdW1lbnQvaW5kZXguanN4Jyk7XG52YXIgRW1haWxEb2N1bWVudCA9IHJlcXVpcmUoJy4vLi4vZG9jcy9lLW1haWwvZG9jdW1lbnQvaW5kZXguanN4Jyk7XG5cbnZhciBJbmYzUmVwb3J0ID0gcmVxdWlyZSgnLi8uLi9kb2NzL2luZjMvaW5kZXguanN4Jyk7XG52YXIgQ2hpbGRTdW1tYXJ5UmVwb3J0ID0gcmVxdWlyZSgnLi8uLi9kb2NzL2NoaWxkX3N1bW1hcnkvaW5kZXguanN4Jyk7XG52YXIgQXJ2ZWRLb29kaUphcmdpUmVwb3J0ID0gcmVxdWlyZSgnLi8uLi9kb2NzL2FydmVkX2tvb2RpX2phcmdpL2luZGV4LmpzeCcpO1xudmFyIFNhbGRvSmFLYWl2ZVJlcG9ydCA9IHJlcXVpcmUoJy4vLi4vZG9jcy9zYWxkb19qYV9rYWl2ZS9pbmRleC5qc3gnKTtcbnZhciBTYWxkb0phS2FpYmVBbmRtaWsgPSByZXF1aXJlKCcuLy4uL2RvY3Mvc2FsZG9famFfa2FpYmVhbmRtaWsvaW5kZXguanN4Jyk7XG52YXIgS2FpdmVBcnVhbm5lID0gcmVxdWlyZSgnLi8uLi9kb2NzL2thaXZlX2FydWFubmUvaW5kZXguanN4Jyk7XG52YXIgS2FpdmVBcnVhbm5lS29ra3UgPSByZXF1aXJlKCcuLy4uL2RvY3Mva2FpdmVfYXJ1YW5uZV9rb2trdS9pbmRleC5qc3gnKTtcbnZhciBTZW50RG9jc1JlcG9ydCA9IHJlcXVpcmUoJy4vLi4vZG9jcy9zZW50X2RvY3MvaW5kZXguanN4Jyk7XG52YXIgQ2hpbGRBZ2VSZXBvcnQgPSByZXF1aXJlKCcuLy4uL2RvY3MvY2hpbGRfYWdlL2luZGV4LmpzeCcpO1xudmFyIFNvb2R1c3R1c2VkUmVwb3J0ID0gcmVxdWlyZSgnLi8uLi9kb2NzL3Nvb2R1c3R1c2VkL2luZGV4LmpzeCcpO1xudmFyIFN0YXRpc3Rpa2FSZXBvcnQgPSByZXF1aXJlKCcuLy4uL2RvY3Mvc3RhdGlzdGlrYS9pbmRleC5qc3gnKTtcbnZhciBFYmF0b2VuYW9saXNlZFJlcG9ydCA9IHJlcXVpcmUoJy4vLi4vZG9jcy9lYmF0b2VuYW9saXNlZC9pbmRleC5qc3gnKTtcbnZhciBLb25kQXJ2ZVJlcG9ydCA9IHJlcXVpcmUoJy4vLi4vZG9jcy9rb25kYXJ2ZS9pbmRleC5qc3gnKTtcbnZhciBBYXN0YU5haXRhamFkUmVwb3J0ID0gcmVxdWlyZSgnLi8uLi9kb2NzL2Fhc3RhX25haXRhamFkL2luZGV4LmpzeCcpO1xudmFyIEt1dVRhYWJlbCA9IHJlcXVpcmUoJy4vLi4vZG9jcy9rdXVfdGFhYmVsL2luZGV4LmpzeCcpO1xudmFyIFlrc3VzZVRhYWJlbCA9IHJlcXVpcmUoJy4vLi4vZG9jcy95a3N1c2VfdGFhYmVsL2luZGV4LmpzeCcpO1xudmFyIEtvaGFsb2xla3VBcnVhbm5lID0gcmVxdWlyZSgnLi8uLi9kb2NzL2tvaGFsb2xla3VfYXJ1YW5uZS9pbmRleC5qc3gnKTtcbnZhciBUb3BlbHRtYWtzdWQgPSByZXF1aXJlKCcuLy4uL2RvY3MvdG9wZWx0bWFrc3VkL2luZGV4LmpzeCcpO1xudmFyIEt1dXRhYmVsaV9hcnVhbm5lID0gcmVxdWlyZSgnLi8uLi9kb2NzL2t1dXRhYmVsaV9hcnVhbm5lL2luZGV4LmpzeCcpO1xuXG52YXIgX3JlcXVpcmUgPSByZXF1aXJlKCdyZWFjdC1yb3V0ZXItZG9tJyksXG4gICAgUm91dGUgPSBfcmVxdWlyZS5Sb3V0ZSxcbiAgICBSZWRpcmVjdCA9IF9yZXF1aXJlLlJlZGlyZWN0O1xuXG52YXIgX3JlcXVpcmUyID0gcmVxdWlyZSgncmFkaXVtJyksXG4gICAgU3R5bGVSb290ID0gX3JlcXVpcmUyLlN0eWxlUm9vdDtcblxudmFyIE1PRFVMRSA9ICdMYXBzZWQnO1xudmFyIERvY0NvbnRleHQgPSByZXF1aXJlKCcuLy4uL2RvYy1jb250ZXh0LmpzJyk7XG5cbnZhciBBcHAgPSBmdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICAgIF9pbmhlcml0cyhBcHAsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gICAgZnVuY3Rpb24gQXBwKHByb3BzKSB7XG4gICAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBBcHApO1xuXG4gICAgICAgIHZhciBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChBcHAuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihBcHApKS5jYWxsKHRoaXMsIHByb3BzKSk7XG5cbiAgICAgICAgX3RoaXMucHJlcGFyZVBhcmFtc0ZvclRvb2xiYXIgPSBfdGhpcy5wcmVwYXJlUGFyYW1zRm9yVG9vbGJhci5iaW5kKF90aGlzKTtcbiAgICAgICAgX3RoaXMuY29tcG9uZXRzID0ge307XG4gICAgICAgIF90aGlzLnByZXBhcmVDb21wb25lbnRzKF90aGlzLmNvbXBvbmV0cyk7XG5cbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cblxuICAgIF9jcmVhdGVDbGFzcyhBcHAsIFt7XG4gICAgICAgIGtleTogJ3JlbmRlcicsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoaGlzdG9yeSkge1xuICAgICAgICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgIFN0eWxlUm9vdCxcbiAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIHsgZXhhY3Q6IHRydWUsIHBhdGg6ICcvbGFwc2VkJyxcbiAgICAgICAgICAgICAgICAgICAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIocHJvcHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KExhc3RlUmVnaXN0ZXIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoaXN0b3J5OiBwcm9wcy5oaXN0b3J5LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluaXREYXRhOiBfdGhpczIucHJvcHMuaW5pdERhdGEsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kdWxlOiBNT0RVTEUgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlLCB7IGV4YWN0OiB0cnVlLCBwYXRoOiAnL2xhcHNlZC9sYXBzJyxcbiAgICAgICAgICAgICAgICAgICAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIocHJvcHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KExhc3RlUmVnaXN0ZXIsIHsgaGlzdG9yeTogcHJvcHMuaGlzdG9yeSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbml0RGF0YTogX3RoaXMyLnByb3BzLmluaXREYXRhLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhhbmRsZVJvdXRpbmc6IF90aGlzMi5oYW5kbGVSb3V0aW5nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZHVsZTogTU9EVUxFIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgeyBleGFjdDogdHJ1ZSwgcGF0aDogJy9sYXBzZWQvbGFwcy86ZG9jSWQnLFxuICAgICAgICAgICAgICAgICAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihwcm9wcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTGFwc2VEb2t1bWVudCwgX2V4dGVuZHMoe30sIHByb3BzLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGlzdG9yeTogcHJvcHMuaGlzdG9yeVxuICAgICAgICAgICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgICAgICAgICB9IH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIHsgZXhhY3Q6IHRydWUsIHBhdGg6ICcvbGFwc2VkL2FzdXR1c2VkJyxcbiAgICAgICAgICAgICAgICAgICAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIocHJvcHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KEFzdXR1c1JlZ2lzdGVyLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGlzdG9yeTogcHJvcHMuaGlzdG9yeSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbml0RGF0YTogX3RoaXMyLnByb3BzLmluaXREYXRhLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZHVsZTogTU9EVUxFIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgeyBleGFjdDogdHJ1ZSwgcGF0aDogJy9sYXBzZWQvYXN1dHVzZWQvOmRvY0lkJyxcbiAgICAgICAgICAgICAgICAgICAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIocHJvcHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KEFzdXR1c0RvY3VtZW50LCBfZXh0ZW5kcyh7fSwgcHJvcHMsIHsgaGlzdG9yeTogcHJvcHMuaGlzdG9yeSB9KSk7XG4gICAgICAgICAgICAgICAgICAgIH0gfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgeyBleGFjdDogdHJ1ZSwgcGF0aDogJy9sYXBzZWQvbGFwc2VfZ3J1cHAnLFxuICAgICAgICAgICAgICAgICAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihwcm9wcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTGFwc2VHcnVwcFJlZ2lzdGVyLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGlzdG9yeTogcHJvcHMuaGlzdG9yeSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbml0RGF0YTogX3RoaXMyLnByb3BzLmluaXREYXRhLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZHVsZTogTU9EVUxFIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgeyBleGFjdDogdHJ1ZSwgcGF0aDogJy9sYXBzZWQvbGFwc2VfZ3J1cHAvOmRvY0lkJyxcbiAgICAgICAgICAgICAgICAgICAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIocHJvcHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KExhcHNlR3J1cHBEb2N1bWVudCwgX2V4dGVuZHMoe30sIHByb3BzLCB7IGhpc3Rvcnk6IHByb3BzLmhpc3RvcnkgfSkpO1xuICAgICAgICAgICAgICAgICAgICB9IH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIHsgZXhhY3Q6IHRydWUsIHBhdGg6ICcvbGFwc2VkL3ZhbmVtJyxcbiAgICAgICAgICAgICAgICAgICAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIocHJvcHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFZhbmVtYXRlUmVnaXN0ZXIsIHsgaGlzdG9yeTogcHJvcHMuaGlzdG9yeSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbml0RGF0YTogX3RoaXMyLnByb3BzLmluaXREYXRhLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZHVsZTogTU9EVUxFIH0pO1xuICAgICAgICAgICAgICAgICAgICB9IH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIHsgZXhhY3Q6IHRydWUsIHBhdGg6ICcvbGFwc2VkL3ZhbmVtLzpkb2NJZCcsXG4gICAgICAgICAgICAgICAgICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKHByb3BzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChWYW5lbURva3VtZW50LCBfZXh0ZW5kcyh7fSwgcHJvcHMsIHsgaGlzdG9yeTogcHJvcHMuaGlzdG9yeSB9KSk7XG4gICAgICAgICAgICAgICAgICAgIH0gfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgeyBleGFjdDogdHJ1ZSwgcGF0aDogJy9sYXBzZWQvbGFwc2Vfa2FhcnQnLFxuICAgICAgICAgICAgICAgICAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihwcm9wcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTGFzdGVUZWVudXN0UmVnaXN0ZXIsIHsgaGlzdG9yeTogcHJvcHMuaGlzdG9yeSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbml0RGF0YTogcHJvcHMuaW5pdERhdGEsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kdWxlOiBNT0RVTEUgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlLCB7IGV4YWN0OiB0cnVlLCBwYXRoOiAnL2xhcHNlZC9sYXBzZV9rYWFydC86ZG9jSWQnLCBjb21wb25lbnQ6IExhcHNlS2FhcnREb2t1bWVudCB9KSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlLCB7IGV4YWN0OiB0cnVlLCBwYXRoOiAnL2xhcHNlZC9sYXBzZV90YWFiZWwnLFxuICAgICAgICAgICAgICAgICAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihwcm9wcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTGFzdGVUYWFiZWxSZWdpc3RlciwgeyBoaXN0b3J5OiBwcm9wcy5oaXN0b3J5LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluaXREYXRhOiBwcm9wcy5pbml0RGF0YSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2R1bGU6IE1PRFVMRSB9KTtcbiAgICAgICAgICAgICAgICAgICAgfSB9KSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlLCB7IGV4YWN0OiB0cnVlLCBwYXRoOiAnL2xhcHNlZC9sYXBzZV90YWFiZWwvOmRvY0lkJywgY29tcG9uZW50OiBMYXBzZVRhYWJlbERva3VtZW50IH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIHsgZXhhY3Q6IHRydWUsIHBhdGg6ICcvbGFwc2VkL3BhZXZhX3RhYWJlbCcsXG4gICAgICAgICAgICAgICAgICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKHByb3BzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChQYWV2YVRhYWJlbFJlZ2lzdGVyLCB7IGhpc3Rvcnk6IHByb3BzLmhpc3RvcnksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5pdERhdGE6IHByb3BzLmluaXREYXRhLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZHVsZTogTU9EVUxFIH0pO1xuICAgICAgICAgICAgICAgICAgICB9IH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIHsgZXhhY3Q6IHRydWUsIHBhdGg6ICcvbGFwc2VkL3BhZXZhX3RhYWJlbC86ZG9jSWQnLCBjb21wb25lbnQ6IFBhZXZhVGFhYmVsRG9rdW1lbnQgfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgeyBleGFjdDogdHJ1ZSwgcGF0aDogJy9sYXBzZWQvYXJ2JyxcbiAgICAgICAgICAgICAgICAgICAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIocHJvcHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KEFydmVkZVJlZ2lzdGVyLCB7IGhpc3Rvcnk6IHByb3BzLmhpc3RvcnksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5pdERhdGE6IHByb3BzLmluaXREYXRhLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZHVsZTogTU9EVUxFIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgeyBleGFjdDogdHJ1ZSwgcGF0aDogJy9sYXBzZWQvYXJ2Lzpkb2NJZCcsXG4gICAgICAgICAgICAgICAgICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKHByb3BzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChBcnZlRG9jdW1lbnQsIF9leHRlbmRzKHt9LCBwcm9wcywgeyBoaXN0b3J5OiBwcm9wcy5oaXN0b3J5IH0pKTtcbiAgICAgICAgICAgICAgICAgICAgfSB9KSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlLCB7IGV4YWN0OiB0cnVlLCBwYXRoOiAnL2xhcHNlZC9qb3VybmFsLzpkb2NJZCcsXG4gICAgICAgICAgICAgICAgICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKHByb3BzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChKb3VybmFsRG9jdW1lbnQsIF9leHRlbmRzKHt9LCBwcm9wcywgeyBoaXN0b3J5OiBwcm9wcy5oaXN0b3J5IH0pKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIHsgZXhhY3Q6IHRydWUsIHBhdGg6ICcvbGFwc2VkL3NtaycsXG4gICAgICAgICAgICAgICAgICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKHByb3BzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChTbWtSZWdpc3RlciwgeyBoaXN0b3J5OiBwcm9wcy5oaXN0b3J5LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluaXREYXRhOiBwcm9wcy5pbml0RGF0YSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2R1bGU6IE1PRFVMRSB9KTtcbiAgICAgICAgICAgICAgICAgICAgfSB9KSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlLCB7IGV4YWN0OiB0cnVlLCBwYXRoOiAnL2xhcHNlZC9zbWsvOmRvY0lkJyxcbiAgICAgICAgICAgICAgICAgICAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIocHJvcHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFNta0RvY3VtZW50LCBfZXh0ZW5kcyh7fSwgcHJvcHMsIHsgaGlzdG9yeTogcHJvcHMuaGlzdG9yeSB9KSk7XG4gICAgICAgICAgICAgICAgICAgIH0gfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgeyBleGFjdDogdHJ1ZSwgcGF0aDogJy9sYXBzZWQvdm1rJyxcbiAgICAgICAgICAgICAgICAgICAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIocHJvcHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFZta1JlZ2lzdGVyLCB7IGhpc3Rvcnk6IHByb3BzLmhpc3RvcnksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5pdERhdGE6IHByb3BzLmluaXREYXRhLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZHVsZTogTU9EVUxFIH0pO1xuICAgICAgICAgICAgICAgICAgICB9IH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIHsgZXhhY3Q6IHRydWUsIHBhdGg6ICcvbGFwc2VkL3Ztay86ZG9jSWQnLFxuICAgICAgICAgICAgICAgICAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihwcm9wcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoVm1rRG9jdW1lbnQsIF9leHRlbmRzKHt9LCBwcm9wcywge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHByb3BzLmhpc3RvcnkgfSkpO1xuICAgICAgICAgICAgICAgICAgICB9IH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIHsgZXhhY3Q6IHRydWUsIHBhdGg6ICcvbGFwc2VkL3NvcmRlcicsXG4gICAgICAgICAgICAgICAgICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKHByb3BzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChTb3JkZXJpZGVSZWdpc3Rlciwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHByb3BzLmhpc3RvcnksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5pdERhdGE6IHByb3BzLmluaXREYXRhLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZHVsZTogTU9EVUxFIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgeyBleGFjdDogdHJ1ZSwgcGF0aDogJy9sYXBzZWQvc29yZGVyLzpkb2NJZCcsXG4gICAgICAgICAgICAgICAgICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKHByb3BzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChTb3JkZXJEb2N1bWVudCwgX2V4dGVuZHMoe30sIHByb3BzLCB7IGhpc3Rvcnk6IHByb3BzLmhpc3RvcnkgfSkpO1xuICAgICAgICAgICAgICAgICAgICB9IH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIHsgZXhhY3Q6IHRydWUsIHBhdGg6ICcvbGFwc2VkL25vbWVuY2xhdHVyZScsXG4gICAgICAgICAgICAgICAgICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKHByb3BzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChOb21SZWdpc3RlciwgeyBoaXN0b3J5OiBwcm9wcy5oaXN0b3J5LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluaXREYXRhOiBwcm9wcy5pbml0RGF0YSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2R1bGU6IE1PRFVMRSB9KTtcbiAgICAgICAgICAgICAgICAgICAgfSB9KSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlLCB7IGV4YWN0OiB0cnVlLCBwYXRoOiAnL2xhcHNlZC9ub21lbmNsYXR1cmUvOmRvY0lkJyxcbiAgICAgICAgICAgICAgICAgICAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIocHJvcHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KE5vbURvY3VtZW50LCBfZXh0ZW5kcyh7fSwgcHJvcHMsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2R1bGU6IE1PRFVMRSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoaXN0b3J5OiBwcm9wcy5oaXN0b3J5XG4gICAgICAgICAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICAgICAgICAgIH0gfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgeyBleGFjdDogdHJ1ZSwgcGF0aDogJy9sYXBzZWQvdHVubnVzLzpkb2NJZCcsIGNvbXBvbmVudDogVHVubnVzRG9jdW1lbnQgfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgeyBleGFjdDogdHJ1ZSwgcGF0aDogJy9sYXBzZWQvdHVubnVzJyxcbiAgICAgICAgICAgICAgICAgICAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIocHJvcHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFR1bm51c1JlZ2lzdGVyLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kdWxlOiBNT0RVTEUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGlzdG9yeTogcHJvcHMuaGlzdG9yeSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbml0RGF0YTogcHJvcHMuaW5pdERhdGEgfSk7XG4gICAgICAgICAgICAgICAgICAgIH0gfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgeyBleGFjdDogdHJ1ZSwgcGF0aDogJy9sYXBzZWQvdGVhdGlzLzpkb2NJZCcsIGNvbXBvbmVudDogVGVhdGlzRG9jdW1lbnQgfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgeyBleGFjdDogdHJ1ZSwgcGF0aDogJy9sYXBzZWQvdGVhdGlzJyxcbiAgICAgICAgICAgICAgICAgICAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIocHJvcHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFRlYXRpc1JlZ2lzdGVyLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kdWxlOiBNT0RVTEUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGlzdG9yeTogcHJvcHMuaGlzdG9yeSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbml0RGF0YTogcHJvcHMuaW5pdERhdGEgfSk7XG4gICAgICAgICAgICAgICAgICAgIH0gfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgeyBleGFjdDogdHJ1ZSwgcGF0aDogJy9sYXBzZWQvcGFua192di86ZG9jSWQnLCBjb21wb25lbnQ6IFBhbmtWVkRvY3VtZW50IH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIHsgZXhhY3Q6IHRydWUsIHBhdGg6ICcvbGFwc2VkL3BhbmtfdnYnLFxuICAgICAgICAgICAgICAgICAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihwcm9wcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUGFua1ZWUmVnaXN0ZXIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2R1bGU6IE1PRFVMRSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoaXN0b3J5OiBwcm9wcy5oaXN0b3J5LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluaXREYXRhOiBfdGhpczIucHJvcHMuaW5pdERhdGEgfSk7XG4gICAgICAgICAgICAgICAgICAgIH0gfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgeyBleGFjdDogdHJ1ZSwgcGF0aDogJy9sYXBzZWQvY29uZmlnLzpkb2NJZCcsXG4gICAgICAgICAgICAgICAgICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKHByb3BzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChDb25maWdEb2N1bWVudCwgX2V4dGVuZHMoe30sIHByb3BzLCB7IGhpc3Rvcnk6IHByb3BzLmhpc3RvcnkgfSkpO1xuICAgICAgICAgICAgICAgICAgICB9IH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIHsgZXhhY3Q6IHRydWUsIHBhdGg6ICcvbGFwc2VkL2NvbmZpZycsXG4gICAgICAgICAgICAgICAgICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUmVkaXJlY3QsIHsgdG86ICcvbGFwc2VkL2NvbmZpZy8nICsgRG9jQ29udGV4dC51c2VyRGF0YS5hc3V0dXNJZCB9KTtcbiAgICAgICAgICAgICAgICAgICAgfSB9KSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlLCB7IGV4YWN0OiB0cnVlLCBwYXRoOiAnL2xhcHNlZC9lLW1haWwvOmRvY0lkJyxcbiAgICAgICAgICAgICAgICAgICAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIocHJvcHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KEVtYWlsRG9jdW1lbnQsIF9leHRlbmRzKHt9LCBwcm9wcywgeyBoaXN0b3J5OiBwcm9wcy5oaXN0b3J5IH0pKTtcbiAgICAgICAgICAgICAgICAgICAgfSB9KSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlLCB7IGV4YWN0OiB0cnVlLCBwYXRoOiAnL2xhcHNlZC9lLW1haWwnLFxuICAgICAgICAgICAgICAgICAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJlZGlyZWN0LCB7IHRvOiAnL2xhcHNlZC9lLW1haWwvMCcgfSk7XG4gICAgICAgICAgICAgICAgICAgIH0gfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgeyBleGFjdDogdHJ1ZSwgcGF0aDogJy9sYXBzZWQvcmVrdi86ZG9jSWQnLFxuICAgICAgICAgICAgICAgICAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihwcm9wcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUmVrdkRvY3VtZW50LCBfZXh0ZW5kcyh7fSwgcHJvcHMsIHsgaGlzdG9yeTogcHJvcHMuaGlzdG9yeSB9KSk7XG4gICAgICAgICAgICAgICAgICAgIH0gfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgeyBleGFjdDogdHJ1ZSwgcGF0aDogJy9sYXBzZWQvcmVrdicsXG4gICAgICAgICAgICAgICAgICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUmVkaXJlY3QsIHsgdG86ICcvbGFwc2VkL3Jla3YvJyArIERvY0NvbnRleHQudXNlckRhdGEuYXN1dHVzSWQgfSk7XG4gICAgICAgICAgICAgICAgICAgIH0gfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgeyBleGFjdDogdHJ1ZSwgcGF0aDogJy9sYXBzZWQvZG9rcHJvcHMvOmRvY0lkJyxcbiAgICAgICAgICAgICAgICAgICAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIocHJvcHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KERva3Byb3BzRG9jdW1lbnQsIF9leHRlbmRzKHt9LCBwcm9wcywgeyBoaXN0b3J5OiBwcm9wcy5oaXN0b3J5IH0pKTtcbiAgICAgICAgICAgICAgICAgICAgfSB9KSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlLCB7IGV4YWN0OiB0cnVlLCBwYXRoOiAnL2xhcHNlZC91c2VyaWQvOmRvY0lkJyxcbiAgICAgICAgICAgICAgICAgICAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIocHJvcHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFVzZXJEb2N1bWVudCwgX2V4dGVuZHMoe30sIHByb3BzLCB7IGhpc3Rvcnk6IHByb3BzLmhpc3RvcnkgfSkpO1xuICAgICAgICAgICAgICAgICAgICB9IH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIHsgZXhhY3Q6IHRydWUsIHBhdGg6ICcvbGFwc2VkL3VzZXJpZC8nLFxuICAgICAgICAgICAgICAgICAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJlZGlyZWN0LCB7IHRvOiAnL2xhcHNlZC91c2VyaWQvJyArIERvY0NvbnRleHQudXNlckRhdGEuaWQgfSk7XG4gICAgICAgICAgICAgICAgICAgIH0gfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgeyBleGFjdDogdHJ1ZSwgcGF0aDogJy9sYXBzZWQvaW5mMycsXG4gICAgICAgICAgICAgICAgICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKHByb3BzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChJbmYzUmVwb3J0LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kdWxlOiBNT0RVTEUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGlzdG9yeTogcHJvcHMuaGlzdG9yeSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbml0RGF0YTogcHJvcHMuaW5pdERhdGEgfSk7XG4gICAgICAgICAgICAgICAgICAgIH0gfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgeyBleGFjdDogdHJ1ZSwgcGF0aDogJy9sYXBzZWQvbGFwc19rb2trdXZvdHRlJyxcbiAgICAgICAgICAgICAgICAgICAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIocHJvcHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KENoaWxkU3VtbWFyeVJlcG9ydCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZHVsZTogTU9EVUxFLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHByb3BzLmhpc3RvcnksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5pdERhdGE6IHByb3BzLmluaXREYXRhIH0pO1xuICAgICAgICAgICAgICAgICAgICB9IH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIHsgZXhhY3Q6IHRydWUsIHBhdGg6ICcvbGFwc2VkL2FydmVkX2tvb2RpX2phcmdpJyxcbiAgICAgICAgICAgICAgICAgICAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIocHJvcHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KEFydmVkS29vZGlKYXJnaVJlcG9ydCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZHVsZTogTU9EVUxFLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHByb3BzLmhpc3RvcnksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5pdERhdGE6IHByb3BzLmluaXREYXRhIH0pO1xuICAgICAgICAgICAgICAgICAgICB9IH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIHsgZXhhY3Q6IHRydWUsIHBhdGg6ICcvbGFwc2VkL3NhbGRvX2phX2thaXZlJyxcbiAgICAgICAgICAgICAgICAgICAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIocHJvcHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFNhbGRvSmFLYWl2ZVJlcG9ydCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZHVsZTogTU9EVUxFLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHByb3BzLmhpc3RvcnksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5pdERhdGE6IHByb3BzLmluaXREYXRhIH0pO1xuICAgICAgICAgICAgICAgICAgICB9IH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIHsgZXhhY3Q6IHRydWUsIHBhdGg6ICcvbGFwc2VkL2thaXZlX2FydWFubmUnLFxuICAgICAgICAgICAgICAgICAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihwcm9wcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoS2FpdmVBcnVhbm5lLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kdWxlOiBNT0RVTEUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGlzdG9yeTogcHJvcHMuaGlzdG9yeSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbml0RGF0YTogcHJvcHMuaW5pdERhdGEgfSk7XG4gICAgICAgICAgICAgICAgICAgIH0gfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgeyBleGFjdDogdHJ1ZSwgcGF0aDogJy9sYXBzZWQva2FpdmVfYXJ1YW5uZV9rb2trdScsXG4gICAgICAgICAgICAgICAgICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKHByb3BzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChLYWl2ZUFydWFubmVLb2trdSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZHVsZTogTU9EVUxFLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHByb3BzLmhpc3RvcnksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5pdERhdGE6IHByb3BzLmluaXREYXRhIH0pO1xuICAgICAgICAgICAgICAgICAgICB9IH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIHsgZXhhY3Q6IHRydWUsIHBhdGg6ICcvbGFwc2VkL3NhbGRvX2phX2thaWJlYW5kbWlrJyxcbiAgICAgICAgICAgICAgICAgICAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIocHJvcHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFNhbGRvSmFLYWliZUFuZG1paywge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZHVsZTogTU9EVUxFLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHByb3BzLmhpc3RvcnksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5pdERhdGE6IHByb3BzLmluaXREYXRhIH0pO1xuICAgICAgICAgICAgICAgICAgICB9IH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIHsgZXhhY3Q6IHRydWUsIHBhdGg6ICcvbGFwc2VkL3NlbnRfZG9jcycsXG4gICAgICAgICAgICAgICAgICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKHByb3BzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChTZW50RG9jc1JlcG9ydCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZHVsZTogTU9EVUxFLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHByb3BzLmhpc3RvcnksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5pdERhdGE6IHByb3BzLmluaXREYXRhIH0pO1xuICAgICAgICAgICAgICAgICAgICB9IH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIHsgZXhhY3Q6IHRydWUsIHBhdGg6ICcvbGFwc2VkL2NoaWxkX2FnZScsXG4gICAgICAgICAgICAgICAgICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKHByb3BzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChDaGlsZEFnZVJlcG9ydCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZHVsZTogTU9EVUxFLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHByb3BzLmhpc3RvcnksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5pdERhdGE6IF90aGlzMi5wcm9wcy5pbml0RGF0YSB9KTtcbiAgICAgICAgICAgICAgICAgICAgfSB9KSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlLCB7IGV4YWN0OiB0cnVlLCBwYXRoOiAnL2xhcHNlZC9zb29kdXN0dXNlZCcsXG4gICAgICAgICAgICAgICAgICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKHByb3BzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChTb29kdXN0dXNlZFJlcG9ydCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZHVsZTogTU9EVUxFLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHByb3BzLmhpc3RvcnksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5pdERhdGE6IHByb3BzLmluaXREYXRhIH0pO1xuICAgICAgICAgICAgICAgICAgICB9IH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIHsgZXhhY3Q6IHRydWUsIHBhdGg6ICcvbGFwc2VkL3N0YXRpc3Rpa2EnLFxuICAgICAgICAgICAgICAgICAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihwcm9wcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoU3RhdGlzdGlrYVJlcG9ydCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZHVsZTogTU9EVUxFLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHByb3BzLmhpc3RvcnksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5pdERhdGE6IF90aGlzMi5wcm9wcy5pbml0RGF0YSB9KTtcbiAgICAgICAgICAgICAgICAgICAgfSB9KSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlLCB7IGV4YWN0OiB0cnVlLCBwYXRoOiAnL2xhcHNlZC9lYmF0b2VuYW9saXNlZCcsXG4gICAgICAgICAgICAgICAgICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKHByb3BzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChFYmF0b2VuYW9saXNlZFJlcG9ydCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZHVsZTogTU9EVUxFLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHByb3BzLmhpc3RvcnksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5pdERhdGE6IHByb3BzLmluaXREYXRhIH0pO1xuICAgICAgICAgICAgICAgICAgICB9IH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIHsgZXhhY3Q6IHRydWUsIHBhdGg6ICcvbGFwc2VkL2tvbmRhcnZlJyxcbiAgICAgICAgICAgICAgICAgICAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIocHJvcHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KEtvbmRBcnZlUmVwb3J0LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kdWxlOiBNT0RVTEUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGlzdG9yeTogcHJvcHMuaGlzdG9yeSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbml0RGF0YTogcHJvcHMuaW5pdERhdGEgfSk7XG4gICAgICAgICAgICAgICAgICAgIH0gfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgeyBleGFjdDogdHJ1ZSwgcGF0aDogJy9sYXBzZWQvYWFzdGFfbmFpdGFqYWQnLFxuICAgICAgICAgICAgICAgICAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihwcm9wcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQWFzdGFOYWl0YWphZFJlcG9ydCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZHVsZTogTU9EVUxFLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHByb3BzLmhpc3RvcnksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5pdERhdGE6IHByb3BzLmluaXREYXRhIH0pO1xuICAgICAgICAgICAgICAgICAgICB9IH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIHsgZXhhY3Q6IHRydWUsIHBhdGg6ICcvbGFwc2VkL2t1dV90YWFiZWwnLFxuICAgICAgICAgICAgICAgICAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihwcm9wcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoS3V1VGFhYmVsLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kdWxlOiBNT0RVTEUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGlzdG9yeTogcHJvcHMuaGlzdG9yeSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbml0RGF0YTogX3RoaXMyLnByb3BzLmluaXREYXRhIH0pO1xuICAgICAgICAgICAgICAgICAgICB9IH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIHsgZXhhY3Q6IHRydWUsIHBhdGg6ICcvbGFwc2VkL3lrc3VzZV90YWFiZWwnLFxuICAgICAgICAgICAgICAgICAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihwcm9wcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoWWtzdXNlVGFhYmVsLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kdWxlOiBNT0RVTEUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGlzdG9yeTogcHJvcHMuaGlzdG9yeSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbml0RGF0YTogX3RoaXMyLnByb3BzLmluaXREYXRhIH0pO1xuICAgICAgICAgICAgICAgICAgICB9IH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIHsgZXhhY3Q6IHRydWUsIHBhdGg6ICcvbGFwc2VkL2tvaGFsb2xla3VfYXJ1YW5uZScsXG4gICAgICAgICAgICAgICAgICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKHByb3BzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChLb2hhbG9sZWt1QXJ1YW5uZSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZHVsZTogTU9EVUxFLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHByb3BzLmhpc3RvcnksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5pdERhdGE6IHByb3BzLmluaXREYXRhIH0pO1xuICAgICAgICAgICAgICAgICAgICB9IH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIHsgZXhhY3Q6IHRydWUsIHBhdGg6ICcvbGFwc2VkL3RvcGVsdG1ha3N1ZCcsXG4gICAgICAgICAgICAgICAgICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKHByb3BzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChUb3BlbHRtYWtzdWQsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2R1bGU6IE1PRFVMRSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoaXN0b3J5OiBwcm9wcy5oaXN0b3J5LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluaXREYXRhOiBwcm9wcy5pbml0RGF0YSB9KTtcbiAgICAgICAgICAgICAgICAgICAgfSB9KSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlLCB7IGV4YWN0OiB0cnVlLCBwYXRoOiAnL2xhcHNlZC9rdXV0YWJlbGlfYXJ1YW5uZScsXG4gICAgICAgICAgICAgICAgICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKHByb3BzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChLdXV0YWJlbGlfYXJ1YW5uZSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZHVsZTogTU9EVUxFLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHByb3BzLmhpc3RvcnksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5pdERhdGE6IHByb3BzLmluaXREYXRhIH0pO1xuICAgICAgICAgICAgICAgICAgICB9IH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIHsgZXhhY3Q6IHRydWUsIHBhdGg6ICcvbGFwc2VkL2FzdXR1c2VfbGlpaycsXG4gICAgICAgICAgICAgICAgICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKHByb3BzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChBc3V0dXNlTGlpa1JlZ2lzdGVyLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kdWxlOiBNT0RVTEUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGlzdG9yeTogcHJvcHMuaGlzdG9yeSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbml0RGF0YTogcHJvcHMuaW5pdERhdGEgfSk7XG4gICAgICAgICAgICAgICAgICAgIH0gfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgeyBleGFjdDogdHJ1ZSwgcGF0aDogJy9sYXBzZWQvYXN1dHVzZV9saWlrLzpkb2NJZCcsXG4gICAgICAgICAgICAgICAgICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKHByb3BzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChBc3V0dXNlTGlpa0RvY3VtZW50LCBfZXh0ZW5kcyh7fSwgcHJvcHMsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2R1bGU6IE1PRFVMRSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoaXN0b3J5OiBwcm9wcy5oaXN0b3J5XG4gICAgICAgICAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICAgICAgICAgIH0gfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgeyBleGFjdDogdHJ1ZSwgcGF0aDogJy9sYXBzZWQva29vbGl0dXNlX3R5eXAnLFxuICAgICAgICAgICAgICAgICAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihwcm9wcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoS29vbGl0dXNlVHl5cFJlZ2lzdGVyLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kdWxlOiBNT0RVTEUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGlzdG9yeTogcHJvcHMuaGlzdG9yeSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbml0RGF0YTogcHJvcHMuaW5pdERhdGEgfSk7XG4gICAgICAgICAgICAgICAgICAgIH0gfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgeyBleGFjdDogdHJ1ZSwgcGF0aDogJy9sYXBzZWQva29vbGl0dXNlX3R5eXAvOmRvY0lkJyxcbiAgICAgICAgICAgICAgICAgICAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIocHJvcHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KEtvb2xpdHVzZVR5eXBEb2N1bWVudCwgX2V4dGVuZHMoe30sIHByb3BzLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kdWxlOiBNT0RVTEUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGlzdG9yeTogcHJvcHMuaGlzdG9yeVxuICAgICAgICAgICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgICAgICAgICB9IH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIHsgZXhhY3Q6IHRydWUsIHBhdGg6ICcvbGFwc2VkL2tvb2xpdHVzZV9saWlrJyxcbiAgICAgICAgICAgICAgICAgICAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIocHJvcHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KEtvb2xpdHVzZUxpaWtSZWdpc3Rlciwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZHVsZTogTU9EVUxFLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHByb3BzLmhpc3RvcnksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5pdERhdGE6IHByb3BzLmluaXREYXRhIH0pO1xuICAgICAgICAgICAgICAgICAgICB9IH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIHsgZXhhY3Q6IHRydWUsIHBhdGg6ICcvbGFwc2VkL2tvb2xpdHVzZV9MaWlrLzpkb2NJZCcsXG4gICAgICAgICAgICAgICAgICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKHByb3BzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChLb29saXR1c2VMaWlrRG9jdW1lbnQsIF9leHRlbmRzKHt9LCBwcm9wcywge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZHVsZTogTU9EVUxFLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHByb3BzLmhpc3RvcnlcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgICAgICAgICAgfSB9KSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlLCB7IGV4YWN0OiB0cnVlLCBwYXRoOiAnL2xhcHNlZC92aWl0ZW5yLzpkb2NJZCcsXG4gICAgICAgICAgICAgICAgICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKHByb3BzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChWaWl0ZW5yRG9jdW1lbnQsIF9leHRlbmRzKHt9LCBwcm9wcywge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZHVsZTogTU9EVUxFLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHByb3BzLmhpc3RvcnlcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgICAgICAgICAgfSB9KVxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgIH0sIHtcbiAgICAgICAga2V5OiAncHJlcGFyZVBhcmFtc0ZvclRvb2xiYXInLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gcHJlcGFyZVBhcmFtc0ZvclRvb2xiYXIoKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGJ0blN0YXJ0OiB7XG4gICAgICAgICAgICAgICAgICAgIHNob3c6IHRydWVcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGJ0bkxvZ2luOiB7XG4gICAgICAgICAgICAgICAgICAgIHNob3c6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVkOiBmYWxzZVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgYnRuQWNjb3VudDoge1xuICAgICAgICAgICAgICAgICAgICBzaG93OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ3ByZXBhcmVDb21wb25lbnRzJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHByZXBhcmVDb21wb25lbnRzKGNvbXBvbmVudHMpIHtcbiAgICAgICAgICAgIHJldHVybiBjb21wb25lbnRzWydMYXBzZURvY3VtZW50J10gPSBmdW5jdGlvbiAocHJvcHMpIHtcbiAgICAgICAgICAgICAgICB2YXIgTGFwc2VEb2N1bWVudCA9IHJlcXVpcmUoJy4vLi4vZG9jcy9sYXBzL2RvY3VtZW50L2luZGV4LmpzeCcpO1xuICAgICAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KExhcHNlRG9jdW1lbnQsIHByb3BzKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICB9XSk7XG5cbiAgICByZXR1cm4gQXBwO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEFwcDtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2Zyb250ZW5kL21vZHVsZXMvbGFwc2VkLmpzeFxuLy8gbW9kdWxlIGlkID0gNDlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBEb2NDb250ZXh0ID0gcmVxdWlyZSgnLi4vLi4vLi4vZG9jLWNvbnRleHQnKTtcblxudmFyIFByb3BUeXBlcyA9IHJlcXVpcmUoJ3Byb3AtdHlwZXMnKTtcbnZhciBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG52YXIgX2ZldGNoRGF0YSA9IHJlcXVpcmUoJy4vLi4vLi4vLi4vLi4vbGlicy9mZXRjaERhdGEnKTtcbnZhciBjcmVhdGVFbXB0eUZpbHRlckRhdGEgPSByZXF1aXJlKCcuLy4uLy4uLy4uLy4uL2xpYnMvY3JlYXRlRW1wdHlGaWx0ZXJEYXRhJyk7XG52YXIgY29tcGFyZURhdGUgPSByZXF1aXJlKCcuLy4uLy4uLy4uLy4uL2xpYnMvY29tcGFyZURhdGVzJyk7XG5cbnZhciBEb2N1bWVudFRlbXBsYXRlID0gcmVxdWlyZSgnLi4vLi4vZG9jdW1lbnRUZW1wbGF0ZS9pbmRleC5qc3gnKSxcbiAgICBJbnB1dFRleHQgPSByZXF1aXJlKCcuLi8uLi8uLi9jb21wb25lbnRzL2lucHV0LXRleHQvaW5wdXQtdGV4dC5qc3gnKSxcbiAgICBUZXh0QXJlYSA9IHJlcXVpcmUoJy4uLy4uLy4uL2NvbXBvbmVudHMvdGV4dC1hcmVhL3RleHQtYXJlYS5qc3gnKSxcbiAgICBEYXRhR3JpZCA9IHJlcXVpcmUoJy4uLy4uLy4uL2NvbXBvbmVudHMvZGF0YS1ncmlkL2RhdGEtZ3JpZC5qc3gnKSxcbiAgICBJbnB1dERhdGUgPSByZXF1aXJlKCcuLi8uLi8uLi9jb21wb25lbnRzL2lucHV0LWRhdGUvaW5wdXQtZGF0ZS5qc3gnKSxcbiAgICBzdHlsZXMgPSByZXF1aXJlKCcuL2xhcHMuc3R5bGVzJyk7XG5cbnZhciBMSUJSQVJJRVMgPSBbeyBpZDogJ2xhcHNlX2dydXBwJywgZmlsdGVyOiAnJyB9XTtcblxudmFyIERPQ1MgPSBbJ0FSVicsICdTTUsnLCAnVk1LJywgJ0xBUFNFX1RBQUJFTCddO1xuXG52YXIgTGFwcyA9IGZ1bmN0aW9uIChfUmVhY3QkUHVyZUNvbXBvbmVudCkge1xuICAgIF9pbmhlcml0cyhMYXBzLCBfUmVhY3QkUHVyZUNvbXBvbmVudCk7XG5cbiAgICBmdW5jdGlvbiBMYXBzKHByb3BzKSB7XG4gICAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBMYXBzKTtcblxuICAgICAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoTGFwcy5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKExhcHMpKS5jYWxsKHRoaXMsIHByb3BzKSk7XG5cbiAgICAgICAgX3RoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBsb2FkZWREYXRhOiBmYWxzZSxcbiAgICAgICAgICAgIGRvY0lkOiBwcm9wcy5kb2NJZCA/IHByb3BzLmRvY0lkIDogTnVtYmVyKHByb3BzLm1hdGNoLnBhcmFtcy5kb2NJZCksXG4gICAgICAgICAgICB2YW5lbUlkOiBudWxsLFxuICAgICAgICAgICAgbW9kdWxlOiAnbGFwc2VkJyxcbiAgICAgICAgICAgIGtlaHRpdjogJzIwMTktMTItMzEnXG4gICAgICAgIH07XG5cbiAgICAgICAgX3RoaXMucmVuZGVyZXIgPSBfdGhpcy5yZW5kZXJlci5iaW5kKF90aGlzKTtcbiAgICAgICAgX3RoaXMuaGFuZGxlUGFnZUNsaWNrID0gX3RoaXMuaGFuZGxlUGFnZUNsaWNrLmJpbmQoX3RoaXMpO1xuICAgICAgICBfdGhpcy5oYW5kbGVHcmlkQnRuQ2xpY2sgPSBfdGhpcy5oYW5kbGVHcmlkQnRuQ2xpY2suYmluZChfdGhpcyk7XG4gICAgICAgIF90aGlzLmZldGNoRGF0YSA9IF90aGlzLmZldGNoRGF0YS5iaW5kKF90aGlzKTtcbiAgICAgICAgX3RoaXMuc2V0RmlsdGVyID0gX3RoaXMuc2V0RmlsdGVyLmJpbmQoX3RoaXMpO1xuICAgICAgICBfdGhpcy5oYW5kbGVJbnB1dENoYW5nZSA9IF90aGlzLmhhbmRsZUlucHV0Q2hhbmdlLmJpbmQoX3RoaXMpO1xuXG4gICAgICAgIF90aGlzLmRvY0lkID0gcHJvcHMuZG9jSWQgPyBwcm9wcy5kb2NJZCA6IE51bWJlcihwcm9wcy5tYXRjaC5wYXJhbXMuZG9jSWQpO1xuXG4gICAgICAgIF90aGlzLnBhZ2VzID0gW3sgcGFnZU5hbWU6ICdMYXBzZSBrYWFydCcsIGRvY1R5cGVJZDogJ0xBUFMnIH1dO1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuXG4gICAgX2NyZWF0ZUNsYXNzKExhcHMsIFt7XG4gICAgICAgIGtleTogJ2NvbXBvbmVudERpZE1vdW50JyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgICAgICAgaWYgKHRoaXMucHJvcHMuaGlzdG9yeSAmJiB0aGlzLnByb3BzLmhpc3RvcnkubG9jYXRpb24uc3RhdGUpIHtcbiAgICAgICAgICAgICAgICB2YXIgdmFuZW1JZCA9IHRoaXMucHJvcHMuaGlzdG9yeS5sb2NhdGlvbi5zdGF0ZS52YW5lbUlkO1xuICAgICAgICAgICAgICAgIHZhciBfbW9kdWxlID0gdGhpcy5wcm9wcy5oaXN0b3J5LmxvY2F0aW9uLnN0YXRlLm1vZHVsZSA/IHRoaXMucHJvcHMuaGlzdG9yeS5sb2NhdGlvbi5zdGF0ZS5tb2R1bGUgOiAnbGFwc2VkJztcbiAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHsgdmFuZW1JZDogdmFuZW1JZCwgbW9kdWxlOiBfbW9kdWxlIH0pO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvL9GB0L7RhdGA0LDQvdC40Lwg0L/QvtGB0LvQtdC00L3QuNC5IGRvY0lkXG4gICAgICAgICAgICBpZiAodGhpcy5zdGF0ZS5kb2NJZCkge1xuICAgICAgICAgICAgICAgIERvY0NvbnRleHQubGFwc0lkID0gdGhpcy5zdGF0ZS5kb2NJZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0sIHtcbiAgICAgICAga2V5OiAncmVuZGVyJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcblxuICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRG9jdW1lbnRUZW1wbGF0ZSwgeyBkb2NJZDogdGhpcy5zdGF0ZS5kb2NJZCxcbiAgICAgICAgICAgICAgICByZWY6ICdkb2N1bWVudCcsXG4gICAgICAgICAgICAgICAgaGlzdG9yeTogdGhpcy5wcm9wcy5oaXN0b3J5LFxuICAgICAgICAgICAgICAgIG1vZHVsZTogdGhpcy5zdGF0ZS5tb2R1bGUsXG4gICAgICAgICAgICAgICAgZG9jVHlwZUlkOiAnTEFQUycsXG4gICAgICAgICAgICAgICAgcmVsb2FkOiB0cnVlLFxuICAgICAgICAgICAgICAgIGluaXREYXRhOiB0aGlzLnByb3BzLmluaXREYXRhID8gdGhpcy5wcm9wcy5pbml0RGF0YSA6IHt9LFxuICAgICAgICAgICAgICAgIGxpYnM6IExJQlJBUklFUyxcbiAgICAgICAgICAgICAgICBwYWdlczogdGhpcy5wYWdlcyxcbiAgICAgICAgICAgICAgICByZW5kZXJlcjogdGhpcy5yZW5kZXJlcixcbiAgICAgICAgICAgICAgICBoYW5kbGVHcmlkQnRuQ2xpY2s6IHRoaXMuaGFuZGxlR3JpZEJ0bkNsaWNrLFxuICAgICAgICAgICAgICAgIGZvY3VzRWxlbWVudDogJ2lucHV0LWlzaWt1a29vZCdcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXHJcbiAgICAgICAgICrQktC10YDQvdC10YIg0LrQsNGB0YLQvtC80L3Ri9C1INC60L7QvNC/0L7QvdC10L3RgtGLINC00L7QutGD0LzQtdC90YLQsFxyXG4gICAgICAgICAqL1xuXG4gICAgfSwge1xuICAgICAgICBrZXk6ICdyZW5kZXJlcicsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXJlcihzZWxmKSB7XG4gICAgICAgICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgICAgICAgdmFyIGlzRWRpdE1vZGUgPSBzZWxmLnN0YXRlLmVkaXRlZCxcbiAgICAgICAgICAgICAgICBncmlkVmFuZW1hZERhdGEgPSBzZWxmLmRvY0RhdGEudmFuZW1hZCxcbiAgICAgICAgICAgICAgICBncmlkVmFuZW1hZENvbHVtbnMgPSBzZWxmLmRvY0RhdGEuZ3JpZENvbmZpZyxcbiAgICAgICAgICAgICAgICBncmlkVGVlbnVzdGVEYXRhID0gc2VsZi5kb2NEYXRhLnRlZW51c2VkLFxuICAgICAgICAgICAgICAgIGdyaWRUZWVudXN0ZUNvbHVtbnMgPSBzZWxmLmRvY0RhdGEuZ3JpZFRlZW51c3RlQ29uZmlnLFxuICAgICAgICAgICAgICAgIGdyaWRWaWl0ZW51bWJlcnNEYXRhID0gc2VsZi5kb2NEYXRhLnZpaXRlbnVtYmVycyxcbiAgICAgICAgICAgICAgICBncmlkVmlpdGVudW1iZXJzQ29sdW1ucyA9IHNlbGYuZG9jRGF0YS5ncmlkVmlpdGVudW1iZXJDb25maWc7XG5cbiAgICAgICAgICAgIHZhciBncmlkU29vZHVzdHVzdGVEYXRhID0gW107XG5cbiAgICAgICAgICAgIGlmIChzZWxmLmRvY0RhdGEuaWQgPT09IDApIHtcbiAgICAgICAgICAgICAgICAvL25lZXcgcmVjb3JkXG4gICAgICAgICAgICAgICAgc2VsZi5kb2NEYXRhLnZhbmVtaWQgPSB0aGlzLnN0YXRlLnZhbmVtSWQ7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vINC90LDQu9C+0LbQuNC8INGE0LjQu9GM0YLRgNGLXG4gICAgICAgICAgICAgICAgdGhpcy5zZXRGaWx0ZXIoc2VsZi5kb2NEYXRhLmlzaWt1a29vZCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICghdGhpcy5kb2NJZCAmJiBzZWxmLmRvY0RhdGEuaWQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmRvY0lkID0gc2VsZi5kb2NEYXRhLmlkO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyDQvdCw0LvQvtC20LjRgtGMINGE0LjQu9GM0YLRgCDQvdCwINC00LXQudGB0YLQstGD0Y7RidC40LUg0YPRgdC70YPQs9C4XG4gICAgICAgICAgICBpZiAoZ3JpZFRlZW51c3RlRGF0YSAmJiBncmlkVGVlbnVzdGVEYXRhLmxlbmd0aCkge1xuXG4gICAgICAgICAgICAgICAgLy8g0YTQuNC70YzRgtGA0YPQtdC8INC70YzQs9C+0YLRi1xuICAgICAgICAgICAgICAgIGdyaWRTb29kdXN0dXN0ZURhdGEgPSBncmlkVGVlbnVzdGVEYXRhLmZpbHRlcihmdW5jdGlvbiAocm93KSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBjb21wYXJlRGF0ZShyb3cubG9wcF9rcHYsIF90aGlzMi5zdGF0ZS5rZWh0aXYpICYmIHJvdy50eXlwICYmIHJvdy50eXlwID09PSAnU09PRFVTVFVTJztcbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIC8v0YPRgdC70YPQs9C4INCx0LXQtyDQu9GM0LPQvtGCXG4gICAgICAgICAgICAgICAgZ3JpZFRlZW51c3RlRGF0YSA9IGdyaWRUZWVudXN0ZURhdGEuZmlsdGVyKGZ1bmN0aW9uIChyb3cpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNvbXBhcmVEYXRlKHJvdy5sb3BwX2twdiwgX3RoaXMyLnN0YXRlLmtlaHRpdikgJiYgKCFyb3cudHl5cCB8fCByb3cudHl5cCA9PT0gJycpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvYyB9LFxuICAgICAgICAgICAgICAgIHNlbGYuZG9jRGF0YSAmJiBzZWxmLmRvY0RhdGEuaXNpa3Vrb29kICYmICFOdW1iZXIoc2VsZi5kb2NEYXRhLmFydmVsZHVzKSA/IFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jUm93IH0sXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy53YXJuaW5nIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAnUHV1ZHViIGFydmVzdHVzZSBlZXN0IHZhc3R1dGF2IGlzaWsgJ1xuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgKSA6IG51bGwsXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NSb3cgfSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY0NvbHVtbiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dFRleHQsIHsgcmVmOiAnaW5wdXQtaXNpa3Vrb29kJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ0lzaWt1a29vZDonLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdpc2lrdWtvb2QnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBzZWxmLmRvY0RhdGEuaXNpa3Vrb29kIHx8ICcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiAhaXNFZGl0TW9kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXhMZW5ndGg6ICcxMScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IHNlbGYuaGFuZGxlSW5wdXRDaGFuZ2UgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0VGV4dCwgeyB0aXRsZTogJ05pbWk6JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnbmltaScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHNlbGYuZG9jRGF0YS5uaW1pIHx8ICcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LW5pbWknLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiAhaXNFZGl0TW9kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXRUZXh0LCB7IHRpdGxlOiAnVmlpdGVudW1iZXI6JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAndmlpdGVudW1iZXInLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBzZWxmLmRvY0RhdGEudmlpdGVudW1iZXIgfHwgJycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQtdmlpdGVudW1iZXInLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc2FibGVkOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiBzZWxmLmhhbmRsZUlucHV0Q2hhbmdlIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dFRleHQsIHsgcmVmOiAnaW5wdXQtamFhaycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU6ICdKXFx4RTRcXHhFNGs6JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnamFhaycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHNlbGYuZG9jRGF0YS5qYWFrIHx8ICcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOiBzdHlsZXMuamFha1xuICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY0NvbHVtbiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jUm93IH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyByZWY6ICdsYWJlbCcgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ1ZhbmEgdmlpdGVudW1icmlkJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NSb3cgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KERhdGFHcmlkLCB7IHNvdXJjZTogJ3ZpaXRlbnVtYmVycycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdyaWREYXRhOiBncmlkVmlpdGVudW1iZXJzRGF0YSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ3JpZENvbHVtbnM6IGdyaWRWaWl0ZW51bWJlcnNDb2x1bW5zLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaG93VG9vbEJhcjogIWlzRWRpdE1vZGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhhbmRsZUdyaWRCdG5DbGljazogc2VsZi5oYW5kbGVHcmlkQnRuQ2xpY2ssXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiBpc0VkaXRNb2RlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLmdyaWQuaGVhZGVyVGFibGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY1R5cGVJZDogJ3ZpaXRlbnInLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6ICd2aWl0ZW5yLWRhdGEtZ3JpZCcgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NSb3cgfSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChUZXh0QXJlYSwgeyB0aXRsZTogJ01cXHhFNHJrdXNlZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnbXV1ZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICByZWY6ICd0ZXh0YXJlYS1tdXVkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiBzZWxmLmhhbmRsZUlucHV0Q2hhbmdlLFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHNlbGYuZG9jRGF0YS5tdXVkIHx8ICcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFpc0VkaXRNb2RlIH0pXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcy5kb2NSb3cgfSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgICAgICdsYWJlbCcsXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAnbGFiZWwnIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAnVmFuZW1hZCdcbiAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NSb3cgfSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChEYXRhR3JpZCwgeyBzb3VyY2U6ICd2YW5lbWFkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGdyaWREYXRhOiBncmlkVmFuZW1hZERhdGEsXG4gICAgICAgICAgICAgICAgICAgICAgICBncmlkQ29sdW1uczogZ3JpZFZhbmVtYWRDb2x1bW5zLFxuICAgICAgICAgICAgICAgICAgICAgICAgc2hvd1Rvb2xCYXI6ICFpc0VkaXRNb2RlLFxuICAgICAgICAgICAgICAgICAgICAgICAgaGFuZGxlR3JpZEJ0bkNsaWNrOiBzZWxmLmhhbmRsZUdyaWRCdG5DbGljayxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiBpc0VkaXRNb2RlLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcy5ncmlkLmhlYWRlclRhYmxlLFxuICAgICAgICAgICAgICAgICAgICAgICAgZG9jVHlwZUlkOiAndmFuZW0nLFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAndmFuZW1hZC1kYXRhLWdyaWQnIH0pXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY1JvdyB9LFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jQ29sdW1uIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICdsYWJlbCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeyByZWY6ICdsYWJlbCcgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnVGVlbnVzZWQnXG4gICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NDb2x1bW4gfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXREYXRlLCB7IHRpdGxlOiAnS2VodGl2IHNlaXN1Z2E6ICcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2tlaHRpdlNlaXN1Z2EnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiB0aGlzLnN0YXRlLmtlaHRpdixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC1rZWh0aXYnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZXM6IHN0eWxlcy5rZWh0aXZTZWlzdWdhLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiB0aGlzLmhhbmRsZUlucHV0Q2hhbmdlIH0pXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jUm93IH0sXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRGF0YUdyaWQsIHsgc291cmNlOiAndGVlbnVzZWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgZ3JpZERhdGE6IGdyaWRUZWVudXN0ZURhdGEsXG4gICAgICAgICAgICAgICAgICAgICAgICBncmlkQ29sdW1uczogZ3JpZFRlZW51c3RlQ29sdW1ucyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHNob3dUb29sQmFyOiAhaXNFZGl0TW9kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGhhbmRsZUdyaWRCdG5DbGljazogc2VsZi5oYW5kbGVHcmlkQnRuQ2xpY2ssXG4gICAgICAgICAgICAgICAgICAgICAgICBkb2NUeXBlSWQ6ICdsYXBzZV9rYWFydCcsXG4gICAgICAgICAgICAgICAgICAgICAgICByZWFkT25seTogIWlzRWRpdE1vZGUsXG4gICAgICAgICAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLmdyaWQuaGVhZGVyVGFibGUsXG4gICAgICAgICAgICAgICAgICAgICAgICByZWY6ICd0ZWVudXN0ZS1kYXRhLWdyaWQnIH0pXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY1JvdyB9LFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHsgcmVmOiAnbGFiZWwnIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAnTMO8aGlhamFsaXNlZCBzb29kdXN0dXNlZCAobWlpbnVzbcOkcmdpZ2EpJ1xuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY1JvdyB9LFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KERhdGFHcmlkLCB7IHNvdXJjZTogJ3Nvb2R1c3R1c2VkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGdyaWREYXRhOiBncmlkU29vZHVzdHVzdGVEYXRhLFxuICAgICAgICAgICAgICAgICAgICAgICAgZ3JpZENvbHVtbnM6IGdyaWRUZWVudXN0ZUNvbHVtbnMsXG4gICAgICAgICAgICAgICAgICAgICAgICBzaG93VG9vbEJhcjogIWlzRWRpdE1vZGUsXG4gICAgICAgICAgICAgICAgICAgICAgICBoYW5kbGVHcmlkQnRuQ2xpY2s6IHNlbGYuaGFuZGxlR3JpZEJ0bkNsaWNrLFxuICAgICAgICAgICAgICAgICAgICAgICAgZG9jVHlwZUlkOiAnbGFwc2Vfa2FhcnQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFpc0VkaXRNb2RlLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcy5ncmlkLmhlYWRlclRhYmxlLFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAnc29vZHVzdHVzZWQtZGF0YS1ncmlkJyB9KVxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cblxuICAgICAgICAvKipcclxuICAgICAgICAgKiDRg9GB0YLQsNC90L7QstC40Lwg0YTQuNC70YzRgtGAINC90LAg0LTQvtC60YPQvNC10L3RgtCwXHJcbiAgICAgICAgICovXG5cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ3NldEZpbHRlcicsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRGaWx0ZXIoaXNpa3Vrb29kKSB7XG5cbiAgICAgICAgICAgIC8vINC/0YDQvtCy0LXRgNC40Lwg0L3QsNC70LjRh9C40LUg0YTQuNC70YzRgtGA0LBcbiAgICAgICAgICAgIERPQ1MuZm9yRWFjaChmdW5jdGlvbiAoZG9jKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFEb2NDb250ZXh0LmZpbHRlcltkb2NdIHx8ICFEb2NDb250ZXh0LmZpbHRlcltkb2NdLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICAvLyDRgdC+0LfQtNCw0LXQvCDQv9GD0YHRgtC+0Lkg0YTQuNC70YzRgtGAINC00LvRjyDQt9Cw0LTQsNC90L3QvtCz0L4g0YLQuNC/0LBcbiAgICAgICAgICAgICAgICAgICAgRG9jQ29udGV4dC5maWx0ZXJbZG9jXSA9IGNyZWF0ZUVtcHR5RmlsdGVyRGF0YShEb2NDb250ZXh0LmdyaWRDb25maWdbZG9jXSwgW10sIGRvYyk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgLy8g0L3QsNC60LvQsNC00YvQstCw0LXQvCDRhNC40LvRjNGC0YBcbiAgICAgICAgICAgICAgICBEb2NDb250ZXh0LmZpbHRlcltkb2NdLmZvckVhY2goZnVuY3Rpb24gKHJvdykge1xuICAgICAgICAgICAgICAgICAgICBpZiAocm93LmlkID09ICdpc2lrdWtvb2QnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByb3cudmFsdWUgPSBpc2lrdWtvb2Q7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfSwge1xuICAgICAgICBrZXk6ICdoYW5kbGVQYWdlQ2xpY2snLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gaGFuZGxlUGFnZUNsaWNrKHBhZ2VEb2NUeXBlSWQpIHtcbiAgICAgICAgICAgIHZhciBfdGhpczMgPSB0aGlzO1xuXG4gICAgICAgICAgICAvLyDQtNCw0L3QvdGL0LUg0LTQu9GPINGE0LjQu9GM0YLRgNCwXG4gICAgICAgICAgICB2YXIgaXNpa3Vrb29kID0gdGhpcy5yZWZzWydkb2N1bWVudCddLmRvY0RhdGEuaXNpa3Vrb29kO1xuXG4gICAgICAgICAgICAvLyByZWdpc3RlciBuYW1lXG4gICAgICAgICAgICBpZiAoRG9jQ29udGV4dC5tZW51KSB7XG4gICAgICAgICAgICAgICAgdmFyIGRvY1R5cGUgPSBEb2NDb250ZXh0WydtZW51J10uZmluZChmdW5jdGlvbiAocm93KSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByb3cua29vZC50b1VwcGVyQ2FzZSgpID09PSBwYWdlRG9jVHlwZUlkLnRvVXBwZXJDYXNlKCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgaWYgKGRvY1R5cGUpIHtcbiAgICAgICAgICAgICAgICAgICAgRG9jQ29udGV4dC5wYWdlTmFtZSA9IGRvY1R5cGU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB2YXIgcGFnZSA9IHRoaXMucGFnZXMuZmluZChmdW5jdGlvbiAocm93KSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByb3cuZG9jVHlwZUlkID09IHBhZ2VEb2NUeXBlSWQ7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgaWYgKHBhZ2UgJiYgcGFnZS5wYWdlTmFtZSkge1xuICAgICAgICAgICAgICAgICAgICBEb2NDb250ZXh0LnBhZ2VOYW1lID0gcGFnZS5wYWdlTmFtZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vINC/0YDQvtCy0LXRgNC40Lwg0L3QsNC70LjRh9C40LUg0YTQuNC70YzRgtGA0LBcbiAgICAgICAgICAgIGlmICghRG9jQ29udGV4dC5maWx0ZXJbcGFnZURvY1R5cGVJZF0gfHwgIURvY0NvbnRleHQuZmlsdGVyW3BhZ2VEb2NUeXBlSWRdLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIC8vINGB0L7Qt9C00LDQtdC8INC/0YPRgdGC0L7QuSDRhNC40LvRjNGC0YAg0LTQu9GPINC30LDQtNCw0L3QvdC+0LPQviDRgtC40L/QsFxuICAgICAgICAgICAgICAgIERvY0NvbnRleHQuZmlsdGVyW3BhZ2VEb2NUeXBlSWRdID0gY3JlYXRlRW1wdHlGaWx0ZXJEYXRhKERvY0NvbnRleHQuZ3JpZENvbmZpZ1twYWdlRG9jVHlwZUlkXSwgW10sIHBhZ2VEb2NUeXBlSWQpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyDQvdCw0LrQu9Cw0LTRi9Cy0LDQtdC8INGE0LjQu9GM0YLRgFxuICAgICAgICAgICAgRG9jQ29udGV4dC5maWx0ZXJbcGFnZURvY1R5cGVJZF0uZm9yRWFjaChmdW5jdGlvbiAocm93KSB7XG4gICAgICAgICAgICAgICAgaWYgKHJvdy5pZCA9PSAnaXNpa3Vrb29kJykge1xuICAgICAgICAgICAgICAgICAgICByb3cudmFsdWUgPSBpc2lrdWtvb2Q7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHZhciByb3V0ZSA9ICcvbGFwc2VkLycgKyBwYWdlRG9jVHlwZUlkO1xuICAgICAgICAgICAgdGhpcy5wcm9wcy5oaXN0b3J5LnJlcGxhY2UoJy9yZWxvYWQnKTtcbiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIF90aGlzMy5wcm9wcy5oaXN0b3J5LnJlcGxhY2Uocm91dGUpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyDQvtCx0YDQsNCx0L7RgtGH0LjQuiDRgdC+0LHRi9GC0LjRjyDQutC70LjQuiDQvdCwINCz0YDQuNC00LUg0YDQvtC00LjRgtC10LvQtdC5XG5cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ2hhbmRsZUdyaWRCdG5DbGljaycsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBoYW5kbGVHcmlkQnRuQ2xpY2soYnRuTmFtZSwgYWN0aXZlUm93LCBpZCwgZG9jVHlwZUlkKSB7XG4gICAgICAgICAgICB2YXIgX3RoaXM0ID0gdGhpcztcblxuICAgICAgICAgICAgc3dpdGNoIChidG5OYW1lLnRvVXBwZXJDYXNlKCkpIHtcbiAgICAgICAgICAgICAgICBjYXNlIFwiRURJVFwiOlxuXG4gICAgICAgICAgICAgICAgICAgIHRoaXMucHJvcHMuaGlzdG9yeS5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhdGhuYW1lOiAnL2xhcHNlZC8nICsgZG9jVHlwZUlkICsgJy8nICsgaWQsXG4gICAgICAgICAgICAgICAgICAgICAgICBzdGF0ZTogeyBsYXBzSWQ6IHRoaXMuZG9jSWQsIG1vZHVsZTogdGhpcy5zdGF0ZS5tb2R1bGUgfVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSBcIk1VVURBXCI6XG5cbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wcm9wcy5oaXN0b3J5LnB1c2goe1xuICAgICAgICAgICAgICAgICAgICAgICAgcGF0aG5hbWU6ICcvbGFwc2VkLycgKyBkb2NUeXBlSWQgKyAnLycgKyBpZCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRlOiB7IGxhcHNJZDogdGhpcy5kb2NJZCwgbW9kdWxlOiB0aGlzLnN0YXRlLm1vZHVsZSB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgIGNhc2UgXCJBRERcIjpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wcm9wcy5oaXN0b3J5LnB1c2goe1xuICAgICAgICAgICAgICAgICAgICAgICAgcGF0aG5hbWU6ICcvbGFwc2VkLycgKyBkb2NUeXBlSWQgKyAnLzAnLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGU6IHsgbGFwc0lkOiB0aGlzLmRvY0lkLCBtb2R1bGU6IHRoaXMuc3RhdGUubW9kdWxlIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgXCJMSVNBXCI6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucHJvcHMuaGlzdG9yeS5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhdGhuYW1lOiAnL2xhcHNlZC8nICsgZG9jVHlwZUlkICsgJy8wJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRlOiB7IGxhcHNJZDogdGhpcy5kb2NJZCwgbW9kdWxlOiB0aGlzLnN0YXRlLm1vZHVsZSB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIFwiREVMRVRFXCI6XG4gICAgICAgICAgICAgICAgICAgIC8vc2VuZCBwb3N0IHRvIGRlbGV0ZSByb3dcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5mZXRjaERhdGEoZG9jVHlwZUlkLCBpZCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBpc1RydWUgPSByZXNwb25zZSAmJiByZXNwb25zZS5zdGF0dXMgJiYgcmVzcG9uc2Uuc3RhdHVzID09PSAyMDAgPyAnT2snIDogJ0Vycm9yJztcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBlcnJvck1lc3NhZ2UgPSAnVmlnYSc7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNUcnVlICYmIHJlc3BvbnNlLmRhdGEgJiYgcmVzcG9uc2UuZGF0YS5lcnJvcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGVycm9yXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNUcnVlID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3JNZXNzYWdlID0gcmVzcG9uc2UuZGF0YS5lcnJvcl9tZXNzYWdlO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIERvYyA9IF90aGlzNC5yZWZzWydkb2N1bWVudCddO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8g0L7QsdC90L7QstC40Lwg0YHQv9GA0LDQstC+0YfQvdC40LpcbiAgICAgICAgICAgICAgICAgICAgICAgIERvYy5sb2FkTGlicygndmFuZW0nKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzVHJ1ZSA9PT0gJ09rJykge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgRG9jLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVsb2FkRGF0YTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2FybmluZzogJ0tpcmkga3VzdHV0YXR1ZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdhcm5pbmdUeXBlOiAnb2snXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBjdXJyZW50ID0gX3RoaXM0LnByb3BzLmxvY2F0aW9uLnBhdGhuYW1lO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXM0LnByb3BzLmhpc3RvcnkucmVwbGFjZSgnL3JlbG9hZCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXM0LnByb3BzLmhpc3RvcnkucmVwbGFjZShjdXJyZW50KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCAyMDAwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgRG9jLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVsb2FkRGF0YTogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdhcm5pbmc6ICcnICsgZXJyb3JNZXNzYWdlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3YXJuaW5nVHlwZTogJ2Vycm9yJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSBcIktVU1RVVEFcIjpcbiAgICAgICAgICAgICAgICAgICAgLy9zZW5kIHBvc3QgdG8gZGVsZXRlIHJvd1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmZldGNoRGF0YShkb2NUeXBlSWQsIGlkKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGlzVHJ1ZSA9IHJlc3BvbnNlICYmIHJlc3BvbnNlLnN0YXR1cyAmJiByZXNwb25zZS5zdGF0dXMgPT09IDIwMCA/ICdPaycgOiAnRXJyb3InO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIERvYyA9IF90aGlzNC5yZWZzWydkb2N1bWVudCddO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzVHJ1ZSA9PT0gJ09rJykge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g0L7QsdC90L7QstC40Lwg0YHQv9GA0LDQstC+0YfQvdC40LpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBEb2MubG9hZExpYnMoJ3ZhbmVtJyk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDQuNC30LLQtdGJ0LXQvdC40LVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBEb2Muc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWxvYWREYXRhOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3YXJuaW5nOiAnS2lyaSBrdXN0dXRhdHVkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2FybmluZ1R5cGU6ICdvaydcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGVycm9yTWVzc2FnZSA9IHJlc3BvbnNlLmRhdGEgJiYgcmVzcG9uc2UuZGF0YS5lcnJvcl9tZXNzYWdlID8gcmVzcG9uc2UuZGF0YS5lcnJvcl9tZXNzYWdlIDogJ1ZpZ2EnO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIERvYy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbG9hZERhdGE6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3YXJuaW5nOiAnJyArIGVycm9yTWVzc2FnZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2FybmluZ1R5cGU6ICdlcnJvcidcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdWaWdhbmUgY2xpY2snLCBidG5OYW1lKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vINC+0YLQv9GA0LDQstC40YIg0LfQsNC/0YDQvtGBINC90LAg0YPQtNCw0LvQtdC90LjQtSDRgSDQv9Cw0YDQsNC80LXRgtGA0L7QvCDRgtC40L8g0LTQvtC60YPQvNC10L3RgtCwINC4INC40LRcblxuICAgIH0sIHtcbiAgICAgICAga2V5OiAnZmV0Y2hEYXRhJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGZldGNoRGF0YShkb2NUeXBlSWQsIGlkKSB7XG5cbiAgICAgICAgICAgIHZhciB1cmwgPSAnL25ld0FwaS9kZWxldGUnO1xuXG4gICAgICAgICAgICB2YXIgcGFyYW1zID0ge1xuICAgICAgICAgICAgICAgIHBhcmFtZXRlcjogZG9jVHlwZUlkLFxuICAgICAgICAgICAgICAgIG1vZHVsZTogJ2xhcHNlZCcsXG4gICAgICAgICAgICAgICAgdXNlcklkOiBEb2NDb250ZXh0LnVzZXJEYXRhLnVzZXJJZCxcbiAgICAgICAgICAgICAgICB1dWlkOiBEb2NDb250ZXh0LnVzZXJEYXRhLnV1aWQsXG4gICAgICAgICAgICAgICAgZG9jSWQ6IGlkXG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICByZXR1cm4gX2ZldGNoRGF0YVsnZmV0Y2hEYXRhUG9zdCddKHVybCwgcGFyYW1zKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqINC+0YLRgNCw0LHQvtGC0LDQtdGCINGE0LjQu9GM0YLRgCDQvdCwINC00LDQvdC90YvQtSDRg9GB0LvRg9CzXHJcbiAgICAgICAgICovXG5cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ2hhbmRsZUlucHV0Q2hhbmdlJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGhhbmRsZUlucHV0Q2hhbmdlKGlucHV0TmFtZSwgaW5wdXRWYWx1ZSkge1xuICAgICAgICAgICAgLy8g0L7QsdGA0LDQsdC+0YLRh9C40Log0LjQt9C80LXQvdC10L3QuNC5XG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHsga2VodGl2OiBpbnB1dFZhbHVlIH0pO1xuICAgICAgICB9XG4gICAgfV0pO1xuXG4gICAgcmV0dXJuIExhcHM7XG59KFJlYWN0LlB1cmVDb21wb25lbnQpO1xuXG5MYXBzLnByb3BUeXBlcyA9IHtcbiAgICBkb2NJZDogUHJvcFR5cGVzLm51bWJlcixcbiAgICBpbml0RGF0YTogUHJvcFR5cGVzLm9iamVjdCxcbiAgICB1c2VyRGF0YTogUHJvcFR5cGVzLm9iamVjdFxufTtcblxuTGFwcy5kZWZhdWx0UHJvcHMgPSB7XG4gICAgcGFyYW1zOiB7IGRvY0lkOiAwIH0sXG4gICAgaW5pdERhdGE6IHt9LFxuICAgIHVzZXJEYXRhOiB7fVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBMYXBzO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vZnJvbnRlbmQvZG9jcy9sYXBzL2RvY3VtZW50L2luZGV4LmpzeFxuLy8gbW9kdWxlIGlkID0gMjMxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIlwidXNlIHN0cmljdFwiO2Z1bmN0aW9uIGNvbXBhcmVEYXRlcyhkYXRlMSxkYXRlMil7dmFyIGtwdjE9bmV3IERhdGUoZGF0ZTEpO2twdjEuc2V0RGF0ZShrcHYxLmdldERhdGUoKSsxKTt2YXIga3B2Mj1uZXcgRGF0ZShkYXRlMik7aWYoa3B2MT49a3B2Mil7cmV0dXJuIHRydWU7fWVsc2V7cmV0dXJuIGZhbHNlO319bW9kdWxlLmV4cG9ydHM9Y29tcGFyZURhdGVzO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbGlicy9jb21wYXJlRGF0ZXMuanNcbi8vIG1vZHVsZSBpZCA9IDIzMlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7bW9kdWxlLmV4cG9ydHM9e2RvY1Jvdzp7ZGlzcGxheTonZmxleCcsZmxleERpcmVjdGlvbjoncm93Jy8qXHJcbiAgICAgICAgICAgICAgICBib3JkZXI6ICcxcHggc29saWQgYmx1ZSdcclxuICAgICAgICAqL30sd2FybmluZzp7YmFja2dyb3VuZENvbG9yOidsaWdodGNvcmFsJyx3aWR0aDonMTAwJScsdGV4dEFsaWduOidsZWZ0J30sZG9jQ29sdW1uOntkaXNwbGF5OidmbGV4JyxmbGV4RGlyZWN0aW9uOidjb2x1bW4nLC8qXHJcbiAgICAgICAgICAgICAgICBib3JkZXI6ICcxcHggc29saWQgeWVsbG93JyxcclxuICAgICAgICAqL3dpZHRoOic1MCUnfSxkb2M6e2Rpc3BsYXk6J2ZsZXgnLGZsZXhEaXJlY3Rpb246J2NvbHVtbicvKlxyXG4gICAgICAgICAgICAgICAgYm9yZGVyOiAnMXB4IHNvbGlkIGJyb3duJ1xyXG4gICAgICAgICovfSxncmlkOnttYWluVGFibGU6e3dpZHRoOicxMDAlJyx6SW5kZXg6Jy0xJ30saGVhZGVyVGFibGU6e3dpZHRoOicxMDAlJ30sZ3JpZENvbnRhaW5lcjp7d2lkdGg6JzEwMCUnfX0sZ3JpZFJvdzp7LypcclxuICAgICAgICAgICAgICAgIGJvcmRlcjogJzFweCBzb2xpZCBibGFjaycsXHJcbiAgICAgICAgKi9iYWNrZ3JvdW5kQ29sb3I6J3doaXRlJyxwb3NpdGlvbjoncmVsYXRpdmUnLG1hcmdpbjonMTAlIDMwJSAxMCUgMzAlJyx3aWR0aDonYXV0bycsb3BhY2l0eTonMScsdG9wOicxMDBweCd9LGtlaHRpdlNlaXN1Z2E6e3dpZHRoOidtaW4tY29udGVudCd9LGphYWs6e3dpZHRoOidtaW4tY29udGVudCcsbWFyZ2luOicwcHgnfX07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9mcm9udGVuZC9kb2NzL2xhcHMvZG9jdW1lbnQvbGFwcy5zdHlsZXMuanNcbi8vIG1vZHVsZSBpZCA9IDIzM1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbnZhciBEb2N1bWVudFJlZ2lzdGVyID0gcmVxdWlyZSgnLi8uLi9kb2N1bWVudHMvZG9jdW1lbnRzLmpzeCcpO1xudmFyIEJ0bkFydmVzdGEgPSByZXF1aXJlKCcuLy4uLy4uL2NvbXBvbmVudHMvYnV0dG9uLXJlZ2lzdGVyL2J1dHRvbi10YXNrL2luZGV4LmpzeCcpO1xudmFyIEJ1dHRvblVwbG9hZCA9IHJlcXVpcmUoJy4vLi4vLi4vY29tcG9uZW50cy91cGxvYWRfYnV0dG9uL2luZGV4LmpzeCcpO1xudmFyIElucHV0VGV4dCA9IHJlcXVpcmUoJy4uLy4uL2NvbXBvbmVudHMvaW5wdXQtdGV4dC9pbnB1dC10ZXh0LmpzeCcpO1xuXG52YXIgVG9vbGJhckNvbnRhaW5lciA9IHJlcXVpcmUoJy4vLi4vLi4vY29tcG9uZW50cy90b29sYmFyLWNvbnRhaW5lci90b29sYmFyLWNvbnRhaW5lci5qc3gnKTtcbnZhciBNb2RhbFJlcG9ydCA9IHJlcXVpcmUoJy4vLi4vLi4vY29tcG9uZW50cy9tb2RhbHBhZ2UvbW9kYWxwYWdlLXJlcG9ydC9pbmRleC5qc3gnKTtcblxudmFyIHN0eWxlcyA9IHJlcXVpcmUoJy4vbGFwcy1yZWdpc3Rlci1zdHlsZXMnKTtcblxudmFyIERPQ19UWVBFX0lEID0gJ0xBUFMnO1xudmFyIEVWRU5UUyA9IHJlcXVpcmUoJy4vLi4vLi4vLi4vY29uZmlnL2NvbnN0YW50cycpLmV2ZW50c1tET0NfVFlQRV9JRF07XG5cbnZhciBEb2NSaWdodHMgPSByZXF1aXJlKCcuLy4uLy4uLy4uL2NvbmZpZy9kb2NfcmlnaHRzJyk7XG52YXIgY2hlY2tSaWdodHMgPSByZXF1aXJlKCcuLy4uLy4uLy4uL2xpYnMvY2hlY2tSaWdodHMnKTtcbnZhciBEb2NDb250ZXh0ID0gcmVxdWlyZSgnLi8uLi8uLi9kb2MtY29udGV4dC5qcycpO1xuXG4vKipcclxuICog0JrQu9Cw0YHRgSDRgNC10LDQu9C40LfRg9C10YIg0LTQvtC60YPQvNC10L3RgiDRgdC/0YDQsNCy0L7Rh9C90LjQutCwINC/0YDQuNC30L3QsNC60L7Qsi5cclxuICovXG5cbnZhciBEb2N1bWVudHMgPSBmdW5jdGlvbiAoX1JlYWN0JFB1cmVDb21wb25lbnQpIHtcbiAgICBfaW5oZXJpdHMoRG9jdW1lbnRzLCBfUmVhY3QkUHVyZUNvbXBvbmVudCk7XG5cbiAgICBmdW5jdGlvbiBEb2N1bWVudHMocHJvcHMpIHtcbiAgICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIERvY3VtZW50cyk7XG5cbiAgICAgICAgdmFyIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKERvY3VtZW50cy5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKERvY3VtZW50cykpLmNhbGwodGhpcywgcHJvcHMpKTtcblxuICAgICAgICB2YXIgdG9kYXkgPSBuZXcgRGF0ZSgpO1xuXG4gICAgICAgIF90aGlzLm9uQ2xpY2tIYW5kbGVyID0gX3RoaXMub25DbGlja0hhbmRsZXIuYmluZChfdGhpcyk7XG4gICAgICAgIF90aGlzLmhhbmRsZUNsaWNrID0gX3RoaXMuaGFuZGxlQ2xpY2suYmluZChfdGhpcyk7XG4gICAgICAgIF90aGlzLnJlbmRlcmVyID0gX3RoaXMucmVuZGVyZXIuYmluZChfdGhpcyk7XG4gICAgICAgIF90aGlzLm1vZGFsUmVwb3J0ZVBhZ2VCdG5DbGljayA9IF90aGlzLm1vZGFsUmVwb3J0ZVBhZ2VCdG5DbGljay5iaW5kKF90aGlzKTtcblxuICAgICAgICBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIHJlYWQ6IDAsXG4gICAgICAgICAgICBmaWx0cmlfcmVhZDogMCxcbiAgICAgICAgICAgIGlzUmVwb3J0OiBmYWxzZSxcbiAgICAgICAgICAgIHR4dFJlcG9ydDogW10sXG4gICAgICAgICAgICBrZWh0aXZ1czogdG9kYXlcbiAgICAgICAgfTtcblxuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuXG4gICAgX2NyZWF0ZUNsYXNzKERvY3VtZW50cywgW3tcbiAgICAgICAga2V5OiAncmVuZGVyJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgIG51bGwsXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChEb2N1bWVudFJlZ2lzdGVyLCB7IGluaXREYXRhOiB0aGlzLnByb3BzLmluaXREYXRhLFxuICAgICAgICAgICAgICAgICAgICBoaXN0b3J5OiB0aGlzLnByb3BzLmhpc3RvcnkgPyB0aGlzLnByb3BzLmhpc3RvcnkgOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb2R1bGU6IHRoaXMucHJvcHMubW9kdWxlLFxuICAgICAgICAgICAgICAgICAgICByZWY6ICdyZWdpc3RlcicsXG4gICAgICAgICAgICAgICAgICAgIGRvY1R5cGVJZDogRE9DX1RZUEVfSUQsXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlOiBzdHlsZXMsXG4gICAgICAgICAgICAgICAgICAgIHJlbmRlcjogdGhpcy5yZW5kZXJlciB9KSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0VGV4dCwgeyB0aXRsZTogJ0ZpbHRyaSBhbGwgLyByZWFkIGtva2t1OicsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdyZWFkX2tva2t1JyxcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcy50b3RhbCxcbiAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQtcmVhZCcsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBTdHJpbmcodGhpcy5zdGF0ZS5maWx0cmlfcmVhZCArICcvJyArIHRoaXMuc3RhdGUucmVhZCksXG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVkOiB0cnVlIH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTW9kYWxSZXBvcnQsIHtcbiAgICAgICAgICAgICAgICAgICAgc2hvdzogdGhpcy5zdGF0ZS5pc1JlcG9ydCxcbiAgICAgICAgICAgICAgICAgICAgcmVwb3J0OiB0aGlzLnN0YXRlLnR4dFJlcG9ydCxcbiAgICAgICAgICAgICAgICAgICAgbW9kYWxQYWdlQnRuQ2xpY2s6IHRoaXMubW9kYWxSZXBvcnRlUGFnZUJ0bkNsaWNrIH0pXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgfSwge1xuICAgICAgICBrZXk6ICdyZW5kZXJlcicsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXJlcihzZWxmKSB7XG4gICAgICAgICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgICAgICAgaWYgKCFzZWxmKSB7XG4gICAgICAgICAgICAgICAgLy8g0L3QtSDQuNC90LjRhtC40LDQu9C40LfQuNGA0L7QstCw0L3QvlxuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB2YXIgZG9jUmlnaHRzID0gRG9jUmlnaHRzW0RPQ19UWVBFX0lEXSA/IERvY1JpZ2h0c1tET0NfVFlQRV9JRF0gOiBbXTtcbiAgICAgICAgICAgIHZhciB1c2VyUm9sZXMgPSBEb2NDb250ZXh0LnVzZXJEYXRhID8gRG9jQ29udGV4dC51c2VyRGF0YS5yb2xlcyA6IFtdO1xuXG4gICAgICAgICAgICB2YXIgZXZlbnRzID0gRVZFTlRTLmZpbHRlcihmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAvLyDRgtC+0LvRjNC60L4g0LTQvtGB0YLRg9C/0L3Ri9C1INGC0LDRgdC60Lgg0LTQvtC70LbQvdGLINC/0L7Qv9Cw0YHRgtGMINCyINGB0L/QuNGB0L7QulxuICAgICAgICAgICAgICAgIHZhciBrYXNfbHViYXR1ZCA9IGNoZWNrUmlnaHRzKHVzZXJSb2xlcywgZG9jUmlnaHRzLCBldmVudC5tZXRob2QpO1xuICAgICAgICAgICAgICAgIHJldHVybiBrYXNfbHViYXR1ZDtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBpZiAoc2VsZi5ncmlkRGF0YSkge1xuICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgICAgICByZWFkOiBzZWxmLmdyaWREYXRhICYmIHNlbGYuZ3JpZERhdGEubGVuZ3RoICYmIHNlbGYuZ3JpZERhdGFbMF0ucm93c190b3RhbCA/IHNlbGYuZ3JpZERhdGFbMF0ucm93c190b3RhbCA6IHRoaXMuc3RhdGUucmVhZCxcbiAgICAgICAgICAgICAgICAgICAgZmlsdHJpX3JlYWQ6IHNlbGYuZ3JpZERhdGEgJiYgc2VsZi5ncmlkRGF0YS5sZW5ndGggJiYgc2VsZi5ncmlkRGF0YVswXS5maWx0ZXJfdG90YWwgPyBzZWxmLmdyaWREYXRhWzBdLmZpbHRlcl90b3RhbCA6IDBcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgVG9vbGJhckNvbnRhaW5lcixcbiAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgIGNoZWNrUmlnaHRzKHVzZXJSb2xlcywgZG9jUmlnaHRzLCAnYXJ2ZXN0YVRhYWJlbCcpID8gZXZlbnRzLm1hcChmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnRuQXJ2ZXN0YSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGV2ZW50Lm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrOiBfdGhpczIub25DbGlja0hhbmRsZXIsXG4gICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdidG4tJyArIGV2ZW50Lm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBrZXk6ICdrZXktJyArIGV2ZW50Lm5hbWVcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSkgOiBudWxsLFxuICAgICAgICAgICAgICAgIGNoZWNrUmlnaHRzKHVzZXJSb2xlcywgZG9jUmlnaHRzLCAnaW1wb3J0TGFwc2VkJykgPyBSZWFjdC5jcmVhdGVFbGVtZW50KEJ1dHRvblVwbG9hZCwge1xuICAgICAgICAgICAgICAgICAgICByZWY6ICdidG5VcGxvYWQnLFxuICAgICAgICAgICAgICAgICAgICBkb2NUeXBlSWQ6IERPQ19UWVBFX0lELFxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrOiB0aGlzLmhhbmRsZUNsaWNrLFxuICAgICAgICAgICAgICAgICAgICBzaG93OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogJ0ltcG9ydCBsYXBzZWQnLFxuICAgICAgICAgICAgICAgICAgICBtaW1lVHlwZXM6ICcuY3N2J1xuICAgICAgICAgICAgICAgIH0pIDogbnVsbCxcbiAgICAgICAgICAgICAgICBjaGVja1JpZ2h0cyh1c2VyUm9sZXMsIGRvY1JpZ2h0cywgJ2ltcG9ydFZpaXRlbnInKSA/IFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnV0dG9uVXBsb2FkLCB7XG4gICAgICAgICAgICAgICAgICAgIHJlZjogJ2J0blVwbG9hZCcsXG4gICAgICAgICAgICAgICAgICAgIGRvY1R5cGVJZDogJ1ZJSVRFTlInLFxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrOiB0aGlzLmhhbmRsZUNsaWNrLFxuICAgICAgICAgICAgICAgICAgICBzaG93OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogJ0ltcG9ydCB2aWl0ZW51bWJyaWQnLFxuICAgICAgICAgICAgICAgICAgICBtaW1lVHlwZXM6ICcuY3N2J1xuICAgICAgICAgICAgICAgIH0pIDogbnVsbFxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgIH0sIHtcbiAgICAgICAga2V5OiAnb25DbGlja0hhbmRsZXInLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gb25DbGlja0hhbmRsZXIoZXZlbnQsIHNlaXN1Z2EpIHtcbiAgICAgICAgICAgIHZhciBfdGhpczMgPSB0aGlzO1xuXG4gICAgICAgICAgICB2YXIgRG9jID0gdGhpcy5yZWZzWydyZWdpc3RlciddO1xuXG4gICAgICAgICAgICAvLyDRgdC+0LHQuNGA0LDQtdC8INC/0LDRgNCw0LzQtdGC0YDRi1xuICAgICAgICAgICAgdmFyIGlkcyA9IFtdO1xuICAgICAgICAgICAgRG9jLmdyaWREYXRhLmZpbHRlcihmdW5jdGlvbiAocm93KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJvdy5zZWxlY3Q7XG4gICAgICAgICAgICB9KS5mb3JFYWNoKGZ1bmN0aW9uIChyb3cpIHtcbiAgICAgICAgICAgICAgICBpZHMucHVzaChyb3cuaWQpO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHZhciB0YXNrID0gRVZFTlRTLmZpbmQoZnVuY3Rpb24gKHRhc2spIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGFzay5uYW1lID09PSBldmVudDtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgaWYgKCF0YXNrKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIERvYy5zZXRTdGF0ZSh7IHdhcm5pbmc6ICdUYXNrOiAnICsgZXZlbnQgKyAnIGVpIGxlaWRudWQnLCB3YXJuaW5nVHlwZTogJ2Vycm9yJyB9KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8g0L7RgtC/0YDQsNCy0LvRj9C10Lwg0LfQsNC/0YDQvtGBINC90LAg0LLRi9C/0L7Qu9C90LXQvdC40LVcbiAgICAgICAgICAgIHZhciBtZXNzYWdlID0gJ3ZcXHhGNWliIG9sbGEgc2VsbGVzIHBlcmlvb2RpbCBrXFx4RjVpayBhcnZlZCBqdWJhIHZcXHhFNGxqYXN0YXR1ZCc7XG4gICAgICAgICAgICBEb2MuZmV0Y2hEYXRhKCdjYWxjLycgKyB0YXNrLm1ldGhvZCwgeyBkb2NzOiBpZHMsIHNlaXN1Z2E6IHNlaXN1Z2EgfSkudGhlbihmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgICAgIGlmIChkYXRhLnJlc3VsdCkge1xuICAgICAgICAgICAgICAgICAgICBtZXNzYWdlID0gJ3Rhc2sgc2FhZGV0dWQgdFxceEU0aXRtaXNlbGUnO1xuICAgICAgICAgICAgICAgICAgICBEb2Muc2V0U3RhdGUoeyB3YXJuaW5nOiAnJyArIG1lc3NhZ2UsIHdhcm5pbmdUeXBlOiAnb2snIH0pO1xuXG4gICAgICAgICAgICAgICAgICAgIHZhciB0dWxlbXVzZWQgPSBkYXRhLmRhdGEucmVzdWx0LnR1bGVtdXNlZDtcbiAgICAgICAgICAgICAgICAgICAgLy8g0L7RgtC60YDRi9Cy0LDQtdC8INC+0YLRh9C10YJcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMzLnNldFN0YXRlKHsgaXNSZXBvcnQ6IHRydWUsIHR4dFJlcG9ydDogdHVsZW11c2VkIH0pO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChkYXRhLmVycm9yX21lc3NhZ2UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIERvYy5zZXRTdGF0ZSh7IHdhcm5pbmc6ICdUZWtraXMgdmlnYTogJyArIGRhdGEuZXJyb3JfbWVzc2FnZSwgd2FybmluZ1R5cGU6ICdlcnJvcicgfSk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBEb2Muc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdhcm5pbmc6ICdLb2trdSBhcnZlc3RhdHVkIDogJyArIGRhdGEucmVzdWx0ICsgJywgJyArIG1lc3NhZ2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2FybmluZ1R5cGU6ICdub3RWYWxpZCdcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICAvKipcclxuICAgICAgICAgKiDQutCw0YHRgtC+0LzQvdGL0Lkg0L7QsdGA0LDQsdC+0YLRh9C40Log0YHQvtCx0YvRgtC40Y8g0LrQu9C40Log0L3QsCDQutC90L7Qv9C60YMg0LjQvNC/0L7RgNGC0LBcclxuICAgICAgICAgKi9cblxuICAgIH0sIHtcbiAgICAgICAga2V5OiAnaGFuZGxlQ2xpY2snLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gaGFuZGxlQ2xpY2socmVzdWx0KSB7XG5cbiAgICAgICAgICAgIC8v0L7QsdC90L7QstC40Lwg0LTQsNC90L3Ri9C1XG4gICAgICAgICAgICB2YXIgRG9jID0gdGhpcy5yZWZzWydyZWdpc3RlciddO1xuICAgICAgICAgICAgaWYgKCFEb2MpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChyZXN1bHQpIHtcbiAgICAgICAgICAgICAgICBEb2Muc2V0U3RhdGUoeyB3YXJuaW5nOiAnRWR1a2FsdDogICcgKyByZXN1bHQgKyAnOiAnLCB3YXJuaW5nVHlwZTogJ29rJyB9KTtcbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgRG9jLmZldGNoRGF0YSgnc2VsZWN0RG9jcycpO1xuICAgICAgICAgICAgICAgIH0sIDEwMDAwKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqINGD0LHQtdGA0LXRgiDQvtC60L3QviDRgSDQvtGC0YfQtdGC0L7QvFxyXG4gICAgICAgICAqL1xuXG4gICAgfSwge1xuICAgICAgICBrZXk6ICdtb2RhbFJlcG9ydGVQYWdlQnRuQ2xpY2snLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gbW9kYWxSZXBvcnRlUGFnZUJ0bkNsaWNrKGV2ZW50KSB7XG4gICAgICAgICAgICB2YXIgaXNSZXBvcnQgPSBldmVudCAmJiBldmVudCA9PSAnT2snID8gZmFsc2UgOiB0cnVlO1xuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IGlzUmVwb3J0OiBpc1JlcG9ydCB9KTtcbiAgICAgICAgfVxuICAgIH1dKTtcblxuICAgIHJldHVybiBEb2N1bWVudHM7XG59KFJlYWN0LlB1cmVDb21wb25lbnQpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IERvY3VtZW50cztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2Zyb250ZW5kL2RvY3MvbGFwcy9pbmRleC5qc3hcbi8vIG1vZHVsZSBpZCA9IDIzNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7bW9kdWxlLmV4cG9ydHM9e2dyaWQ6e21haW5UYWJsZTp7d2lkdGg6JzEwMCUnLHRkOntib3JkZXI6JzFweCBzb2xpZCBsaWdodEdyZXknLGRpc3BsYXk6J3RhYmxlLWNlbGwnLHBhZGRpbmdMZWZ0Oic1cHgnfSxwb3NpdGlvbjonaW5pdGlhbCd9LGhlYWRlclRhYmxlOnt3aWR0aDonMTAwJSd9LGdyaWRDb250YWluZXI6e3dpZHRoOicxMDAlJ319LHRvdGFsOnt3aWR0aDonYXV0byd9fTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2Zyb250ZW5kL2RvY3MvbGFwcy9sYXBzLXJlZ2lzdGVyLXN0eWxlcy5qc1xuLy8gbW9kdWxlIGlkID0gMjQ3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xudmFyIERvY3VtZW50UmVnaXN0ZXIgPSByZXF1aXJlKCcuLy4uL2RvY3VtZW50cy9kb2N1bWVudHMuanN4Jyk7XG52YXIgQnRuVGFzayA9IHJlcXVpcmUoJy4vLi4vLi4vY29tcG9uZW50cy9idXR0b24tcmVnaXN0ZXIvYnV0dG9uLXRhc2svaW5kZXguanN4Jyk7XG5cbnZhciBUb29sYmFyQ29udGFpbmVyID0gcmVxdWlyZSgnLi8uLi8uLi9jb21wb25lbnRzL3Rvb2xiYXItY29udGFpbmVyL3Rvb2xiYXItY29udGFpbmVyLmpzeCcpO1xudmFyIEJ1dHRvblVwbG9hZCA9IHJlcXVpcmUoJy4vLi4vLi4vY29tcG9uZW50cy91cGxvYWRfYnV0dG9uL2luZGV4LmpzeCcpO1xudmFyIElucHV0VGV4dCA9IHJlcXVpcmUoJy4uLy4uL2NvbXBvbmVudHMvaW5wdXQtdGV4dC9pbnB1dC10ZXh0LmpzeCcpO1xuXG52YXIgc3R5bGVzID0gcmVxdWlyZSgnLi9zdHlsZXMnKTtcbnZhciBET0NfVFlQRV9JRCA9ICdMQVBTRV9LQUFSVCc7XG5cbnZhciBEb2NSaWdodHMgPSByZXF1aXJlKCcuLy4uLy4uLy4uL2NvbmZpZy9kb2NfcmlnaHRzJyk7XG52YXIgY2hlY2tSaWdodHMgPSByZXF1aXJlKCcuLy4uLy4uLy4uL2xpYnMvY2hlY2tSaWdodHMnKTtcbnZhciBEb2NDb250ZXh0ID0gcmVxdWlyZSgnLi8uLi8uLi9kb2MtY29udGV4dC5qcycpO1xuXG52YXIgZG9jUmlnaHRzID0gRG9jUmlnaHRzW0RPQ19UWVBFX0lEXSA/IERvY1JpZ2h0c1tET0NfVFlQRV9JRF0gOiBbXTtcblxuLyoqXHJcbiAqINCa0LvQsNGB0YEg0YDQtdCw0LvQuNC30YPQtdGCINC00L7QutGD0LzQtdC90YIg0YHQv9GA0LDQstC+0YfQvdC40LrQsCDQv9GA0LjQt9C90LDQutC+0LIuXHJcbiAqL1xuXG52YXIgRG9jdW1lbnRzID0gZnVuY3Rpb24gKF9SZWFjdCRQdXJlQ29tcG9uZW50KSB7XG4gICAgX2luaGVyaXRzKERvY3VtZW50cywgX1JlYWN0JFB1cmVDb21wb25lbnQpO1xuXG4gICAgZnVuY3Rpb24gRG9jdW1lbnRzKHByb3BzKSB7XG4gICAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBEb2N1bWVudHMpO1xuXG4gICAgICAgIHZhciBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChEb2N1bWVudHMuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihEb2N1bWVudHMpKS5jYWxsKHRoaXMsIHByb3BzKSk7XG5cbiAgICAgICAgX3RoaXMub25DbGlja0hhbmRsZXIgPSBfdGhpcy5vbkNsaWNrSGFuZGxlci5iaW5kKF90aGlzKTtcbiAgICAgICAgX3RoaXMub25DbGlja0V4cG9ydCA9IF90aGlzLm9uQ2xpY2tFeHBvcnQuYmluZChfdGhpcyk7XG4gICAgICAgIF90aGlzLm9uQ2xpY2tUZWVudXN0ZVRhaHRhZWdIYW5kbGVyID0gX3RoaXMub25DbGlja1RlZW51c3RlVGFodGFlZ0hhbmRsZXIuYmluZChfdGhpcyk7XG4gICAgICAgIF90aGlzLnJlbmRlcmVyID0gX3RoaXMucmVuZGVyZXIuYmluZChfdGhpcyk7XG4gICAgICAgIF90aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgcmVhZDogMCxcbiAgICAgICAgICAgIGZpbHRyaV9yZWFkOiAwXG4gICAgICAgIH07XG5cbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cblxuICAgIF9jcmVhdGVDbGFzcyhEb2N1bWVudHMsIFt7XG4gICAgICAgIGtleTogJ3JlbmRlcicsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRG9jdW1lbnRSZWdpc3RlciwgeyBpbml0RGF0YTogdGhpcy5wcm9wcy5pbml0RGF0YSxcbiAgICAgICAgICAgICAgICAgICAgdXNlckRhdGE6IHRoaXMucHJvcHMudXNlckRhdGEsXG4gICAgICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHRoaXMucHJvcHMuaGlzdG9yeSA/IHRoaXMucHJvcHMuaGlzdG9yeSA6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vZHVsZTogdGhpcy5wcm9wcy5tb2R1bGUsXG4gICAgICAgICAgICAgICAgICAgIHJlZjogJ3JlZ2lzdGVyJyxcbiAgICAgICAgICAgICAgICAgICAgZG9jVHlwZUlkOiBET0NfVFlQRV9JRCxcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcyxcbiAgICAgICAgICAgICAgICAgICAgcmVuZGVyOiB0aGlzLnJlbmRlcmVyIH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXRUZXh0LCB7IHRpdGxlOiAnRmlsdHJpIGFsbCAvIHJlYWQga29ra3U6JyxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3JlYWRfa29ra3UnLFxuICAgICAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLnRvdGFsLFxuICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC1yZWFkJyxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IFN0cmluZyh0aGlzLnN0YXRlLmZpbHRyaV9yZWFkICsgJy8nICsgdGhpcy5zdGF0ZS5yZWFkKSxcbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IHRydWUgfSlcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ3JlbmRlcmVyJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcmVyKHNlbGYpIHtcbiAgICAgICAgICAgIHZhciB1c2VyUm9sZXMgPSBEb2NDb250ZXh0LnVzZXJEYXRhID8gRG9jQ29udGV4dC51c2VyRGF0YS5yb2xlcyA6IFtdO1xuICAgICAgICAgICAgaWYgKHNlbGYgJiYgc2VsZi5ncmlkRGF0YSkge1xuICAgICAgICAgICAgICAgIHZhciByb3dzX3RvdGFsID0gc2VsZi5ncmlkRGF0YS5sZW5ndGggJiYgc2VsZi5ncmlkRGF0YVswXS5yb3dzX3RvdGFsID8gc2VsZi5ncmlkRGF0YVswXS5yb3dzX3RvdGFsIDogMDtcbiAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICAgICAgcmVhZDogcm93c190b3RhbCxcbiAgICAgICAgICAgICAgICAgICAgZmlsdHJpX3JlYWQ6IHNlbGYuZ3JpZERhdGEubGVuZ3RoICYmIHNlbGYuZ3JpZERhdGFbMF0uZmlsdGVyX3RvdGFsID8gc2VsZi5ncmlkRGF0YVswXS5maWx0ZXJfdG90YWwgOiByb3dzX3RvdGFsXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgIFRvb2xiYXJDb250YWluZXIsXG4gICAgICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgICAgICBjaGVja1JpZ2h0cyh1c2VyUm9sZXMsIGRvY1JpZ2h0cywgJ211dWRhVGVlbnVzdGVUYWh0YWVnJykgPyBSZWFjdC5jcmVhdGVFbGVtZW50KEJ0blRhc2ssIHtcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6ICdNdXVkYSB0ZWVudXN0ZSB0w6RodGFlZycsXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s6IHRoaXMub25DbGlja1RlZW51c3RlVGFodGFlZ0hhbmRsZXIsXG4gICAgICAgICAgICAgICAgICAgIHNob3dEYXRlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBzaG93S29ndXM6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICByZWY6ICdidG4tdGVlbnVzdGVfdGFodGFlZydcbiAgICAgICAgICAgICAgICB9KSA6IG51bGwsXG4gICAgICAgICAgICAgICAgY2hlY2tSaWdodHModXNlclJvbGVzLCBkb2NSaWdodHMsICdtdXVkYUV0dGVtYWtzdVBlcmlvZCcpID8gUmVhY3QuY3JlYXRlRWxlbWVudChCdG5UYXNrLCB7XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiAnTXV1ZGEgZXR0ZW1ha3N1IHBlcmlvZCcsXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s6IHRoaXMub25DbGlja0hhbmRsZXIuYmluZCh0aGlzLCAnbXV1ZGFFdHRlbWFrcycpLFxuICAgICAgICAgICAgICAgICAgICBzaG93RGF0ZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIHNob3dLb2d1czogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgcmVmOiAnYnRuLWV0dGVtYWtzdV9wZXJpb2QnXG4gICAgICAgICAgICAgICAgfSkgOiBudWxsLFxuICAgICAgICAgICAgICAgIGNoZWNrUmlnaHRzKHVzZXJSb2xlcywgZG9jUmlnaHRzLCAnaW1wb3J0VGVlbnVzZWQnKSA/IFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnV0dG9uVXBsb2FkLCB7XG4gICAgICAgICAgICAgICAgICAgIHJlZjogJ2J0blVwbG9hZCcsXG4gICAgICAgICAgICAgICAgICAgIGRvY1R5cGVJZDogRE9DX1RZUEVfSUQsXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s6IHRoaXMuaGFuZGxlQ2xpY2ssXG4gICAgICAgICAgICAgICAgICAgIHNob3c6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIG1pbWVUeXBlczogJy5jc3YnXG4gICAgICAgICAgICAgICAgfSkgOiBudWxsLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnRuVGFzaywge1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogJ1NhYW1hIENTViBmYWlsJyxcbiAgICAgICAgICAgICAgICAgICAgb25DbGljazogdGhpcy5vbkNsaWNrRXhwb3J0LFxuICAgICAgICAgICAgICAgICAgICBzaG93RGF0ZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIHNob3dLb2d1czogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIHNob3dLb25kOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICByZWY6ICdidG4tc2FtYV9jc3YnXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ29uQ2xpY2tIYW5kbGVyJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIG9uQ2xpY2tIYW5kbGVyKGV2ZW50LCBldHRlbWFrc3VQZXJpb2QpIHtcblxuICAgICAgICAgICAgdmFyIERvYyA9IHRoaXMucmVmc1sncmVnaXN0ZXInXTtcblxuICAgICAgICAgICAgLy8g0YHQvtCx0LjRgNCw0LXQvCDQv9Cw0YDQsNC80LXRgtGA0YtcbiAgICAgICAgICAgIHZhciBpZHMgPSBbXTtcbiAgICAgICAgICAgIERvYy5ncmlkRGF0YS5maWx0ZXIoZnVuY3Rpb24gKHJvdykge1xuICAgICAgICAgICAgICAgIGlmIChyb3cuZXR0ZW1ha3MgJiYgcm93LnNlbGVjdCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcm93O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pLmZvckVhY2goZnVuY3Rpb24gKHJvdykge1xuICAgICAgICAgICAgICAgIGlkcy5wdXNoKHJvdy5pZCk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgLy8g0L7RgtC/0YDQsNCy0LvRj9C10Lwg0LfQsNC/0YDQvtGBINC90LAg0LLRi9C/0L7Qu9C90LXQvdC40LVcbiAgICAgICAgICAgIERvYy5mZXRjaERhdGEoJ2NhbGMvbXV1ZGFfZXR0ZW1ha3N1X3BlcmlvZCcsIHsgZG9jczogaWRzLCBldHRlbWFrc3VQZXJpb2Q6IGV0dGVtYWtzdVBlcmlvZCB9KS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7XG5cbiAgICAgICAgICAgICAgICBpZiAoZGF0YS5yZXN1bHQpIHtcbiAgICAgICAgICAgICAgICAgICAgRG9jLnNldFN0YXRlKHsgd2FybmluZzogJ0tva2t1IGFydmVzdGF0dWQ6ICcgKyBkYXRhLnJlc3VsdCwgd2FybmluZ1R5cGU6ICdvaycgfSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgRG9jLnNldFN0YXRlKHsgd2FybmluZzogJ1Rla2tpcyB2aWdhOiAnICsgZGF0YS5lcnJvcl9tZXNzYWdlLCB3YXJuaW5nVHlwZTogJ25vdFZhbGlkJyB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH0sIHtcbiAgICAgICAga2V5OiAnb25DbGlja0V4cG9ydCcsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBvbkNsaWNrRXhwb3J0KGV2ZW50LCB2YWx1ZSwga29uZCkge1xuICAgICAgICAgICAgdmFyIERvYyA9IHRoaXMucmVmc1sncmVnaXN0ZXInXTtcblxuICAgICAgICAgICAgaWYgKERvYy5ncmlkRGF0YSAmJiBEb2MuZ3JpZERhdGEubGVuZ3RoKSB7XG5cbiAgICAgICAgICAgICAgICAvL9C00LXQu9Cw0LXQvCDRgNC10LTQsNC50YDQtdC60YIg0L3QsCDQutC+0L3RhNC40LPRg9GA0LDRhtC40Y5cblxuXG4gICAgICAgICAgICAgICAgdmFyIHNxbFdoZXJlID0gRG9jLnN0YXRlLnNxbFdoZXJlO1xuICAgICAgICAgICAgICAgIHZhciBwYXJhbXMgPSBlbmNvZGVVUklDb21wb25lbnQoJycgKyBzcWxXaGVyZSk7XG4gICAgICAgICAgICAgICAgdmFyIHVybCA9ICcvcmVwb3J0cy9sYXBzZV9rYWFydC8nICsgRG9jQ29udGV4dC51c2VyRGF0YS51dWlkICsgJy8nICsga29uZDtcblxuICAgICAgICAgICAgICAgIHZhciBmaWx0ZXIgPSBlbmNvZGVVUklDb21wb25lbnQoJycgKyBKU09OLnN0cmluZ2lmeShEb2MuZmlsdGVyRGF0YSkpO1xuICAgICAgICAgICAgICAgIHZhciBmdWxsVXJsID0gc3FsV2hlcmUgPyB1cmwgKyAnLycgKyBmaWx0ZXIgKyAnLycgKyBwYXJhbXMgOiB1cmwgKyAnLycgKyBmaWx0ZXI7XG5cbiAgICAgICAgICAgICAgICB3aW5kb3cub3BlbihmdWxsVXJsKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgRG9jLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICAgICAgd2FybmluZzogJ01pdHRlIMO8aHRlZ2kgdGVlbnVzZWQgbGVpZG51bScsIC8vINGB0YLRgNC+0LrQsCDQuNC30LLQtdGJ0LXQvdC40LlcbiAgICAgICAgICAgICAgICAgICAgd2FybmluZ1R5cGU6ICdub3RWYWxpZCdcblxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSwge1xuICAgICAgICBrZXk6ICdvbkNsaWNrVGVlbnVzdGVUYWh0YWVnSGFuZGxlcicsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBvbkNsaWNrVGVlbnVzdGVUYWh0YWVnSGFuZGxlcihldmVudCwgdGVlbnVzdGVUYWh0YWVnKSB7XG5cbiAgICAgICAgICAgIHZhciBEb2MgPSB0aGlzLnJlZnNbJ3JlZ2lzdGVyJ107XG5cbiAgICAgICAgICAgIC8vINGB0L7QsdC40YDQsNC10Lwg0L/QsNGA0LDQvNC10YLRgNGLXG4gICAgICAgICAgICB2YXIgaWRzID0gW107XG4gICAgICAgICAgICBEb2MuZ3JpZERhdGEuZmlsdGVyKGZ1bmN0aW9uIChyb3cpIHtcbiAgICAgICAgICAgICAgICBpZiAocm93LnNlbGVjdCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcm93O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pLmZvckVhY2goZnVuY3Rpb24gKHJvdykge1xuICAgICAgICAgICAgICAgIGlkcy5wdXNoKHJvdy5pZCk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgLy8g0L7RgtC/0YDQsNCy0LvRj9C10Lwg0LfQsNC/0YDQvtGBINC90LAg0LLRi9C/0L7Qu9C90LXQvdC40LVcbiAgICAgICAgICAgIERvYy5mZXRjaERhdGEoJ2NhbGMvbXV1ZGFfdGVlbnVzdGVfdGFodGFlZycsIHsgZG9jczogaWRzLCB0ZWVudXN0ZVRhaHRhZWc6IHRlZW51c3RlVGFodGFlZyB9KS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7XG5cbiAgICAgICAgICAgICAgICBpZiAoZGF0YS5yZXN1bHQpIHtcbiAgICAgICAgICAgICAgICAgICAgRG9jLmJ0blJlZnJlc2hDbGljaygpO1xuICAgICAgICAgICAgICAgICAgICBEb2Muc2V0U3RhdGUoeyB3YXJuaW5nOiAnS29ra3UgbXV1ZGV0dWQ6ICcgKyBkYXRhLnJlc3VsdCwgd2FybmluZ1R5cGU6ICdvaycgfSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgRG9jLnNldFN0YXRlKHsgd2FybmluZzogJ1Rla2tpcyB2aWdhOiAnICsgZGF0YS5lcnJvcl9tZXNzYWdlLCB3YXJuaW5nVHlwZTogJ25vdFZhbGlkJyB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1dKTtcblxuICAgIHJldHVybiBEb2N1bWVudHM7XG59KFJlYWN0LlB1cmVDb21wb25lbnQpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IERvY3VtZW50cztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2Zyb250ZW5kL2RvY3MvbGFwc2Vfa2FhcnQvaW5kZXguanN4XG4vLyBtb2R1bGUgaWQgPSAyNDhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO21vZHVsZS5leHBvcnRzPXtncmlkOnttYWluVGFibGU6e3dpZHRoOicxMDAlJyxwb3NpdGlvbjonaW5pdGlhbCcsdGQ6e2JvcmRlcjonMXB4IHNvbGlkIGxpZ2h0R3JleScsZGlzcGxheTondGFibGUtY2VsbCcscGFkZGluZ0xlZnQ6JzVweCd9fSxoZWFkZXJUYWJsZTp7d2lkdGg6JzEwMCUnfSxncmlkQ29udGFpbmVyOnt3aWR0aDonMTAwJSd9fSx0b3RhbDp7d2lkdGg6J2F1dG8nfX07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9mcm9udGVuZC9kb2NzL2xhcHNlX2thYXJ0L3N0eWxlcy5qc1xuLy8gbW9kdWxlIGlkID0gMjQ5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxudmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZnVuY3Rpb24gX3RvQ29uc3VtYWJsZUFycmF5KGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSB7IGZvciAodmFyIGkgPSAwLCBhcnIyID0gQXJyYXkoYXJyLmxlbmd0aCk7IGkgPCBhcnIubGVuZ3RoOyBpKyspIHsgYXJyMltpXSA9IGFycltpXTsgfSByZXR1cm4gYXJyMjsgfSBlbHNlIHsgcmV0dXJuIEFycmF5LmZyb20oYXJyKTsgfSB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIFByb3BUeXBlcyA9IHJlcXVpcmUoJ3Byb3AtdHlwZXMnKTtcbnZhciBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG52YXIgRG9jQ29udGV4dCA9IHJlcXVpcmUoJy4uLy4uLy4uL2RvYy1jb250ZXh0Jyk7XG5cbnZhciBEb2N1bWVudFRlbXBsYXRlID0gcmVxdWlyZSgnLi4vLi4vZG9jdW1lbnRUZW1wbGF0ZS9pbmRleC5qc3gnKSxcbiAgICBJbnB1dE51bWJlciA9IHJlcXVpcmUoJy4uLy4uLy4uL2NvbXBvbmVudHMvaW5wdXQtbnVtYmVyL2lucHV0LW51bWJlci5qc3gnKSxcbiAgICBCdXR0b25FZGl0ID0gcmVxdWlyZSgnLi4vLi4vLi4vY29tcG9uZW50cy9idXR0b24tcmVnaXN0ZXIvYnV0dG9uLXJlZ2lzdGVyLWVkaXQvYnV0dG9uLXJlZ2lzdGVyLWVkaXQuanN4JyksXG4gICAgSW5wdXREYXRlID0gcmVxdWlyZSgnLi4vLi4vLi4vY29tcG9uZW50cy9pbnB1dC1kYXRlL2lucHV0LWRhdGUuanN4JyksXG4gICAgU2VsZWN0ID0gcmVxdWlyZSgnLi4vLi4vLi4vY29tcG9uZW50cy9zZWxlY3Qvc2VsZWN0LmpzeCcpLFxuICAgIENoZWNrQm94ID0gcmVxdWlyZSgnLi4vLi4vLi4vY29tcG9uZW50cy9pbnB1dC1jaGVja2JveC9pbnB1dC1jaGVja2JveC5qc3gnKSxcbiAgICBTZWxlY3REYXRhID0gcmVxdWlyZSgnLi4vLi4vLi4vY29tcG9uZW50cy9zZWxlY3QtZGF0YS9zZWxlY3QtZGF0YS5qc3gnKSxcbiAgICBUZXh0QXJlYSA9IHJlcXVpcmUoJy4uLy4uLy4uL2NvbXBvbmVudHMvdGV4dC1hcmVhL3RleHQtYXJlYS5qc3gnKSxcbiAgICBMb2FkaW5nID0gcmVxdWlyZSgnLi8uLi8uLi8uLi9jb21wb25lbnRzL2xvYWRpbmcvaW5kZXguanN4JyksXG4gICAgc3R5bGVzID0gcmVxdWlyZSgnLi9zdHlsZXMnKTtcblxudmFyIExJQlJBUklFUyA9IHJlcXVpcmUoJy4vLi4vLi4vLi4vLi4vY29uZmlnL2NvbnN0YW50cycpLkxBUFNFX0tBQVJULkxJQlJBUklFUztcblxudmFyIExhcHNlS2FhcnQgPSBmdW5jdGlvbiAoX1JlYWN0JFB1cmVDb21wb25lbnQpIHtcbiAgICBfaW5oZXJpdHMoTGFwc2VLYWFydCwgX1JlYWN0JFB1cmVDb21wb25lbnQpO1xuXG4gICAgZnVuY3Rpb24gTGFwc2VLYWFydChwcm9wcykge1xuICAgICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTGFwc2VLYWFydCk7XG5cbiAgICAgICAgdmFyIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKExhcHNlS2FhcnQuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihMYXBzZUthYXJ0KSkuY2FsbCh0aGlzLCBwcm9wcykpO1xuXG4gICAgICAgIF90aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgZG9jSWQ6IHByb3BzLmRvY0lkID8gcHJvcHMuZG9jSWQgOiBOdW1iZXIocHJvcHMubWF0Y2gucGFyYW1zLmRvY0lkKSxcbiAgICAgICAgICAgIG1vZHVsZTogJ2xhcHNlZCcsXG4gICAgICAgICAgICBrYXNfc29vZHVzdHVzOiBmYWxzZVxuICAgICAgICB9O1xuXG4gICAgICAgIF90aGlzLnJlbmRlcmVyID0gX3RoaXMucmVuZGVyZXIuYmluZChfdGhpcyk7XG4gICAgICAgIF90aGlzLmhhbmRsZVBhZ2VDbGljayA9IF90aGlzLmhhbmRsZVBhZ2VDbGljay5iaW5kKF90aGlzKTtcbiAgICAgICAgX3RoaXMuaGFuZGxlR3JpZEJ0bkNsaWNrID0gX3RoaXMuaGFuZGxlR3JpZEJ0bkNsaWNrLmJpbmQoX3RoaXMpO1xuICAgICAgICBfdGhpcy5idG5FZGl0Tm9tQ2xpY2sgPSBfdGhpcy5idG5FZGl0Tm9tQ2xpY2suYmluZChfdGhpcyk7XG4gICAgICAgIF90aGlzLmJ0bkVkaXRMYXBzQ2xpY2sgPSBfdGhpcy5idG5FZGl0TGFwc0NsaWNrLmJpbmQoX3RoaXMpO1xuICAgICAgICBfdGhpcy5idG5FZGl0TGFwc2VHcnVwcENsaWNrID0gX3RoaXMuYnRuRWRpdExhcHNlR3J1cHBDbGljay5iaW5kKF90aGlzKTtcbiAgICAgICAgX3RoaXMuaGFuZGxlSW5wdXRDaGFuZ2UgPSBfdGhpcy5oYW5kbGVJbnB1dENoYW5nZS5iaW5kKF90aGlzKTtcblxuICAgICAgICBfdGhpcy5wYWdlcyA9IFt7IHBhZ2VOYW1lOiAnVGVlbnVzJywgZG9jVHlwZUlkOiAnTEFQU0VfS0FBUlQnIH1dO1xuXG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG5cbiAgICBfY3JlYXRlQ2xhc3MoTGFwc2VLYWFydCwgW3tcbiAgICAgICAga2V5OiAnY29tcG9uZW50RGlkTW91bnQnLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgICAgICAgICB2YXIgbGFwc0lkID0gdm9pZCAwO1xuXG4gICAgICAgICAgICAvL9C10YHQu9C4INC/0LDRgNCw0LzQtdGC0YAg0L3QsCDRgNC10LHQtdC90LrQsCDQt9Cw0LTQsNC9INCyINGB0YLQtdC50YLQtSwg0YLQviDQuNGB0L/QvtC70YzQt9GD0LXQvCDQtdCz0L4uINCY0L3QsNGH0LUg0LjRidC10Lwg0LXQs9C+INCyINC60L7QvdGC0LXQutGB0YLQtVxuICAgICAgICAgICAgaWYgKHRoaXMucHJvcHMuaGlzdG9yeSAmJiB0aGlzLnByb3BzLmhpc3RvcnkubG9jYXRpb24uc3RhdGUpIHtcbiAgICAgICAgICAgICAgICBsYXBzSWQgPSB0aGlzLnByb3BzLmhpc3RvcnkubG9jYXRpb24uc3RhdGUubGFwc0lkO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBsYXBzSWQgPSBEb2NDb250ZXh0WydsYXBzJ10gPyBEb2NDb250ZXh0WydsYXBzJ10gOiBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IGxhcHNJZDogbGFwc0lkIH0pO1xuICAgICAgICB9XG4gICAgfSwge1xuICAgICAgICBrZXk6ICdyZW5kZXInLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgICAgICAgdmFyIGluaXREYXRhID0gdGhpcy5wcm9wcy5pbml0RGF0YSA/IHRoaXMucHJvcHMuaW5pdERhdGEgOiB7fTtcblxuICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRG9jdW1lbnRUZW1wbGF0ZSwgeyBkb2NJZDogdGhpcy5zdGF0ZS5kb2NJZCxcbiAgICAgICAgICAgICAgICByZWY6ICdkb2N1bWVudCcsXG4gICAgICAgICAgICAgICAgbW9kdWxlOiB0aGlzLnN0YXRlLm1vZHVsZSxcbiAgICAgICAgICAgICAgICBkb2NUeXBlSWQ6ICdMQVBTRV9LQUFSVCcsXG4gICAgICAgICAgICAgICAgdXNlckRhdGE6IHRoaXMucHJvcHMudXNlckRhdGEsXG4gICAgICAgICAgICAgICAgaW5pdERhdGE6IGluaXREYXRhLFxuICAgICAgICAgICAgICAgIGxpYnM6IExJQlJBUklFUyxcbiAgICAgICAgICAgICAgICBwYWdlczogdGhpcy5wYWdlcyxcbiAgICAgICAgICAgICAgICByZW5kZXJlcjogdGhpcy5yZW5kZXJlcixcbiAgICAgICAgICAgICAgICBoYW5kbGVHcmlkQnRuQ2xpY2s6IHRoaXMuaGFuZGxlR3JpZEJ0bkNsaWNrLFxuICAgICAgICAgICAgICAgIGhhbmRsZUlucHV0Q2hhbmdlOiB0aGlzLmhhbmRsZUlucHV0Q2hhbmdlLFxuICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHRoaXMucHJvcHMuaGlzdG9yeVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICAvKipcclxuICAgICAgICAgKtCS0LXRgNC90LXRgiDQutCw0YHRgtC+0LzQvdGL0LUg0LrQvtC80L/QvtC90LXQvdGC0Ysg0LTQvtC60YPQvNC10L3RgtCwXHJcbiAgICAgICAgICovXG5cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ3JlbmRlcmVyJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcmVyKHNlbGYpIHtcbiAgICAgICAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICAgICAgICAvL3x8ICFzZWxmLnN0YXRlLmxvYWRlZExpYnNcbiAgICAgICAgICAgIGlmICghc2VsZiB8fCAhc2VsZi5kb2NEYXRhIHx8ICFzZWxmLnN0YXRlLmxvYWRlZExpYnMpIHtcbiAgICAgICAgICAgICAgICAvLyDQvdC1INC30LDQs9GA0YPQttC10L3RiyDQtNCw0L3QvdGL0LVcbiAgICAgICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2MgfSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChMb2FkaW5nLCB7IGxhYmVsOiAnTGFhZGltaW5lLi4uJyB9KVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vINC90LUg0YPRgdC/0LXQstCw0LXRgiDQv9C+0LTQs9GA0YPQt9C40YLRjNGB0Y8g0YHQv9GA0LDQstC+0YfQvdC40LosINC/0LXRgNC10LPRgNGD0LfQutCwINGE0L7RgNC80YtcbiAgICAgICAgICAgIGlmICghc2VsZi5saWJzWydub21lbmNsYXR1cmUnXS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMyLmZvcmNlVXBkYXRlKCk7XG4gICAgICAgICAgICAgICAgfSwgMSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHZhciBpc0VkaXRNb2RlID0gc2VsZi5zdGF0ZS5lZGl0ZWQ7XG5cbiAgICAgICAgICAgIGlmICgoIU51bWJlcihzZWxmLmRvY0RhdGEuaWQpIHx8ICFzZWxmLmRvY0RhdGEucGFyZW50aWQpICYmIHRoaXMuc3RhdGUubGFwc0lkKSB7XG4gICAgICAgICAgICAgICAgLy9uZXcgcmVjb3JkXG4gICAgICAgICAgICAgICAgc2VsZi5kb2NEYXRhLnBhcmVudGlkID0gdGhpcy5zdGF0ZS5sYXBzSWQ7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHZhciBidXR0b25FZGl0Tm9tID0gc3R5bGVzLmJ0bkVkaXROb207XG5cbiAgICAgICAgICAgIHZhciB5a3N1cyA9IHZvaWQgMDtcbiAgICAgICAgICAgIHZhciBhbGxfeWtzdXNlZCA9IFt7IGlkOiAwLCBuaW1ldHVzOiAnJyB9XTtcbiAgICAgICAgICAgIGlmIChzZWxmLmxpYnNbJ2xhcHNlX2dydXBwJ10gJiYgc2VsZi5kb2NEYXRhLnlrc3VzKSB7XG4gICAgICAgICAgICAgICAgeWtzdXMgPSBzZWxmLmxpYnNbJ2xhcHNlX2dydXBwJ10uZmluZChmdW5jdGlvbiAoeWtzdXMpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHlrc3VzLmtvb2QgPT09IHNlbGYuZG9jRGF0YS55a3N1cztcbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIGFsbF95a3N1c2VkID0gKHlrc3VzICYmIHlrc3VzLmFsbF95a3N1c2VkID8geWtzdXMuYWxsX3lrc3VzZWQgOiBbXSkubWFwKGZ1bmN0aW9uIChpdGVtLCBpbmRleCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4geyBpZDogaW5kZXgrKywgbmltZXR1czogaXRlbSB9O1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB2YXIgbm9tRGF0YSA9IFtdO1xuICAgICAgICAgICAgLy8g0LHQtdGA0LXQvCDRgtC+0LvRjNC60L4g0YPRgdC70YPQs9C4INC00LvRjyDQs9GA0YPQv9C/0YssINC00L7QsdCw0LLQu9GP0Y/QtdC8INGG0LXQvdGDINC4INC10LQu0LjQt9C80LXRgNC10L3QuNGPINC4INGB0L7RgNGC0LjRgNGD0LXQvFxuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBpZiAoeWtzdXMpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKERvY0NvbnRleHQubGlicyAmJiBEb2NDb250ZXh0LmxpYnNbeWtzdXMuaWRdICYmIERvY0NvbnRleHQubGlic1t5a3N1cy5pZF0ubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyDQsdC10YDQtdC8INC40Lcg0LrQtdGI0LBcbiAgICAgICAgICAgICAgICAgICAgICAgIG5vbURhdGEgPSBEb2NDb250ZXh0LmxpYnNbeWtzdXMuaWRdO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgbm9tRGF0YSA9ICh5a3N1cy50ZWVudXNlZCAmJiBzZWxmLmxpYnNbJ25vbWVuY2xhdHVyZSddLmxlbmd0aCA+IDAgPyB5a3N1cy50ZWVudXNlZCA6IFtdKS5tYXAoZnVuY3Rpb24gKG5vbSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciByb3cgPSBzZWxmLmxpYnNbJ25vbWVuY2xhdHVyZSddLmZpbmQoZnVuY3Rpb24gKGxpYikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbGliLmlkID09PSBOdW1iZXIobm9tLm5vbWlkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyb3cpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRlZW51c2VOaW1ldHVzID0gcm93Lm5pbWV0dXMgPyByb3cubmltZXR1cyArICcgKGhpbmQ6ICcgKyBOdW1iZXIobm9tLmhpbmQpLnRvRml4ZWQoMikgKyAnKSAnIDogJyc7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfZXh0ZW5kcyh7fSwgcm93LCB7IG5pbWV0dXM6IHRlZW51c2VOaW1ldHVzLCBpZDogTnVtYmVyKG5vbS5ub21pZCkgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSkuc29ydChmdW5jdGlvbiAoYSwgYikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBhLmtvb2QubG9jYWxlQ29tcGFyZShiLmtvb2QpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChub21EYXRhLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vINGB0L7RhdGA0LDQvdC40Lwg0LIg0LrQtdGI0LVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBEb2NDb250ZXh0LmxpYnNbeWtzdXMuaWRdID0gbm9tRGF0YTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vINC90LAg0LLRgdGP0LrQuNC5LCDQstGL0LfQvtCy0LXQvCDRgNC1INGA0LXQvdC00LXRgCDRgdGC0YDQsNC90LjRhtGLXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5mb3JjZVVwZGF0ZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgLy8g0YTQuNC70YzRgtGAINC90LAg0L3QvtC80LXQvdC60LvQsNGC0YPRgNGLXG4gICAgICAgICAgICAgICAgICAgIG5vbURhdGEgPSBbeyBpZDogMCwga29vZDogJycsIG5pbWV0dXM6ICcnLCBoaW5kOiAwLCBrb2d1czogMCwga2FzX2luZjM6IGZhbHNlIH1dO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGUsIG5vbURhdGEpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyDQvdCw0LrQu9Cw0LTRi9Cy0LDQtdC8INGE0LjQu9GM0YLRgCDQvdCwINGB0L/RgNCw0LLQvtGH0L3QuNC6INGB0YLQsNGA0YvRhSDQstC40YLQtdC90YPQvNCx0LXRgNC+0LIg0L3QsCDRgNC10LHQtdC90LrQsFxuICAgICAgICAgICAgdmFyIHZpaXRlbnIgPSBbeyBpZDogMCwga29vZDogJycsIG5pbWV0dXM6ICcnLCBsYXBzX2lkOiBzZWxmLmRvY0RhdGEucGFyZW50aWQgfV07XG4gICAgICAgICAgICB2YXIgZGVmYXVsdFZpaXRlbnIgPSB2b2lkIDA7XG5cbiAgICAgICAgICAgIGlmIChzZWxmLmxpYnNbJ3ZpaXRlbnInXSAmJiBzZWxmLmxpYnNbJ3ZpaXRlbnInXS5sZW5ndGggJiYgc2VsZi5kb2NEYXRhLnBhcmVudGlkKSB7XG4gICAgICAgICAgICAgICAgdmlpdGVuci5wdXNoLmFwcGx5KHZpaXRlbnIsIF90b0NvbnN1bWFibGVBcnJheShzZWxmLmxpYnNbJ3ZpaXRlbnInXS5maWx0ZXIoZnVuY3Rpb24gKGthYXJ0KSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBrYWFydC5sYXBzX2lkID09IHNlbGYuZG9jRGF0YS5wYXJlbnRpZDtcbiAgICAgICAgICAgICAgICB9KSkpO1xuXG4gICAgICAgICAgICAgICAgLy8g0YHRh9C40YLQsNC10Lwg0LrQvtC7LdCy0L4g0YHRgtCw0YDRi9GFINC90L7QvNC10YDQvtCyXG4gICAgICAgICAgICAgICAgdmFyIGluZGV4ID0gdmlpdGVuci5sZW5ndGggLSAxO1xuICAgICAgICAgICAgICAgIGRlZmF1bHRWaWl0ZW5yID0gdmlpdGVucltpbmRleF0ua29vZDtcblxuICAgICAgICAgICAgICAgIGlmICghc2VsZi5kb2NEYXRhLnZpaXRlbnIpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8g0LXRgdC70Lgg0L3QtSDQt9Cw0LTQsNC9INGB0YLQsNGA0YvQuSDQstC40YLQtdC90YPQvNCx0LXRgCwg0YLQviDQtNC+0LHQsNCy0LjQvCDQv9C+0YHQu9C10LTQvdC40Lkg0LjQtyDRgNC10LPQuNGB0YLRgNCwXG4gICAgICAgICAgICAgICAgICAgIHNlbGYuZG9jRGF0YS52aWl0ZW5yID0gZGVmYXVsdFZpaXRlbnI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyDQv9GA0L7QstC10YDQuNC8INGB0YLQvtC40YIg0LvQuCDRgNCw0LfRgNC10YjQuNGC0Ywg0YDQtdC00LDQutGC0LjRgNC+0LLQsNC90LjQtVxuICAgICAgICAgICAgdmFyIGlzRWRpdExhcHNpZCA9ICEhc2VsZi5kb2NEYXRhLnBhcmVudGlkO1xuXG4gICAgICAgICAgICAvLyDQtdGB0LvQuCDRg9GB0LvRg9Cz0LAg0LjQvNC10LXRgiDRgtC40L8gLSDQu9GM0LPQvtGC0LAsINGC0L4g0L7RgtC80LXRgtC40Lwg0Y3RgtC+XG4gICAgICAgICAgICB2YXIga2FzX25haWRhX3Nvb2R1c3R1cyA9IHRydWU7XG4gICAgICAgICAgICBpZiAoc2VsZiAmJiBzZWxmLmRvY0RhdGEgJiYgbm9tRGF0YSAmJiBub21EYXRhLmxlbmd0aCAmJiBzZWxmLmRvY0RhdGEubm9taWQpIHtcbiAgICAgICAgICAgICAgICB2YXIgdGVlbnVzID0gbm9tRGF0YS5maW5kKGZ1bmN0aW9uIChyb3cpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJvdy5pZCA9PT0gc2VsZi5kb2NEYXRhLm5vbWlkICYmIHJvdy50eXlwID09PSAnU09PRFVTVFVTJztcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBpZiAodGVlbnVzKSB7XG4gICAgICAgICAgICAgICAgICAgIGthc19uYWlkYV9zb29kdXN0dXMgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2MgfSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY1JvdyB9LFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jQ29sdW1uIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFNlbGVjdERhdGEsIHsgdGl0bGU6ICdMYXBzZSBuaW1pOicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3BhcmVudGlkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyRGF0YTogc2VsZi51c2VyRGF0YSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaWJOYW1lOiAnbGFwcycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3FsRmllbGRzOiBbJ25pbWknLCAnaXNpa3Vrb29kJ10sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogW10sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHNlbGYuZG9jRGF0YS5wYXJlbnRpZCB8fCAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHRWYWx1ZTogc2VsZi5kb2NEYXRhLmxhcHNlX25pbWksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYm91bmRUb0dyaWQ6ICduaW1pJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3VuZFRvRGF0YTogJ2xhcHNlX25pbWknLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ3NlbGVjdC1wYXJlbnRpZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnRuRGVsZXRlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoaXN0b3J5OiB0aGlzLnByb3BzLmhpc3RvcnksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6IGlzRWRpdExhcHNpZCB9KVxuICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jQ29sdW1uIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEJ1dHRvbkVkaXQsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdidG5FZGl0JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogJ011dWRhJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrOiB0aGlzLmJ0bkVkaXRMYXBzQ2xpY2ssXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvdzogIWlzRWRpdE1vZGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU6IGJ1dHRvbkVkaXROb20sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IGZhbHNlXG4gICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY1JvdyB9LFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jQ29sdW1uIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFNlbGVjdCwgeyB0aXRsZTogJ1xceERDa3N1czonLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICd5a3N1cycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGliczogJ2xhcHNlX2dydXBwJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiBzZWxmLmxpYnNbJ2xhcHNlX2dydXBwJ10sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHNlbGYuZG9jRGF0YS55a3N1cyB8fCAnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0VmFsdWU6IHNlbGYuZG9jRGF0YS55a3N5cyB8fCAnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdzZWxlY3QtbGFwc2VfZ3J1cHAnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbGxJZDogJ2tvb2QnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJ0bkRlbGV0ZTogaXNFZGl0TW9kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkT25seTogIWlzRWRpdE1vZGVcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NDb2x1bW4gfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnV0dG9uRWRpdCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2J0bkVkaXQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiAnTXV1ZGEnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s6IHRoaXMuYnRuRWRpdExhcHNlR3J1cHBDbGljayxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaG93OiAhaXNFZGl0TW9kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU6IGJ1dHRvbkVkaXROb21cbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jUm93IH0sXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NDb2x1bW4gfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoU2VsZWN0LCB7IHRpdGxlOiAnQWxsIFxceEZDa3N1czonLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdhbGxfeWtzdXMnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpYnM6ICdsYXBzZV9hbGxfeWtzdXMnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IGFsbF95a3N1c2VkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBzZWxmLmRvY0RhdGEuYWxsX3lrc3VzIHx8ICcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHRWYWx1ZTogc2VsZi5kb2NEYXRhLmFsbF95a3N5cyB8fCAnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdzZWxlY3QtbGFwc2VfYWxsX3lrc3VzJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xsSWQ6ICduaW1ldHVzJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkT25seTogIWlzRWRpdE1vZGVcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NDb2x1bW4gfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoU2VsZWN0LCB7IHRpdGxlOiAnVmFuYSB2aWl0ZW51bWJlcjonLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICd2aWl0ZW5yJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaWJzOiAndmlpdGVucicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogdmlpdGVucixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogc2VsZi5kb2NEYXRhLnZpaXRlbnIgfHwgJycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdFZhbHVlOiBzZWxmLmRvY0RhdGEudmlpdGVuciB8fCAnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdzZWxlY3QtdmlpdGVucicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sbElkOiAna29vZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnRuRGVsZXRlOiBpc0VkaXRNb2RlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiBzZWxmLmhhbmRsZUlucHV0Q2hhbmdlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiAhaXNFZGl0TW9kZVxuICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NSb3cgfSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY0NvbHVtbiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChTZWxlY3QsIHsgdGl0bGU6ICdLb29kOicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ25vbWlkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaWJzOiAnbm9tZW5jbGF0dXJlJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiBub21EYXRhLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBzZWxmLmRvY0RhdGEubm9taWQgfHwgMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0VmFsdWU6IHNlbGYuZG9jRGF0YS5rb29kLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ3NlbGVjdC1ub21pZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sbElkOiAnaWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJ0bkRlbGV0ZTogaXNFZGl0TW9kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkT25seTogIWlzRWRpdE1vZGUgfSlcbiAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY0NvbHVtbiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChCdXR0b25FZGl0LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAnYnRuRWRpdCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6ICdNdXVkYScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljazogdGhpcy5idG5FZGl0Tm9tQ2xpY2ssXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvdzogIWlzRWRpdE1vZGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOiBidXR0b25FZGl0Tm9tXG4gICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY1JvdyB9LFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jQ29sdW1uIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0TnVtYmVyLCB7IHJlZjogJ2lucHV0LWhpbmQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiAnSGluZDonLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdoaW5kJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogTnVtYmVyKHNlbGYuZG9jRGF0YS5oaW5kKSB8fCAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiAhaXNFZGl0TW9kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSB9KVxuICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jQ29sdW1uIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0TnVtYmVyLCB7IHJlZjogJ2lucHV0LWtvZ3VzJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ0tvZ3VzOicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2tvZ3VzJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogTnVtYmVyKHNlbGYuZG9jRGF0YS5rb2d1cykgfHwgMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkT25seTogIWlzRWRpdE1vZGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IHNlbGYuaGFuZGxlSW5wdXRDaGFuZ2UgfSlcbiAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NSb3cgfSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY0NvbHVtbiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChTZWxlY3QsIHsgdGl0bGU6ICdUdW5udXM6JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAndHVubnVzJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaWJzOiAndHVubnVzJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiBzZWxmLmxpYnNbJ3R1bm51cyddLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBzZWxmLmRvY0RhdGEudHVubnVzIHx8ICcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHRWYWx1ZTogc2VsZi5kb2NEYXRhLnR1bm51cyB8fCAnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdzZWxlY3QtdHVubnVzJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xsSWQ6ICdrb29kJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBidG5EZWxldGU6IGlzRWRpdE1vZGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IHNlbGYuaGFuZGxlSW5wdXRDaGFuZ2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFpc0VkaXRNb2RlXG4gICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY1JvdyB9LFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jQ29sdW1uIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0RGF0ZSwgeyB0aXRsZTogJ0tlaHRpYiBhbGF0ZXM6JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnYWxnX2twdicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHNlbGYuZG9jRGF0YS5hbGdfa3B2IHx8ICcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LWFsZ19rcHYnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiAhaXNFZGl0TW9kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSB9KVxuICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jQ29sdW1uIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0RGF0ZSwgeyB0aXRsZTogJ0tlaHRpYiBrdW5pOicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2xvcHBfa3B2JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogc2VsZi5kb2NEYXRhLmxvcHBfa3B2IHx8ICcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LWxvcHBfa3B2JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkT25seTogIWlzRWRpdE1vZGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IHNlbGYuaGFuZGxlSW5wdXRDaGFuZ2UgfSlcbiAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NSb3cgfSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY0NvbHVtbiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChDaGVja0JveCwgeyB0aXRsZTogJ0thcyBldHRlbWFrcz8nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdrYXNfZXR0ZW1ha3MnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBCb29sZWFuKHNlbGYuZG9jRGF0YS5rYXNfZXR0ZW1ha3MpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2NoZWNrYm94X2thc19ldHRlbWFrcycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IHNlbGYuaGFuZGxlSW5wdXRDaGFuZ2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFpc0VkaXRNb2RlXG4gICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICBzZWxmLmRvY0RhdGEua2FzX2V0dGVtYWtzID8gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY0NvbHVtbiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dE51bWJlciwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LWV0dGVtYWtzdV9wZXJpb2QnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiAnRXR0ZW1ha3N1IHBlcmlvZDonLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdldHRlbWFrc3VfcGVyaW9kJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogTnVtYmVyKHNlbGYuZG9jRGF0YS5ldHRlbWFrc3VfcGVyaW9kKSB8fCAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiAhaXNFZGl0TW9kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZVxuICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgKSA6IG51bGxcbiAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jUm93IH0sXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NDb2x1bW4gfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ2hlY2tCb3gsIHsgdGl0bGU6ICdLYXMgYXJ2ZXN0YSBlcmFsZGk/JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAna2FzX2VyYWxkaScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IEJvb2xlYW4oc2VsZi5kb2NEYXRhLmthc19lcmFsZGkpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2NoZWNrYm94X2thc19lcmFsZGknLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiBzZWxmLmhhbmRsZUlucHV0Q2hhbmdlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiAhaXNFZGl0TW9kZVxuICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAga2FzX25haWRhX3Nvb2R1c3R1cyA/IFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NDb2x1bW4gfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXROdW1iZXIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC1zb29kdXMnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiAnU29vZHVzdHVzOicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3Nvb2R1cycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IE51bWJlcihzZWxmLmRvY0RhdGEuc29vZHVzKSB8fCAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiAhaXNFZGl0TW9kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZVxuICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0RGF0ZSwgeyB0aXRsZTogJ0tlaHRpYiBhbGF0ZXM6JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnc29vZHVzZV9hbGcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBzZWxmLmRvY0RhdGEuc29vZHVzZV9hbGcgfHwgJycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQtc29vZHVzX2FsZycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFpc0VkaXRNb2RlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiBzZWxmLmhhbmRsZUlucHV0Q2hhbmdlIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dERhdGUsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ0tlaHRpYiBrdW5pOicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3Nvb2R1c2VfbG9wcCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHNlbGYuZG9jRGF0YS5zb29kdXNlX2xvcHAgfHwgJycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQtc29vZHVzX2xvcHAnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiAhaXNFZGl0TW9kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZVxuICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KENoZWNrQm94LCB7IHRpdGxlOiAnS2FzIHNvb2R1c3R1cyBwcm90c2VudGlkZXM/JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAna2FzX3Byb3RzZW50JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogQm9vbGVhbihzZWxmLmRvY0RhdGEua2FzX3Byb3RzZW50KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdjaGVja2JveF9rYXNfcHJvdHNlbnQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiBzZWxmLmhhbmRsZUlucHV0Q2hhbmdlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiAhaXNFZGl0TW9kZVxuICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgKSA6IG51bGxcbiAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jUm93IH0sXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoVGV4dEFyZWEsIHsgdGl0bGU6ICdNXFx4RTRya3VzZWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ211dWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAndGV4dGFyZWEtbXV1ZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBzZWxmLmRvY0RhdGEubXV1ZCB8fCAnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiAhaXNFZGl0TW9kZSB9KVxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cblxuICAgICAgICAvKipcclxuICAgICAgICAgKiDQvtGC0YDQsNCx0L7RgtCw0LXRgiDQutC70LjQuiDQv9C+INCy0LrQu9Cw0LTQtSDQuCDQvtGB0YPRidC10YHRgtCy0LjRgiDQv9C10YDQtdGF0L7QtCDQvdCwINC30LDQtNCw0L3QvdGD0Y4g0YHRgtGA0LDQvdC40YbRg1xyXG4gICAgICAgICAqIEBwYXJhbSBwYWdlRG9jVHlwZUlkXHJcbiAgICAgICAgICovXG5cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ2hhbmRsZVBhZ2VDbGljaycsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBoYW5kbGVQYWdlQ2xpY2socGFnZURvY1R5cGVJZCkge1xuICAgICAgICAgICAgdGhpcy5wcm9wcy5oaXN0b3J5LnB1c2goJy9sYXBzZWQvJyArIHBhZ2VEb2NUeXBlSWQpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy9oYW5kbGVyIGZvciBpbnB1dCBmb3IgdGhpcyBkb2N1bWVudCB0eXBlXG5cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ2hhbmRsZUlucHV0Q2hhbmdlJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGhhbmRsZUlucHV0Q2hhbmdlKGlucHV0TmFtZSwgaW5wdXRWYWx1ZSkge1xuICAgICAgICAgICAgaWYgKGlucHV0TmFtZSA9PT0gJ25vbWlkJykge1xuICAgICAgICAgICAgICAgIHZhciBEb2MgPSB0aGlzLnJlZnNbJ2RvY3VtZW50J107XG5cbiAgICAgICAgICAgICAgICAvLyDQvdCw0LTQviDQt9Cw0LTQsNGC0Ywg0YbQtdC90YMg0Lgg0LrQvtC7LdCy0L4g0LjQtyDRgtC+0LPQviwg0YfRgtC+INC/0YDQuNCy0Y/Qt9Cw0L3QvdC+INCyINCz0YDRg9C/0L/QtVxuXG4gICAgICAgICAgICAgICAgdmFyIHlrc3VzID0gdm9pZCAwO1xuICAgICAgICAgICAgICAgIGlmIChEb2MubGlic1snbGFwc2VfZ3J1cHAnXSAmJiBEb2MuZG9jRGF0YS55a3N1cykge1xuICAgICAgICAgICAgICAgICAgICB5a3N1cyA9IERvYy5saWJzWydsYXBzZV9ncnVwcCddLmZpbmQoZnVuY3Rpb24gKG9iaikge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG9iai5rb29kID09PSBEb2MuZG9jRGF0YS55a3N1cztcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgaWYgKHlrc3VzLnRlZW51c2VkKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciB0ZWVudXMgPSB5a3N1cy50ZWVudXNlZC5maW5kKGZ1bmN0aW9uIChvYmopIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBvYmoubm9taWQgPT0gaW5wdXRWYWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgRG9jLmRvY0RhdGEua29ndXMgPSB0ZWVudXMua29ndXMgPyB0ZWVudXMua29ndXMgOiBEb2MuZG9jRGF0YS5rb2d1cztcbiAgICAgICAgICAgICAgICAgICAgRG9jLmRvY0RhdGEuaGluZCA9IHRlZW51cy5oaW5kID8gdGVlbnVzLmhpbmQgOiBEb2MuZG9jRGF0YS5oaW5kO1xuICAgICAgICAgICAgICAgICAgICAvLyDQv9C+0LTQvNC10L3QuNC8INC90L7QvNC40LQg0L3QsCDQuNC0LCDRgtCw0Log0LrQsNC6INC40LQg0LLQuNGA0YLRg9Cw0LvRjNC90YvQuVxuICAgICAgICAgICAgICAgICAgICBEb2MuZG9jRGF0YS5ub21pZCA9IHRlZW51cy5ub21pZCA/IHRlZW51cy5ub21pZCA6IERvYy5kb2NEYXRhLm5vbWlkO1xuXG4gICAgICAgICAgICAgICAgICAgIC8vINC10YHQu9C4INGN0YLQviDRgdC+0LfQtNCw0L3QuNC1INC60LDRgNGC0L7Rh9C60LgsINGC0L4g0LTQvtCx0LDQstC40LwgaW5mM1xuICAgICAgICAgICAgICAgICAgICB2YXIgaXNfbmV3ID0gISgnaWQnIGluIERvYy5kb2NEYXRhKSB8fCAhRG9jLmRvY0RhdGEuaWQgPyB0cnVlIDogZmFsc2U7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKGlzX25ldykge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHJvdyA9IERvYy5saWJzWydub21lbmNsYXR1cmUnXS5maW5kKGZ1bmN0aW9uIChsaWIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbGliLmlkID09PSBOdW1iZXIoRG9jLmRvY0RhdGEubm9taWQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocm93ICYmIHJvdy5oYXNPd25Qcm9wZXJ0eSgna2FzX2luZjMnKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIERvYy5kb2NEYXRhLmthc19pbmYzID0gcm93Lmthc19pbmYzO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy8g0L7QsdGA0LDQsdC+0YLRh9C40Log0YHQvtCx0YvRgtC40Y8g0LrQu9C40Log0L3QsCDQs9GA0LjQtNC1INGA0L7QtNC40YLQtdC70LXQuVxuXG4gICAgfSwge1xuICAgICAgICBrZXk6ICdoYW5kbGVHcmlkQnRuQ2xpY2snLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gaGFuZGxlR3JpZEJ0bkNsaWNrKGJ0bk5hbWUsIGFjdGl2ZVJvdywgaWQsIGRvY1R5cGVJZCkge1xuICAgICAgICAgICAgc3dpdGNoIChidG5OYW1lKSB7XG4gICAgICAgICAgICAgICAgY2FzZSBcImVkaXRcIjpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wcm9wcy5oaXN0b3J5LnB1c2goJy9sYXBzZWQvJyArIGRvY1R5cGVJZCArICcvJyArIGlkKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSBcImFkZFwiOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLnByb3BzLmhpc3RvcnkucHVzaCgnL2xhcHNlZC8nICsgZG9jVHlwZUlkICsgJy8wLycgKyB0aGlzLnN0YXRlLmRvY0lkKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSBcImRlbGV0ZVwiOlxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnYnRuRGVsZXRlIGNsaWNrZWQnKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ1ZpZ2FuZSBjbGljaycpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy/QvtCx0YDQsNCx0L7RgtGH0LjQuiDRgdC+0LHRi9GC0LjRjyDQv9C+INC60LvQuNC60YMg0LrQvdC+0L/QutC4INCg0LXQtNCw0LrRgtC40YDQvtCy0LDQvdC40LUg0YHQvdC+0LzQtdC90LrQu9Cw0YLRg9GA0YtcblxuICAgIH0sIHtcbiAgICAgICAga2V5OiAnYnRuRWRpdE5vbUNsaWNrJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGJ0bkVkaXROb21DbGljaygpIHtcbiAgICAgICAgICAgIHZhciBkb2NOb21JZCA9IHRoaXMucmVmc1snZG9jdW1lbnQnXS5kb2NEYXRhLm5vbWlkO1xuXG4gICAgICAgICAgICAvLyDQvtGB0YPRidC10YHRgtCy0LjRgiDQv9C10YDQtdGF0L7QtCDQvdCwINC60LDRgNGC0L7Rh9C60YMg0LrQvtC90YLRgC3QsNCz0LXQvdGC0LBcbiAgICAgICAgICAgIHRoaXMucHJvcHMuaGlzdG9yeS5wdXNoKCcvbGFwc2VkL25vbWVuY2xhdHVyZS8nICsgZG9jTm9tSWQpO1xuICAgICAgICB9XG4gICAgfSwge1xuICAgICAgICBrZXk6ICdidG5FZGl0TGFwc2VHcnVwcENsaWNrJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGJ0bkVkaXRMYXBzZUdydXBwQ2xpY2soKSB7XG4gICAgICAgICAgICB2YXIgZG9jTGFwc2VHcnVwcEtvb2QgPSB0aGlzLnJlZnNbJ2RvY3VtZW50J10uZG9jRGF0YS55a3N1cztcbiAgICAgICAgICAgIC8vINC40YnQtdC8INC40LRcblxuICAgICAgICAgICAgdmFyIGxhcHNlR3J1cHBJZCA9IHRoaXMucmVmc1snZG9jdW1lbnQnXS5saWJzWydsYXBzZV9ncnVwcCddLmZpbmQoZnVuY3Rpb24gKHJvdykge1xuICAgICAgICAgICAgICAgIHJldHVybiByb3cua29vZCA9PT0gZG9jTGFwc2VHcnVwcEtvb2Q7XG4gICAgICAgICAgICB9KS5pZDtcblxuICAgICAgICAgICAgaWYgKGxhcHNlR3J1cHBJZCkge1xuICAgICAgICAgICAgICAgIC8vINC+0YHRg9GJ0LXRgdGC0LLQuNGCINC/0LXRgNC10YXQvtC0INC90LAg0LrQsNGA0YLQvtGH0LrRgyDQutC+0L3RgtGALdCw0LPQtdC90YLQsFxuICAgICAgICAgICAgICAgIHRoaXMucHJvcHMuaGlzdG9yeS5wdXNoKCcvbGFwc2VkL2xhcHNlX2dydXBwLycgKyBsYXBzZUdydXBwSWQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy/QvtCx0YDQsNCx0L7RgtGH0LjQuiDRgdC+0LHRi9GC0LjRjyDQv9C+INC60LvQuNC60YMg0LrQvdC+0L/QutC4INCg0LXQtNCw0LrRgtC40YDQvtCy0LDQvdC40LUg0YDQtdCx0LXQvdC60LBcblxuICAgIH0sIHtcbiAgICAgICAga2V5OiAnYnRuRWRpdExhcHNDbGljaycsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBidG5FZGl0TGFwc0NsaWNrKCkge1xuICAgICAgICAgICAgdmFyIGRvY0xhcHNJZCA9IHRoaXMucmVmc1snZG9jdW1lbnQnXS5kb2NEYXRhLnBhcmVudGlkO1xuXG4gICAgICAgICAgICAvLyDQvtGB0YPRidC10YHRgtCy0LjRgiDQv9C10YDQtdGF0L7QtCDQvdCwINC60LDRgNGC0L7Rh9C60YMg0LrQvtC90YLRgC3QsNCz0LXQvdGC0LBcbiAgICAgICAgICAgIHRoaXMucHJvcHMuaGlzdG9yeS5wdXNoKHtcbiAgICAgICAgICAgICAgICBwYXRobmFtZTogJy9sYXBzZWQvbGFwcy8nICsgZG9jTGFwc0lkLFxuICAgICAgICAgICAgICAgIHN0YXRlOiB7IHRlZW51c0lkOiB0aGlzLnN0YXRlLmRvY0lkLCBtb2R1bGU6IHRoaXMuc3RhdGUubW9kdWxlIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfV0pO1xuXG4gICAgcmV0dXJuIExhcHNlS2FhcnQ7XG59KFJlYWN0LlB1cmVDb21wb25lbnQpO1xuXG5MYXBzZUthYXJ0LnByb3BUeXBlcyA9IHtcbiAgICBkb2NJZDogUHJvcFR5cGVzLm51bWJlcixcbiAgICBpbml0RGF0YTogUHJvcFR5cGVzLm9iamVjdCxcbiAgICB1c2VyRGF0YTogUHJvcFR5cGVzLm9iamVjdFxufTtcblxuTGFwc2VLYWFydC5kZWZhdWx0UHJvcHMgPSB7XG4gICAgcGFyYW1zOiB7IGRvY0lkOiAwIH0sXG4gICAgaW5pdERhdGE6IHt9LFxuICAgIHVzZXJEYXRhOiB7fVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBMYXBzZUthYXJ0O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vZnJvbnRlbmQvZG9jcy9sYXBzZV9rYWFydC9kb2N1bWVudC9pbmRleC5qc3hcbi8vIG1vZHVsZSBpZCA9IDI1MFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7bW9kdWxlLmV4cG9ydHM9e2RvY1Jvdzp7ZGlzcGxheTonZmxleCcsZmxleERpcmVjdGlvbjoncm93Jy8qXHJcbiAgICAgICAgICAgICAgICBib3JkZXI6ICcxcHggc29saWQgYmx1ZSdcclxuICAgICAgICAqL30sZG9jQ29sdW1uOntkaXNwbGF5OidmbGV4JyxmbGV4RGlyZWN0aW9uOidjb2x1bW4nLC8qXHJcbiAgICAgICAgICAgICAgICBib3JkZXI6ICcxcHggc29saWQgeWVsbG93JyxcclxuICAgICAgICAqL3dpZHRoOic1MCUnfSxkb2M6e2Rpc3BsYXk6J2ZsZXgnLGZsZXhEaXJlY3Rpb246J2NvbHVtbicvKlxyXG4gICAgICAgICAgICAgICAgYm9yZGVyOiAnMXB4IHNvbGlkIGJyb3duJ1xyXG4gICAgICAgICovfSxncmlkOnttYWluVGFibGU6e3dpZHRoOicxMDAlJ30saGVhZGVyVGFibGU6e3dpZHRoOicxMDAlJ30sZ3JpZENvbnRhaW5lcjp7d2lkdGg6JzEwMCUnfX0sZ3JpZFJvdzp7LypcclxuICAgICAgICAgICAgICAgIGJvcmRlcjogJzFweCBzb2xpZCBibGFjaycsXHJcbiAgICAgICAgKi9iYWNrZ3JvdW5kQ29sb3I6J3doaXRlJyxwb3NpdGlvbjoncmVsYXRpdmUnLG1hcmdpbjonMTAlIDMwJSAxMCUgMzAlJyx3aWR0aDonYXV0bycsb3BhY2l0eTonMScsdG9wOicxMDBweCd9LGJ0bkVkaXROb206e3dpZHRoOidtaW4tY29udGVudCd9LHNlbGVjdE5vbTp7bWFyZ2luTGVmdDonMTBweCd9fTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2Zyb250ZW5kL2RvY3MvbGFwc2Vfa2FhcnQvZG9jdW1lbnQvc3R5bGVzLmpzXG4vLyBtb2R1bGUgaWQgPSAyNTVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG52YXIgRG9jdW1lbnRSZWdpc3RlciA9IHJlcXVpcmUoJy4vLi4vZG9jdW1lbnRzL2RvY3VtZW50cy5qc3gnKTtcbnZhciBJbnB1dE51bWJlciA9IHJlcXVpcmUoJy4uLy4uL2NvbXBvbmVudHMvaW5wdXQtbnVtYmVyL2lucHV0LW51bWJlci5qc3gnKTtcbnZhciBnZXRTdW0gPSByZXF1aXJlKCcuLy4uLy4uLy4uL2xpYnMvZ2V0U3VtJyk7XG52YXIgQnV0dG9uVXBsb2FkID0gcmVxdWlyZSgnLi8uLi8uLi9jb21wb25lbnRzL3VwbG9hZF9idXR0b24vaW5kZXguanN4Jyk7XG52YXIgVG9vbGJhckNvbnRhaW5lciA9IHJlcXVpcmUoJy4vLi4vLi4vY29tcG9uZW50cy90b29sYmFyLWNvbnRhaW5lci90b29sYmFyLWNvbnRhaW5lci5qc3gnKTtcbnZhciBEb2NSaWdodHMgPSByZXF1aXJlKCcuLy4uLy4uLy4uL2NvbmZpZy9kb2NfcmlnaHRzJyk7XG52YXIgY2hlY2tSaWdodHMgPSByZXF1aXJlKCcuLy4uLy4uLy4uL2xpYnMvY2hlY2tSaWdodHMnKTtcbnZhciBCdG5HZXRDc3YgPSByZXF1aXJlKCcuLy4uLy4uL2NvbXBvbmVudHMvYnV0dG9uLXJlZ2lzdGVyL2J1dHRvbi10YXNrL2luZGV4LmpzeCcpO1xuXG52YXIgc3R5bGVzID0gcmVxdWlyZSgnLi9zdHlsZXMnKTtcbnZhciBET0NfVFlQRV9JRCA9ICdMQVBTRV9UQUFCRUwnO1xudmFyIGRvY1JpZ2h0cyA9IERvY1JpZ2h0c1tET0NfVFlQRV9JRF0gPyBEb2NSaWdodHNbRE9DX1RZUEVfSURdIDogW107XG52YXIgRG9jQ29udGV4dCA9IHJlcXVpcmUoJy4vLi4vLi4vZG9jLWNvbnRleHQuanMnKTtcblxuLyoqXHJcbiAqINCa0LvQsNGB0YEg0YDQtdCw0LvQuNC30YPQtdGCINC00L7QutGD0LzQtdC90YIg0YHQv9GA0LDQstC+0YfQvdC40LrQsCDQv9GA0LjQt9C90LDQutC+0LIuXHJcbiAqL1xuXG52YXIgRG9jdW1lbnRzID0gZnVuY3Rpb24gKF9SZWFjdCRQdXJlQ29tcG9uZW50KSB7XG4gICAgX2luaGVyaXRzKERvY3VtZW50cywgX1JlYWN0JFB1cmVDb21wb25lbnQpO1xuXG4gICAgZnVuY3Rpb24gRG9jdW1lbnRzKHByb3BzKSB7XG4gICAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBEb2N1bWVudHMpO1xuXG4gICAgICAgIHZhciBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChEb2N1bWVudHMuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihEb2N1bWVudHMpKS5jYWxsKHRoaXMsIHByb3BzKSk7XG5cbiAgICAgICAgX3RoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBzdW1tYTogMCxcbiAgICAgICAgICAgIHNvb2R1c3R1czogMFxuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5yZW5kZXJlciA9IF90aGlzLnJlbmRlcmVyLmJpbmQoX3RoaXMpO1xuICAgICAgICBfdGhpcy5vbkNsaWNrSGFuZGxlciA9IF90aGlzLm9uQ2xpY2tIYW5kbGVyLmJpbmQoX3RoaXMpO1xuXG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG5cbiAgICBfY3JlYXRlQ2xhc3MoRG9jdW1lbnRzLCBbe1xuICAgICAgICBrZXk6ICdyZW5kZXInLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KERvY3VtZW50UmVnaXN0ZXIsIHsgaGlzdG9yeTogdGhpcy5wcm9wcy5oaXN0b3J5ID8gdGhpcy5wcm9wcy5oaXN0b3J5IDogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9kdWxlOiB0aGlzLnByb3BzLm1vZHVsZSxcbiAgICAgICAgICAgICAgICAgICAgcmVmOiAncmVnaXN0ZXInLFxuICAgICAgICAgICAgICAgICAgICBkb2NUeXBlSWQ6IERPQ19UWVBFX0lELFxuICAgICAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLFxuICAgICAgICAgICAgICAgICAgICByZW5kZXI6IHRoaXMucmVuZGVyZXIgfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dE51bWJlciwgeyB0aXRsZTogJ1N1bW1hIGtva2t1OicsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdzdW1tYV9rb2trdScsXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlOiBzdHlsZXMudG90YWwsXG4gICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LXN1bW1hJyxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IE51bWJlcih0aGlzLnN0YXRlLnN1bW1hKS50b0ZpeGVkKDIpIHx8IDAsXG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVkOiB0cnVlIH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXROdW1iZXIsIHsgdGl0bGU6ICdTb29kdXN0dXMga29ra3U6JyxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3Nvb2R1c3R1c19rb2trdScsXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlOiBzdHlsZXMudG90YWwsXG4gICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LXNvb2R1c3R1cycsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBOdW1iZXIodGhpcy5zdGF0ZS5zb29kdXN0dXMpLnRvRml4ZWQoMikgfHwgMCxcbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IHRydWVcblxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gY3VzdG9tIHJlbmRlclxuXG4gICAgfSwge1xuICAgICAgICBrZXk6ICdyZW5kZXJlcicsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXJlcihzZWxmKSB7XG4gICAgICAgICAgICB2YXIgdXNlclJvbGVzID0gRG9jQ29udGV4dC51c2VyRGF0YSA/IERvY0NvbnRleHQudXNlckRhdGEucm9sZXMgOiBbXTtcblxuICAgICAgICAgICAgdmFyIHN1bW1hID0gc2VsZi5ncmlkRGF0YSAmJiBzZWxmLmdyaWREYXRhLmxlbmd0aCA/IHNlbGYuZ3JpZERhdGFbMF0uc3VtbWFfa29ra3UgOiAwO1xuICAgICAgICAgICAgdmFyIHNvb2R1c3R1cyA9IHNlbGYuZ3JpZERhdGEgJiYgc2VsZi5ncmlkRGF0YS5sZW5ndGggPyBzZWxmLmdyaWREYXRhWzBdLnNvb2R1c3R1c19rb2trdSA6IDA7XG5cbiAgICAgICAgICAgIGlmIChzdW1tYSB8fCBzb29kdXN0dXMpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHsgc3VtbWE6IHN1bW1hLCByZWFkOiBzZWxmLmdyaWREYXRhLmxlbmd0aCwgc29vZHVzdHVzOiBzb29kdXN0dXMgfSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdzZWxmLmdyaWREYXRhJywgc2VsZi5ncmlkRGF0YSk7XG4gICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICBUb29sYmFyQ29udGFpbmVyLFxuICAgICAgICAgICAgICAgIG51bGwsXG4gICAgICAgICAgICAgICAgY2hlY2tSaWdodHModXNlclJvbGVzLCBkb2NSaWdodHMsICdpbXBvcnRUYWFiZWwnKSA/IFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnV0dG9uVXBsb2FkLCB7XG4gICAgICAgICAgICAgICAgICAgIHJlZjogJ2J0blVwbG9hZCcsXG4gICAgICAgICAgICAgICAgICAgIGRvY1R5cGVJZDogRE9DX1RZUEVfSUQsXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s6IHRoaXMuaGFuZGxlQ2xpY2ssXG4gICAgICAgICAgICAgICAgICAgIHNob3c6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIG1pbWVUeXBlczogJy5jc3YnXG4gICAgICAgICAgICAgICAgfSkgOiBudWxsLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnRuR2V0Q3N2LCB7XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiAnU2FhbWEgQ1NWIGZhaWwnLFxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrOiB0aGlzLm9uQ2xpY2tIYW5kbGVyLFxuICAgICAgICAgICAgICAgICAgICBzaG93RGF0ZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIHJlZjogJ2J0bi1nZXRjc3YnXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG5cbiAgICAgICAgLy9oYW5kbGVyINC00LvRjyDRgdC+0LHRi9GC0LjRjyDQutC70LjQuiDQvdCwINC60L3QvtC/0LrQsNGFINC/0LDQvdC10LvQuFxuXG4gICAgfSwge1xuICAgICAgICBrZXk6ICdvbkNsaWNrSGFuZGxlcicsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBvbkNsaWNrSGFuZGxlcihldmVudCkge1xuICAgICAgICAgICAgdmFyIERvYyA9IHRoaXMucmVmc1sncmVnaXN0ZXInXTtcbiAgICAgICAgICAgIHZhciBpZHMgPSBuZXcgU2V0KCk7IC8vINGB0Y7QtNCwINC/0LjRiNC10Lwg0LjQtCDRgdGH0LXRgtC+0LwsINC60L7RgtC+0YDRi9C1INC/0L7QtCDQvtCx0YDQsNCx0L7RgtC60YNcbiAgICAgICAgICAgIC8vU2FhbWEgQ1NWIGZhaWxcbiAgICAgICAgICAgIGlmIChEb2MuZ3JpZERhdGEgJiYgRG9jLmdyaWREYXRhLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIC8v0LTQtdC70LDQtdC8INGA0LXQtNCw0LnRgNC10LrRgiDQvdCwINC60L7QvdGE0LjQs9GD0YDQsNGG0LjRjlxuICAgICAgICAgICAgICAgIHZhciBzcWxXaGVyZSA9IERvYy5zdGF0ZS5zcWxXaGVyZTtcbiAgICAgICAgICAgICAgICB2YXIgdXJsID0gJy9yZXBvcnRzLycgKyBET0NfVFlQRV9JRC50b0xvd2VyQ2FzZSgpICsgJy8nICsgRG9jQ29udGV4dC51c2VyRGF0YS51dWlkO1xuICAgICAgICAgICAgICAgIHZhciBwYXJhbXMgPSBlbmNvZGVVUklDb21wb25lbnQoJycgKyBzcWxXaGVyZSk7XG4gICAgICAgICAgICAgICAgd2luZG93Lm9wZW4odXJsICsgJy8nICsgcGFyYW1zKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgRG9jLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICAgICAgd2FybmluZzogJ01pdHRlIMO8aHRlZ2kga2lyamVkIGxlaWRudWQnLCAvLyDRgdGC0YDQvtC60LAg0LjQt9Cy0LXRidC10L3QuNC5XG4gICAgICAgICAgICAgICAgICAgIHdhcm5pbmdUeXBlOiAnbm90VmFsaWQnXG5cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1dKTtcblxuICAgIHJldHVybiBEb2N1bWVudHM7XG59KFJlYWN0LlB1cmVDb21wb25lbnQpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IERvY3VtZW50cztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2Zyb250ZW5kL2RvY3MvbGFwc2VfdGFhYmVsL2luZGV4LmpzeFxuLy8gbW9kdWxlIGlkID0gMjU2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0Jzttb2R1bGUuZXhwb3J0cz17Z3JpZDp7bWFpblRhYmxlOnt3aWR0aDonMTAwJScsdGQ6e2JvcmRlcjonMXB4IHNvbGlkIGxpZ2h0R3JleScsZGlzcGxheTondGFibGUtY2VsbCcscGFkZGluZ0xlZnQ6JzVweCd9LHBvc2l0aW9uOidpbml0aWFsJ30saGVhZGVyVGFibGU6e3dpZHRoOicxMDAlJ30sZ3JpZENvbnRhaW5lcjp7d2lkdGg6Jzk1JSd9fSx0b3RhbDp7d2lkdGg6J2F1dG8nfX07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9mcm9udGVuZC9kb2NzL2xhcHNlX3RhYWJlbC9zdHlsZXMuanNcbi8vIG1vZHVsZSBpZCA9IDI1OFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIFByb3BUeXBlcyA9IHJlcXVpcmUoJ3Byb3AtdHlwZXMnKTtcbnZhciBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5cbnZhciBEb2N1bWVudFRlbXBsYXRlID0gcmVxdWlyZSgnLi4vLi4vZG9jdW1lbnRUZW1wbGF0ZS9pbmRleC5qc3gnKSxcbiAgICBJbnB1dE51bWJlciA9IHJlcXVpcmUoJy4uLy4uLy4uL2NvbXBvbmVudHMvaW5wdXQtbnVtYmVyL2lucHV0LW51bWJlci5qc3gnKSxcbiAgICBCdXR0b25FZGl0ID0gcmVxdWlyZSgnLi4vLi4vLi4vY29tcG9uZW50cy9idXR0b24tcmVnaXN0ZXIvYnV0dG9uLXJlZ2lzdGVyLWVkaXQvYnV0dG9uLXJlZ2lzdGVyLWVkaXQuanN4JyksXG4gICAgU2VsZWN0ID0gcmVxdWlyZSgnLi4vLi4vLi4vY29tcG9uZW50cy9zZWxlY3Qvc2VsZWN0LmpzeCcpLFxuICAgIFNlbGVjdERhdGEgPSByZXF1aXJlKCcuLi8uLi8uLi9jb21wb25lbnRzL3NlbGVjdC1kYXRhL3NlbGVjdC1kYXRhLmpzeCcpLFxuICAgIFRleHRBcmVhID0gcmVxdWlyZSgnLi4vLi4vLi4vY29tcG9uZW50cy90ZXh0LWFyZWEvdGV4dC1hcmVhLmpzeCcpLFxuICAgIENoZWNrQm94ID0gcmVxdWlyZSgnLi4vLi4vLi4vY29tcG9uZW50cy9pbnB1dC1jaGVja2JveC9pbnB1dC1jaGVja2JveC5qc3gnKSxcbiAgICBMb2FkaW5nID0gcmVxdWlyZSgnLi8uLi8uLi8uLi9jb21wb25lbnRzL2xvYWRpbmcvaW5kZXguanN4JyksXG4gICAgc3R5bGVzID0gcmVxdWlyZSgnLi9zdHlsZXMnKTtcblxudmFyIERvY0NvbnRleHQgPSByZXF1aXJlKCcuLi8uLi8uLi9kb2MtY29udGV4dCcpO1xuXG52YXIgTGFwcyA9IGZ1bmN0aW9uIChfUmVhY3QkUHVyZUNvbXBvbmVudCkge1xuICAgIF9pbmhlcml0cyhMYXBzLCBfUmVhY3QkUHVyZUNvbXBvbmVudCk7XG5cbiAgICBmdW5jdGlvbiBMYXBzKHByb3BzKSB7XG4gICAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBMYXBzKTtcblxuICAgICAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoTGFwcy5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKExhcHMpKS5jYWxsKHRoaXMsIHByb3BzKSk7XG5cbiAgICAgICAgX3RoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBtb2R1bGU6ICdsYXBzZWQnLFxuICAgICAgICAgICAgbG9hZGVkRGF0YTogZmFsc2UsXG4gICAgICAgICAgICBkb2NJZDogcHJvcHMuZG9jSWQgPyBwcm9wcy5kb2NJZCA6IE51bWJlcihwcm9wcy5tYXRjaC5wYXJhbXMuZG9jSWQpLFxuICAgICAgICAgICAgbGFwc0lkOiBwcm9wcy5sYXBzSWQgPyBwcm9wcy5sYXBzSWQgOiBwcm9wcy5tYXRjaC5wYXJhbXMucGFyYW1JZCA/IE51bWJlcihwcm9wcy5tYXRjaC5wYXJhbXMucGFyYW1JZCkgOiAwXG4gICAgICAgIH07XG5cbiAgICAgICAgX3RoaXMucmVuZGVyZXIgPSBfdGhpcy5yZW5kZXJlci5iaW5kKF90aGlzKTtcbiAgICAgICAgX3RoaXMuaGFuZGxlUGFnZUNsaWNrID0gX3RoaXMuaGFuZGxlUGFnZUNsaWNrLmJpbmQoX3RoaXMpO1xuICAgICAgICBfdGhpcy5oYW5kbGVHcmlkQnRuQ2xpY2sgPSBfdGhpcy5oYW5kbGVHcmlkQnRuQ2xpY2suYmluZChfdGhpcyk7XG4gICAgICAgIF90aGlzLmJ0bkVkaXROb21DbGljayA9IF90aGlzLmJ0bkVkaXROb21DbGljay5iaW5kKF90aGlzKTtcbiAgICAgICAgX3RoaXMuYnRuRWRpdExhcHNDbGljayA9IF90aGlzLmJ0bkVkaXRMYXBzQ2xpY2suYmluZChfdGhpcyk7XG4gICAgICAgIF90aGlzLmxhcHNJZENoYW5nZWhhbmRsZXIgPSBfdGhpcy5sYXBzSWRDaGFuZ2VoYW5kbGVyLmJpbmQoX3RoaXMpO1xuXG4gICAgICAgIF90aGlzLnBhZ2VzID0gW3sgcGFnZU5hbWU6ICdMYXBzZSB0YWFiZWwnLCBkb2NUeXBlSWQ6ICdMQVBTRV9UQUFCRUwnIH1dO1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuXG4gICAgX2NyZWF0ZUNsYXNzKExhcHMsIFt7XG4gICAgICAgIGtleTogJ2NvbXBvbmVudERpZE1vdW50JyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgICAgICAgaWYgKCF0aGlzLnN0YXRlLmxhcHNJZCAmJiBEb2NDb250ZXh0WydsYXBzJ10pIHtcbiAgICAgICAgICAgICAgICAvL9C10YHRgtGMINC30L3QsNGH0LXQvdC40LUg0LjQtCDRgNC10LHQtdC90LrQsFxuICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoeyBsYXBzSWQ6IERvY0NvbnRleHRbJ2xhcHMnXSB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0sIHtcbiAgICAgICAga2V5OiAnY29tcG9uZW50RGlkVXBkYXRlJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudERpZFVwZGF0ZShwcmV2UHJvcHMsIHByZXZTdGF0ZSkge1xuICAgICAgICAgICAgLy8g0L7QsdC90L7QstC40Lwg0YHQv9GA0LDQstC+0YfQvdC40LrQuCDRgNC10LHQtdC90LrQsFxuICAgICAgICAgICAgaWYgKHRoaXMuc3RhdGUubGFwc0lkICE9PSBwcmV2U3RhdGUubGFwc0lkKSB7XG4gICAgICAgICAgICAgICAgdmFyIGRvYyA9IHRoaXMucmVmc1snZG9jdW1lbnQnXTtcbiAgICAgICAgICAgICAgICBkb2MuY3JlYXRlTGlicygpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSwge1xuICAgICAgICBrZXk6ICdyZW5kZXInLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgICAgICAgdmFyIGZpbHRlciA9IHRoaXMuc3RhdGUubGFwc0lkID8gJ3doZXJlIGxhcHNpZCA9ICcgKyB0aGlzLnN0YXRlLmxhcHNJZCA6ICcnO1xuXG4gICAgICAgICAgICB2YXIgTElCUkFSSUVTID0gW3sgaWQ6ICdsYXBzZV9rYWFydCcsIGZpbHRlcjogZmlsdGVyIH1dO1xuXG4gICAgICAgICAgICB2YXIgaW5pdERhdGEgPSB0aGlzLnByb3BzLmluaXREYXRhID8gdGhpcy5wcm9wcy5pbml0RGF0YSA6IHt9O1xuXG4gICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChEb2N1bWVudFRlbXBsYXRlLCB7IGRvY0lkOiB0aGlzLnN0YXRlLmRvY0lkLFxuICAgICAgICAgICAgICAgIHJlZjogJ2RvY3VtZW50JyxcbiAgICAgICAgICAgICAgICBkb2NUeXBlSWQ6ICdMQVBTRV9UQUFCRUwnLFxuICAgICAgICAgICAgICAgIG1vZHVsZTogdGhpcy5zdGF0ZS5tb2R1bGUsXG4gICAgICAgICAgICAgICAgaW5pdERhdGE6IGluaXREYXRhLFxuICAgICAgICAgICAgICAgIGxpYnM6IExJQlJBUklFUyxcbiAgICAgICAgICAgICAgICBwYWdlczogdGhpcy5wYWdlcyxcbiAgICAgICAgICAgICAgICByZW5kZXJlcjogdGhpcy5yZW5kZXJlcixcbiAgICAgICAgICAgICAgICBoYW5kbGVHcmlkQnRuQ2xpY2s6IHRoaXMuaGFuZGxlR3JpZEJ0bkNsaWNrLFxuICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHRoaXMucHJvcHMuaGlzdG9yeVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICAvKipcclxuICAgICAgICAgKtCS0LXRgNC90LXRgiDQutCw0YHRgtC+0LzQvdGL0LUg0LrQvtC80L/QvtC90LXQvdGC0Ysg0LTQvtC60YPQvNC10L3RgtCwXHJcbiAgICAgICAgICovXG5cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ3JlbmRlcmVyJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcmVyKHNlbGYpIHtcbiAgICAgICAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICAgICAgICAvL3x8ICFzZWxmLnN0YXRlLmxvYWRlZExpYnNcbiAgICAgICAgICAgIGlmICghc2VsZiB8fCAhc2VsZi5kb2NEYXRhIHx8ICFzZWxmLmxpYnNbJ2xhcHNlX2thYXJ0J10pIHtcbiAgICAgICAgICAgICAgICAvLyDQvdC1INC30LDQs9GA0YPQttC10L3RiyDQtNCw0L3QvdGL0LVcbiAgICAgICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2MgfSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChMb2FkaW5nLCB7IGxhYmVsOiAnTGFhZGltaW5lLi4uJyB9KVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vINC90LUg0YPRgdC/0LXQstCw0LXRgiDQv9C+0LTQs9GA0YPQt9C40YLRjNGB0Y8g0YHQv9GA0LDQstC+0YfQvdC40LosINC/0LXRgNC10LPRgNGD0LfQutCwINGE0L7RgNC80YtcbiAgICAgICAgICAgIGlmICghc2VsZi5saWJzWydsYXBzZV9rYWFydCddLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBfdGhpczIuZm9yY2VVcGRhdGUoKTtcbiAgICAgICAgICAgICAgICB9LCAxKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIGlzRWRpdE1vZGUgPSBzZWxmLnN0YXRlLmVkaXRlZDtcblxuICAgICAgICAgICAgaWYgKChzZWxmLmRvY0RhdGEuaWQgPT09IDAgfHwgIXNlbGYuZG9jRGF0YS5wYXJlbnRpZCkgJiYgdGhpcy5zdGF0ZS5sYXBzSWQpIHtcbiAgICAgICAgICAgICAgICAvL25ldyByZWNvcmRcbiAgICAgICAgICAgICAgICBzZWxmLmRvY0RhdGEucGFyZW50aWQgPSB0aGlzLnN0YXRlLmxhcHNJZDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKCF0aGlzLnN0YXRlLmxhcHNJZCAmJiBzZWxmLmRvY0RhdGEucGFyZW50aWQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHsgbGFwc0lkOiBzZWxmLmRvY0RhdGEucGFyZW50aWQgfSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHZhciBrcHYgPSBuZXcgRGF0ZSgpLFxuICAgICAgICAgICAgICAgIGt1dSA9IGtwdi5nZXRNb250aCgpLFxuICAgICAgICAgICAgICAgIGFhc3RhID0ga3B2LmdldEZ1bGxZZWFyKCk7XG5cbiAgICAgICAgICAgIHZhciBidXR0b25FZGl0Tm9tID0gc3R5bGVzLmJ0bkVkaXROb207XG5cbiAgICAgICAgICAgIC8v0YTQuNC70YzRgtGAINC90LAg0LjRgdC/0L7Qu9GM0LfRg9C10LzRiyDQvdC+0LzQtdC90LrQu9Cw0YLRg9GA0YtcbiAgICAgICAgICAgIHZhciBub21EYXRhID0gc2VsZi5saWJzWydsYXBzZV9rYWFydCddID8gc2VsZi5saWJzWydsYXBzZV9rYWFydCddLmZpbHRlcihmdW5jdGlvbiAocm93KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJvdy5sYXBzaWQgPT09IHNlbGYuZG9jRGF0YS5wYXJlbnRpZDtcbiAgICAgICAgICAgIH0pIDogW107XG5cbiAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2MgfSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY1JvdyB9LFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jQ29sdW1uIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFNlbGVjdERhdGEsIHsgdGl0bGU6ICdMYXBzZSBuaW1pOicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3BhcmVudGlkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaWJOYW1lOiAnbGFwcycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3FsRmllbGRzOiBbJ25pbWknLCAnaXNpa3Vrb29kJ10sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogW10sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHNlbGYuZG9jRGF0YS5wYXJlbnRpZCB8fCAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHRWYWx1ZTogc2VsZi5kb2NEYXRhLm5pbWksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYm91bmRUb0dyaWQ6ICduaW1pJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3VuZFRvRGF0YTogJ25pbWknLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ3NlbGVjdC1wYXJlbnRpZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnRuRGVsZXRlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyRGF0YTogc2VsZi51c2VyRGF0YSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogdGhpcy5sYXBzSWRDaGFuZ2VoYW5kbGVyLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiAhaXNFZGl0TW9kZSB9KVxuICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jQ29sdW1uIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEJ1dHRvbkVkaXQsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdidG5FZGl0JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogJ011dWRhJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrOiB0aGlzLmJ0bkVkaXRMYXBzQ2xpY2ssXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvdzogIWlzRWRpdE1vZGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU6IGJ1dHRvbkVkaXROb20sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IGZhbHNlXG4gICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY1JvdyB9LFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jQ29sdW1uIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFNlbGVjdCwgeyB0aXRsZTogJ0tvb2Q6JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnbGFwc2Vfa2FhcnRfaWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpYnM6ICdsYXBzZV9rYWFydCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogbm9tRGF0YSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogc2VsZi5kb2NEYXRhLmxhcHNlX2thYXJ0X2lkIHx8IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdFZhbHVlOiBzZWxmLmRvY0RhdGEubmltZXR1cyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdzZWxlY3QtbGFwc2Vfa2FhcnRfaWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJ0bkRlbGV0ZTogaXNFZGl0TW9kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkT25seTogIWlzRWRpdE1vZGUgfSlcbiAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY0NvbHVtbiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChCdXR0b25FZGl0LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAnYnRuRWRpdCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6ICdNdXVkYScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljazogdGhpcy5idG5FZGl0Tm9tQ2xpY2ssXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvdzogIWlzRWRpdE1vZGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU6IGJ1dHRvbkVkaXROb20sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IGZhbHNlXG4gICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY1JvdyB9LFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jQ29sdW1uIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0TnVtYmVyLCB7IHJlZjogJ2lucHV0LWtvZ3VzJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ0tvZ3VzOicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2tvZ3VzJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogTnVtYmVyKHNlbGYuZG9jRGF0YS5rb2d1cykgfHwgTnVtYmVyKG51bGwpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiAhaXNFZGl0TW9kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICFzZWxmLmRvY0RhdGEuaWQgfHwgQm9vbGVhbihzZWxmLmRvY0RhdGEudW1iZXJhcnZlc3R1cykgPyBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0TnVtYmVyLCB7IHJlZjogJ2lucHV0LWhpbmQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiAnU3VtbWE6JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnaGluZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IE51bWJlcihzZWxmLmRvY0RhdGEuaGluZCkgfHwgTnVtYmVyKDApLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiAhaXNFZGl0TW9kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSB9KSA6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KENoZWNrQm94LCB7IHRpdGxlOiAnS2FzIFxceEZDbWJlcmFydmVzdHVzPycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3VtYmVyYXJ2ZXN0dXMnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBCb29sZWFuKHNlbGYuZG9jRGF0YS51bWJlcmFydmVzdHVzKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdjaGVja2JveF9rYXNfdW1iZXJhcnZlc3R1cycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IHNlbGYuaGFuZGxlSW5wdXRDaGFuZ2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFpc0VkaXRNb2RlXG4gICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXROdW1iZXIsIHsgcmVmOiAnaW5wdXQta3V1JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ0t1dTonLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdrdXUnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBOdW1iZXIoc2VsZi5kb2NEYXRhLmt1dSkgfHwgTnVtYmVyKGt1dSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFpc0VkaXRNb2RlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiBzZWxmLmhhbmRsZUlucHV0Q2hhbmdlIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dE51bWJlciwgeyByZWY6ICdpbnB1dC1hYXN0YScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU6ICdBYXN0YTonLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdhYXN0YScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IE51bWJlcihzZWxmLmRvY0RhdGEuYWFzdGEpIHx8IE51bWJlcihhYXN0YSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFpc0VkaXRNb2RlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiBzZWxmLmhhbmRsZUlucHV0Q2hhbmdlIH0pXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jUm93IH0sXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoVGV4dEFyZWEsIHsgdGl0bGU6ICdNXFx4RTRya3VzZWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ211dWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAndGV4dGFyZWEtbXV1ZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBzZWxmLmRvY0RhdGEubXV1ZCB8fCAnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiAhaXNFZGl0TW9kZSB9KVxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ2hhbmRsZVBhZ2VDbGljaycsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBoYW5kbGVQYWdlQ2xpY2socGFnZURvY1R5cGVJZCkge1xuICAgICAgICAgICAgLy8gICAgICAgIGRvY3VtZW50LmxvY2F0aW9uLmhyZWYgPSBgL2xhcHNlZC8ke3BhZ2VEb2NUeXBlSWR9L2A7Ly9AdG9kbyDQntCx0L3QvtCy0LjRgtGMXG4gICAgICAgICAgICB0aGlzLnByb3BzLmhpc3RvcnkucHVzaCgnL2xhcHNlZC8nICsgcGFnZURvY1R5cGVJZCk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyDQvtCx0YDQsNCx0L7RgtGH0LjQuiDRgdC+0LHRi9GC0LjRjyDQutC70LjQuiDQvdCwINCz0YDQuNC00LUg0YDQvtC00LjRgtC10LvQtdC5XG5cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ2hhbmRsZUdyaWRCdG5DbGljaycsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBoYW5kbGVHcmlkQnRuQ2xpY2soYnRuTmFtZSwgYWN0aXZlUm93LCBpZCwgZG9jVHlwZUlkKSB7XG4gICAgICAgICAgICBzd2l0Y2ggKGJ0bk5hbWUpIHtcbiAgICAgICAgICAgICAgICBjYXNlIFwiZWRpdFwiOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLnByb3BzLmhpc3RvcnkucHVzaCgnL2xhcHNlZC8nICsgZG9jVHlwZUlkICsgJy8nICsgaWQgKyAnLzAnKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSBcImFkZFwiOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLnByb3BzLmhpc3RvcnkucHVzaCgnL2xhcHNlZC8nICsgZG9jVHlwZUlkICsgJy8wLycgKyB0aGlzLnN0YXRlLmRvY0lkKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ1ZpZ2FuZSBjbGljaycpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy/QvtCx0YDQsNCx0L7RgtGH0LjQuiDRgdC+0LHRi9GC0LjRjyDQv9C+INC60LvQuNC60YMg0LrQvdC+0L/QutC4INCg0LXQtNCw0LrRgtC40YDQvtCy0LDQvdC40LUg0YHQvdC+0LzQtdC90LrQu9Cw0YLRg9GA0YtcblxuICAgIH0sIHtcbiAgICAgICAga2V5OiAnYnRuRWRpdE5vbUNsaWNrJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGJ0bkVkaXROb21DbGljaygpIHtcbiAgICAgICAgICAgIHZhciBkb2NJZCA9IHRoaXMucmVmc1snZG9jdW1lbnQnXS5kb2NEYXRhLmxhcHNlX2thYXJ0X2lkO1xuXG4gICAgICAgICAgICAvLyDQvtGB0YPRidC10YHRgtCy0LjRgiDQv9C10YDQtdGF0L7QtCDQvdCwINC60LDRgNGC0L7Rh9C60YMg0LrQvtC90YLRgC3QsNCz0LXQvdGC0LBcbiAgICAgICAgICAgIHRoaXMucHJvcHMuaGlzdG9yeS5wdXNoKCcvbGFwc2VkL2xhcHNlX2thYXJ0LycgKyBkb2NJZCk7XG4gICAgICAgIH1cblxuICAgICAgICAvL9C+0LHRgNCw0LHQvtGC0YfQuNC6INGB0L7QsdGL0YLQuNGPINC/0L4g0LrQu9C40LrRgyDQutC90L7Qv9C60Lgg0KDQtdC00LDQutGC0LjRgNC+0LLQsNC90LjQtSDRgNC10LHQtdC90LrQsFxuXG4gICAgfSwge1xuICAgICAgICBrZXk6ICdidG5FZGl0TGFwc0NsaWNrJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGJ0bkVkaXRMYXBzQ2xpY2soKSB7XG4gICAgICAgICAgICB2YXIgZG9jTGFwc0lkID0gdGhpcy5yZWZzWydkb2N1bWVudCddLmRvY0RhdGEucGFyZW50aWQ7XG5cbiAgICAgICAgICAgIC8vINC+0YHRg9GJ0LXRgdGC0LLQuNGCINC/0LXRgNC10YXQvtC0INC90LAg0LrQsNGA0YLQvtGH0LrRgyDQutC+0L3RgtGALdCw0LPQtdC90YLQsFxuICAgICAgICAgICAgdGhpcy5wcm9wcy5oaXN0b3J5LnB1c2goJy9sYXBzZWQvbGFwcy8nICsgZG9jTGFwc0lkKTtcbiAgICAgICAgfVxuICAgIH0sIHtcbiAgICAgICAga2V5OiAnbGFwc0lkQ2hhbmdlaGFuZGxlcicsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBsYXBzSWRDaGFuZ2VoYW5kbGVyKGlucHV0TmFtZSwgaW5wdXRWYWx1ZSkge1xuICAgICAgICAgICAgdmFyIERvYyA9IHRoaXMucmVmc1snZG9jdW1lbnQnXTtcblxuICAgICAgICAgICAgLy8g0L7RgtC00LDRgtGMINC30L3QsNGH0LXQvdC40LUg0LTQvtC60YPQvNC10L3RgtGDXG4gICAgICAgICAgICBEb2MuaGFuZGxlSW5wdXRDaGFuZ2UoaW5wdXROYW1lLCBpbnB1dFZhbHVlKTtcblxuICAgICAgICAgICAgLy8g0L7QsdC90L7QstC40YLRjCDRgdC/0YDQsNCy0L7Rh9C90LjQulxuICAgICAgICAgICAgRG9jLmNyZWF0ZUxpYnMoKTtcbiAgICAgICAgfVxuICAgIH1dKTtcblxuICAgIHJldHVybiBMYXBzO1xufShSZWFjdC5QdXJlQ29tcG9uZW50KTtcblxuTGFwcy5wcm9wVHlwZXMgPSB7XG4gICAgZG9jSWQ6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgaW5pdERhdGE6IFByb3BUeXBlcy5vYmplY3QsXG4gICAgdXNlckRhdGE6IFByb3BUeXBlcy5vYmplY3Rcbn07XG5cbkxhcHMuZGVmYXVsdFByb3BzID0ge1xuICAgIHBhcmFtczogeyBkb2NJZDogMCB9LFxuICAgIGluaXREYXRhOiB7fSxcbiAgICB1c2VyRGF0YToge31cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gTGFwcztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2Zyb250ZW5kL2RvY3MvbGFwc2VfdGFhYmVsL2RvY3VtZW50L2luZGV4LmpzeFxuLy8gbW9kdWxlIGlkID0gMjU5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0Jzttb2R1bGUuZXhwb3J0cz17ZG9jUm93OntkaXNwbGF5OidmbGV4JyxmbGV4RGlyZWN0aW9uOidyb3cnLypcclxuICAgICAgICAgICAgICAgIGJvcmRlcjogJzFweCBzb2xpZCBibHVlJ1xyXG4gICAgICAgICovfSxkb2NDb2x1bW46e2Rpc3BsYXk6J2ZsZXgnLGZsZXhEaXJlY3Rpb246J2NvbHVtbicsLypcclxuICAgICAgICAgICAgICAgIGJvcmRlcjogJzFweCBzb2xpZCB5ZWxsb3cnLFxyXG4gICAgICAgICovd2lkdGg6JzUwJSd9LGRvYzp7ZGlzcGxheTonZmxleCcsZmxleERpcmVjdGlvbjonY29sdW1uJy8qXHJcbiAgICAgICAgICAgICAgICBib3JkZXI6ICcxcHggc29saWQgYnJvd24nXHJcbiAgICAgICAgKi99LGdyaWQ6e21haW5UYWJsZTp7d2lkdGg6JzEwMCUnfSxoZWFkZXJUYWJsZTp7d2lkdGg6JzEwMCUnfSxncmlkQ29udGFpbmVyOnt3aWR0aDonMTAwJSd9fSxncmlkUm93OnsvKlxyXG4gICAgICAgICAgICAgICAgYm9yZGVyOiAnMXB4IHNvbGlkIGJsYWNrJyxcclxuICAgICAgICAqL2JhY2tncm91bmRDb2xvcjond2hpdGUnLHBvc2l0aW9uOidyZWxhdGl2ZScsbWFyZ2luOicxMCUgMzAlIDEwJSAzMCUnLHdpZHRoOidhdXRvJyxvcGFjaXR5OicxJyx0b3A6JzEwMHB4J30sYnRuRWRpdE5vbTp7d2lkdGg6J21pbi1jb250ZW50J319O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vZnJvbnRlbmQvZG9jcy9sYXBzZV90YWFiZWwvZG9jdW1lbnQvc3R5bGVzLmpzXG4vLyBtb2R1bGUgaWQgPSAyNjBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG52YXIgRG9jdW1lbnRSZWdpc3RlciA9IHJlcXVpcmUoJy4vLi4vZG9jdW1lbnRzL2RvY3VtZW50cy5qc3gnKTtcblxudmFyIHN0eWxlcyA9IHJlcXVpcmUoJy4vc3R5bGVzJyk7XG52YXIgRE9DX1RZUEVfSUQgPSAnUEFFVkFfVEFBQkVMJztcbnZhciBEb2NDb250ZXh0ID0gcmVxdWlyZSgnLi8uLi8uLi9kb2MtY29udGV4dC5qcycpO1xuXG4vKipcclxuICog0JrQu9Cw0YHRgSDRgNC10LDQu9C40LfRg9C10YIg0LTQvtC60YPQvNC10L3RgiDRgdC/0YDQsNCy0L7Rh9C90LjQutCwINC/0YDQuNC30L3QsNC60L7Qsi5cclxuICovXG5cbnZhciBEb2N1bWVudHMgPSBmdW5jdGlvbiAoX1JlYWN0JFB1cmVDb21wb25lbnQpIHtcbiAgICBfaW5oZXJpdHMoRG9jdW1lbnRzLCBfUmVhY3QkUHVyZUNvbXBvbmVudCk7XG5cbiAgICBmdW5jdGlvbiBEb2N1bWVudHMocHJvcHMpIHtcbiAgICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIERvY3VtZW50cyk7XG5cbiAgICAgICAgdmFyIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKERvY3VtZW50cy5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKERvY3VtZW50cykpLmNhbGwodGhpcywgcHJvcHMpKTtcblxuICAgICAgICBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIGtvZ3VzOiAwXG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLnJlbmRlcmVyID0gX3RoaXMucmVuZGVyZXIuYmluZChfdGhpcyk7XG5cbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cblxuICAgIF9jcmVhdGVDbGFzcyhEb2N1bWVudHMsIFt7XG4gICAgICAgIGtleTogJ3JlbmRlcicsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRG9jdW1lbnRSZWdpc3RlciwgeyBpbml0RGF0YTogdGhpcy5wcm9wcy5pbml0RGF0YSxcbiAgICAgICAgICAgICAgICAgICAgaGlzdG9yeTogdGhpcy5wcm9wcy5oaXN0b3J5ID8gdGhpcy5wcm9wcy5oaXN0b3J5IDogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9kdWxlOiB0aGlzLnByb3BzLm1vZHVsZSxcbiAgICAgICAgICAgICAgICAgICAgcmVmOiAncmVnaXN0ZXInLFxuICAgICAgICAgICAgICAgICAgICBkb2NUeXBlSWQ6IERPQ19UWVBFX0lELFxuICAgICAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLFxuICAgICAgICAgICAgICAgICAgICByZW5kZXI6IHRoaXMucmVuZGVyZXIgfSlcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBjdXN0b20gcmVuZGVyXG5cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ3JlbmRlcmVyJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcmVyKHNlbGYpIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgfV0pO1xuXG4gICAgcmV0dXJuIERvY3VtZW50cztcbn0oUmVhY3QuUHVyZUNvbXBvbmVudCk7XG5cbm1vZHVsZS5leHBvcnRzID0gRG9jdW1lbnRzO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vZnJvbnRlbmQvZG9jcy9wYWV2YV90YWFiZWwvaW5kZXguanN4XG4vLyBtb2R1bGUgaWQgPSAyNjFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO21vZHVsZS5leHBvcnRzPXtncmlkOnttYWluVGFibGU6e3dpZHRoOicxMDAlJyx0ZDp7Ym9yZGVyOicxcHggc29saWQgbGlnaHRHcmV5JyxkaXNwbGF5Oid0YWJsZS1jZWxsJyxwYWRkaW5nTGVmdDonNXB4J319LGhlYWRlclRhYmxlOnt3aWR0aDonMTAwJSd9LGdyaWRDb250YWluZXI6e3dpZHRoOic5NSUnfX0sdG90YWw6e3dpZHRoOidhdXRvJ319O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vZnJvbnRlbmQvZG9jcy9wYWV2YV90YWFiZWwvc3R5bGVzLmpzXG4vLyBtb2R1bGUgaWQgPSAyNjJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgX3NsaWNlZFRvQXJyYXkgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIHNsaWNlSXRlcmF0b3IoYXJyLCBpKSB7IHZhciBfYXJyID0gW107IHZhciBfbiA9IHRydWU7IHZhciBfZCA9IGZhbHNlOyB2YXIgX2UgPSB1bmRlZmluZWQ7IHRyeSB7IGZvciAodmFyIF9pID0gYXJyW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3M7ICEoX24gPSAoX3MgPSBfaS5uZXh0KCkpLmRvbmUpOyBfbiA9IHRydWUpIHsgX2Fyci5wdXNoKF9zLnZhbHVlKTsgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrOyB9IH0gY2F0Y2ggKGVycikgeyBfZCA9IHRydWU7IF9lID0gZXJyOyB9IGZpbmFsbHkgeyB0cnkgeyBpZiAoIV9uICYmIF9pW1wicmV0dXJuXCJdKSBfaVtcInJldHVyblwiXSgpOyB9IGZpbmFsbHkgeyBpZiAoX2QpIHRocm93IF9lOyB9IH0gcmV0dXJuIF9hcnI7IH0gcmV0dXJuIGZ1bmN0aW9uIChhcnIsIGkpIHsgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgeyByZXR1cm4gYXJyOyB9IGVsc2UgaWYgKFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoYXJyKSkgeyByZXR1cm4gc2xpY2VJdGVyYXRvcihhcnIsIGkpOyB9IGVsc2UgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZVwiKTsgfSB9OyB9KCk7XG5cbnZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIFByb3BUeXBlcyA9IHJlcXVpcmUoJ3Byb3AtdHlwZXMnKTtcbnZhciBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG52YXIgRE9DX1RZUEVfSUQgPSAnUEFFVkFfVEFBQkVMJztcblxudmFyIERvY1JpZ2h0cyA9IHJlcXVpcmUoJy4vLi4vLi4vLi4vLi4vY29uZmlnL2RvY19yaWdodHMnKTtcbnZhciBjaGVja1JpZ2h0cyA9IHJlcXVpcmUoJy4vLi4vLi4vLi4vLi4vbGlicy9jaGVja1JpZ2h0cycpO1xudmFyIERvY0NvbnRleHQgPSByZXF1aXJlKCcuLy4uLy4uLy4uL2RvYy1jb250ZXh0LmpzJyk7XG5cbnZhciBkb2NSaWdodHMgPSBEb2NSaWdodHNbRE9DX1RZUEVfSURdID8gRG9jUmlnaHRzW0RPQ19UWVBFX0lEXSA6IFtdO1xuXG52YXIgRG9jdW1lbnRUZW1wbGF0ZSA9IHJlcXVpcmUoJy4uLy4uL2RvY3VtZW50VGVtcGxhdGUvaW5kZXguanN4JyksXG4gICAgSW5wdXROdW1iZXIgPSByZXF1aXJlKCcuLi8uLi8uLi9jb21wb25lbnRzL2lucHV0LW51bWJlci9pbnB1dC1udW1iZXIuanN4JyksXG4gICAgQnV0dG9uRWRpdCA9IHJlcXVpcmUoJy4uLy4uLy4uL2NvbXBvbmVudHMvYnV0dG9uLXJlZ2lzdGVyL2J1dHRvbi1yZWdpc3Rlci1lZGl0L2J1dHRvbi1yZWdpc3Rlci1lZGl0LmpzeCcpLFxuICAgIEJ0bkFydmVzdGEgPSByZXF1aXJlKCcuLi8uLi8uLi9jb21wb25lbnRzL2J1dHRvbi1yZWdpc3Rlci9idXR0b24tdGFzay9pbmRleC5qc3gnKSxcbiAgICBTZWxlY3QgPSByZXF1aXJlKCcuLi8uLi8uLi9jb21wb25lbnRzL3NlbGVjdC9zZWxlY3QuanN4JyksXG4gICAgSW5wdXREYXRlID0gcmVxdWlyZSgnLi4vLi4vLi4vY29tcG9uZW50cy9pbnB1dC1kYXRlL2lucHV0LWRhdGUuanN4JyksXG4gICAgSW5wdXRUZXh0ID0gcmVxdWlyZSgnLi4vLi4vLi4vY29tcG9uZW50cy9pbnB1dC10ZXh0L2lucHV0LXRleHQuanN4JyksXG4gICAgVGV4dEFyZWEgPSByZXF1aXJlKCcuLi8uLi8uLi9jb21wb25lbnRzL3RleHQtYXJlYS90ZXh0LWFyZWEuanN4JyksXG4gICAgRGF0YUdyaWQgPSByZXF1aXJlKCcuLi8uLi8uLi9jb21wb25lbnRzL2RhdGEtZ3JpZC9kYXRhLWdyaWQuanN4JyksXG4gICAgQnV0dG9uU2V0QWxsID0gcmVxdWlyZSgnLi4vLi4vLi4vY29tcG9uZW50cy9idXR0b24tcmVnaXN0ZXIvYnV0dG9uLXJlZ2lzdGVyLmpzeCcpLFxuICAgIHN0eWxlcyA9IHJlcXVpcmUoJy4vc3R5bGVzJyk7XG52YXIgTG9hZGluZyA9IHJlcXVpcmUoJy4vLi4vLi4vLi4vY29tcG9uZW50cy9sb2FkaW5nL2luZGV4LmpzeCcpO1xuXG52YXIgTElCUkFSSUVTID0gcmVxdWlyZSgnLi8uLi8uLi8uLi8uLi9jb25maWcvY29uc3RhbnRzJylbRE9DX1RZUEVfSURdLkxJQlJBUklFUztcblxudmFyIFBhZXZhVGFhYmVsID0gZnVuY3Rpb24gKF9SZWFjdCRQdXJlQ29tcG9uZW50KSB7XG4gICAgX2luaGVyaXRzKFBhZXZhVGFhYmVsLCBfUmVhY3QkUHVyZUNvbXBvbmVudCk7XG5cbiAgICBmdW5jdGlvbiBQYWV2YVRhYWJlbChwcm9wcykge1xuICAgICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUGFldmFUYWFiZWwpO1xuXG4gICAgICAgIHZhciBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChQYWV2YVRhYWJlbC5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKFBhZXZhVGFhYmVsKSkuY2FsbCh0aGlzLCBwcm9wcykpO1xuXG4gICAgICAgIF90aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgbW9kdWxlOiAnbGFwc2VkJyxcbiAgICAgICAgICAgIGxvYWRlZERhdGE6IGZhbHNlLFxuICAgICAgICAgICAgZG9jSWQ6IHByb3BzLmRvY0lkID8gcHJvcHMuZG9jSWQgOiBOdW1iZXIocHJvcHMubWF0Y2gucGFyYW1zLmRvY0lkKSxcbiAgICAgICAgICAgIGdydXBwX2lkOiBudWxsLFxuICAgICAgICAgICAga3B2OiBudWxsLFxuICAgICAgICAgICAgaXNSZWJ1aWxkOiBmYWxzZSxcbiAgICAgICAgICAgIGlzSW5pdDogdHJ1ZSxcbiAgICAgICAgICAgIGtvZ3VzOiAwLFxuICAgICAgICAgICAgY292aWQ6IDBcbiAgICAgICAgfTtcblxuICAgICAgICBfdGhpcy5yZW5kZXJlciA9IF90aGlzLnJlbmRlcmVyLmJpbmQoX3RoaXMpO1xuICAgICAgICBfdGhpcy5oYW5kbGVQYWdlQ2xpY2sgPSBfdGhpcy5oYW5kbGVQYWdlQ2xpY2suYmluZChfdGhpcyk7XG4gICAgICAgIF90aGlzLm9uQ2xpY2tIYW5kbGVyID0gX3RoaXMub25DbGlja0hhbmRsZXIuYmluZChfdGhpcyk7XG4gICAgICAgIF90aGlzLmhhbmRsZUdyaWRSb3cgPSBfdGhpcy5oYW5kbGVHcmlkUm93LmJpbmQoX3RoaXMpO1xuICAgICAgICBfdGhpcy5wcmVwYWlyZUluaXREYXRhID0gX3RoaXMucHJlcGFpcmVJbml0RGF0YS5iaW5kKF90aGlzKTtcbiAgICAgICAgX3RoaXMuaGFuZGxlR3JpZENlbGxDbGljayA9IF90aGlzLmhhbmRsZUdyaWRDZWxsQ2xpY2suYmluZChfdGhpcyk7XG4gICAgICAgIF90aGlzLmJ0bkVkaXRHcnVwcENsaWNrID0gX3RoaXMuYnRuRWRpdEdydXBwQ2xpY2suYmluZChfdGhpcyk7XG4gICAgICAgIF90aGlzLmhhbmRsZUhlYWRlckNsaWNrID0gX3RoaXMuaGFuZGxlSGVhZGVyQ2xpY2suYmluZChfdGhpcyk7XG4gICAgICAgIF90aGlzLmNoZWNrRGF0YSA9IF90aGlzLmNoZWNrRGF0YS5iaW5kKF90aGlzKTtcblxuICAgICAgICBfdGhpcy5wYWdlcyA9IFt7IHBhZ2VOYW1lOiAnUMOkZXZhIHRhYWJlbCcsIGRvY1R5cGVJZDogRE9DX1RZUEVfSUQgfV07XG5cbiAgICAgICAgX3RoaXMuc3VidG90YWxzID0gWydvc2FsZW1pbmUnLCAnY292aWQnXTtcblxuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuXG4gICAgX2NyZWF0ZUNsYXNzKFBhZXZhVGFhYmVsLCBbe1xuICAgICAgICBrZXk6ICdjb21wb25lbnREaWRNb3VudCcsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAgICAgICAgIGlmICghdGhpcy5zdGF0ZS5sYXBzSWQgJiYgRG9jQ29udGV4dFsnbGFwcyddKSB7XG4gICAgICAgICAgICAgICAgLy/QtdGB0YLRjCDQt9C90LDRh9C10L3QuNC1INC40LQg0YDQtdCx0LXQvdC60LBcbiAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHsgbGFwc0lkOiBEb2NDb250ZXh0WydsYXBzJ10gfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ2NvbXBvbmVudERpZFVwZGF0ZScsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBjb21wb25lbnREaWRVcGRhdGUocHJldlByb3BzLCBwcmV2U3RhdGUpIHtcbiAgICAgICAgICAgIC8vINC+0LHQvdC+0LLQuNC8INGB0L/RgNCw0LLQvtGH0L3QuNC60Lgg0YDQtdCx0LXQvdC60LBcbiAgICAgICAgICAgIGlmICh0aGlzLnN0YXRlLmxhcHNJZCAhPT0gcHJldlN0YXRlLmxhcHNJZCkge1xuICAgICAgICAgICAgICAgIHZhciBkb2MgPSB0aGlzLnJlZnNbJ2RvY3VtZW50J107XG4gICAgICAgICAgICAgICAgZG9jLmNyZWF0ZUxpYnMoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0sIHtcbiAgICAgICAga2V5OiAncmVuZGVyJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgICAgICAgIHZhciBmaWx0ZXIgPSB0aGlzLnN0YXRlLmxhcHNJZCA/ICd3aGVyZSBsYXBzaWQgPSAnICsgdGhpcy5zdGF0ZS5sYXBzSWQgOiAnJztcbiAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KERvY3VtZW50VGVtcGxhdGUsIHsgZG9jSWQ6IHRoaXMuc3RhdGUuZG9jSWQsXG4gICAgICAgICAgICAgICAgcmVmOiAnZG9jdW1lbnQnLFxuICAgICAgICAgICAgICAgIGRvY1R5cGVJZDogRE9DX1RZUEVfSUQsXG4gICAgICAgICAgICAgICAgbW9kdWxlOiB0aGlzLnN0YXRlLm1vZHVsZSxcbiAgICAgICAgICAgICAgICBpbml0RGF0YTogdGhpcy5wcm9wcy5pbml0RGF0YSxcbiAgICAgICAgICAgICAgICBsaWJzOiBMSUJSQVJJRVMsXG4gICAgICAgICAgICAgICAgcmVuZGVyZXI6IHRoaXMucmVuZGVyZXIsXG4gICAgICAgICAgICAgICAgaGFuZGxlR3JpZEJ0bkNsaWNrOiB0aGlzLmhhbmRsZUdyaWRCdG5DbGljayxcbiAgICAgICAgICAgICAgICBoaXN0b3J5OiB0aGlzLnByb3BzLmhpc3RvcnksXG4gICAgICAgICAgICAgICAgaXNEaXNhYmxlU2F2ZTogIXRoaXMuc3RhdGUuZG9jSWQsXG4gICAgICAgICAgICAgICAgaXNHcmlkRGF0YVNhdmU6IHRydWUsXG4gICAgICAgICAgICAgICAgdHJpZ2dlcjogdGhpcy5jaGVja0RhdGFcblxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICAvKipcclxuICAgICAgICAgKiDQv9C+0L/RgNCw0LLQuNGCINC00LDQvdC90YvQtSDQtNC70Y8g0LPRgNC40LTQsFxyXG4gICAgICAgICAqL1xuXG4gICAgfSwge1xuICAgICAgICBrZXk6ICdwcmVwYWlyZUluaXREYXRhJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHByZXBhaXJlSW5pdERhdGEoc2VsZikge1xuICAgICAgICAgICAgaWYgKHNlbGYuZG9jRGF0YS5ncmlkRGF0YSAmJiBzZWxmLmRvY0RhdGEuZ3JpZERhdGEubGVuZ3RoICYmIHNlbGYuZG9jRGF0YS5ub21zICYmIHNlbGYuZG9jRGF0YS5ub21zLmxlbmd0aCkge1xuXG4gICAgICAgICAgICAgICAgLy8gYWRkIGNvbHVtbiBub21pZCB0byBncmlkXG4gICAgICAgICAgICAgICAgc2VsZi5kb2NEYXRhLm5vbXMuZm9yRWFjaChmdW5jdGlvbiAobm9tKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBjb2x1bW4gPSBzZWxmLmRvY0RhdGEuZ3JpZENvbmZpZy5maW5kKGZ1bmN0aW9uIChyb3cpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByb3cuaWQgPT0gU3RyaW5nKG5vbS5ub21faWQpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgLy8g0L7RgtGB0LXQutCw0LXQvCDRg9GB0LvRg9Cz0LgsINC60L7RgtC+0YDRi9C1INC90LUg0L7Qv9GA0LXQtNC10LvQtdC90Ysg0LrQsNC6INC00L3QtdCy0L3Ri9C1INC4INGC0LUsINGH0YLQviDRg9C20LUg0L7QsdGA0LDQsdGC0LDQvdGLXG4gICAgICAgICAgICAgICAgICAgIGlmIChub20udGVlbnVzICYmICFjb2x1bW4pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuZG9jRGF0YS5ncmlkQ29uZmlnLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkOiBTdHJpbmcobm9tLm5vbV9pZCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogbm9tLnRlZW51cyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogJzUwcHgnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiYm9vbGVhblwiXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgLy8g0LrQvtC7LdCy0L4g0YPRgdC70YPQs1xuICAgICAgICAgICAgICAgIHNlbGYuZG9jRGF0YS5ncmlkRGF0YSA9IHNlbGYuZG9jRGF0YS5ncmlkRGF0YS5tYXAoZnVuY3Rpb24gKHJvdykge1xuICAgICAgICAgICAgICAgICAgICByb3cubm9tcy5mb3JFYWNoKGZ1bmN0aW9uIChub20pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyb3dbU3RyaW5nKG5vbS5ub21faWQpXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGp1YmEgb2xlbWFzXG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJvd1tTdHJpbmcobm9tLm5vbV9pZCldID0gISFub20ua29ndXM7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcm93O1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoeyBpc0luaXQ6IGZhbHNlIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLyoqXHJcbiAgICAgICAgICrQktC10YDQvdC10YIg0LrQsNGB0YLQvtC80L3Ri9C1INC60L7QvNC/0L7QvdC10L3RgtGLINC00L7QutGD0LzQtdC90YLQsFxyXG4gICAgICAgICAqL1xuXG4gICAgfSwge1xuICAgICAgICBrZXk6ICdyZW5kZXJlcicsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXJlcihzZWxmKSB7XG4gICAgICAgICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgICAgICAgdmFyIGlzRWRpdE1vZGUgPSBzZWxmLnN0YXRlLmVkaXRlZDtcbiAgICAgICAgICAgIHZhciB1c2VyUm9sZXMgPSBEb2NDb250ZXh0LnVzZXJEYXRhID8gRG9jQ29udGV4dC51c2VyRGF0YS5yb2xlcyA6IFtdO1xuXG4gICAgICAgICAgICAvLyDQttC00LXQvCDQt9Cw0LPRgNGD0LfQutC4INCx0LjQsdC70LjQvtGC0LXQuiDQuCDQtNCw0L3QvdGL0YVcbiAgICAgICAgICAgIGlmICghc2VsZiB8fCAhc2VsZi5kb2NEYXRhIHx8ICFzZWxmLnN0YXRlLmxvYWRlZExpYnMpIHtcbiAgICAgICAgICAgICAgICAvLyDQvdC1INC30LDQs9GA0YPQttC10L3RiyDQtNCw0L3QvdGL0LVcbiAgICAgICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2MgfSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChMb2FkaW5nLCB7IGxhYmVsOiAnTGFhZGltaW5lLi4uJyB9KVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vINC90LUg0YPRgdC/0LXQstCw0LXRgiDQv9C+0LTQs9GA0YPQt9C40YLRjNGB0Y8g0YHQv9GA0LDQstC+0YfQvdC40LosINC/0LXRgNC10LPRgNGD0LfQutCwINGE0L7RgNC80YtcbiAgICAgICAgICAgIGlmICghc2VsZi5saWJzWydsYXBzZV9ncnVwcCddLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBfdGhpczIuZm9yY2VVcGRhdGUoKTtcbiAgICAgICAgICAgICAgICB9LCAxKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHNlbGYuZG9jRGF0YSAmJiBzZWxmLmRvY0RhdGEuZ3JpZERhdGEgJiYgc2VsZi5kb2NEYXRhLmdyaWREYXRhLmxlbmd0aCAmJiAodGhpcy5zdGF0ZS5pc0luaXQgfHwgIWlzRWRpdE1vZGUpKSB7XG4gICAgICAgICAgICAgICAgLy8g0L/RgNC10L7QsdGA0LDQt9C+0LLRi9Cy0LDQtdC8INC00LDQvdC90YvQtVxuICAgICAgICAgICAgICAgIHRoaXMucHJlcGFpcmVJbml0RGF0YShzZWxmKTtcblxuICAgICAgICAgICAgICAgIC8vINC90LDQudC00LXQvCDRh9C40YHQu9C+0LLRi9C1INC/0L7Qu9GPINC4INC/0L7RgdGC0LDQstC40Lwg0LjRhSDQsiDQvNCw0YHRgdC40LIg0LTQu9GPINC/0LXRgNC10LTQsNGH0Lgg0LIg0LPRgNC40LQg0LTQu9GPINGB0YPQvNC80LjRgNC+0LLQsNC90LjRjyDQuNGC0L7Qs9C+0LJcbiAgICAgICAgICAgICAgICB2YXIgcmVnID0gL15cXGQrJC87IC8vINGC0L7Qu9GM0LrQviDQvdC+0LzQtdGA0LBcblxuICAgICAgICAgICAgICAgIHNlbGYuZG9jRGF0YS5ncmlkQ29uZmlnLmZvckVhY2goZnVuY3Rpb24gKHJvdykge1xuICAgICAgICAgICAgICAgICAgICBpZiAocmVnLnRlc3Qocm93LmlkKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFfdGhpczIuc3VidG90YWxzLnNvbWUoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gaXRlbSA9PSByb3cuaWQ7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzMi5zdWJ0b3RhbHMucHVzaChyb3cuaWQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoeyBncnVwcF9pZDogc2VsZi5kb2NEYXRhLmdydXBwX2lkLCBrcHY6IHNlbGYuZG9jRGF0YS5rcHYgfSk7XG4gICAgICAgICAgICB2YXIgZ3JpZFN0eWxlID0gX2V4dGVuZHMoe30sIHN0eWxlcy5ncmlkLmhlYWRlclRhYmxlLCBzdHlsZXMuZ3JpZCk7XG5cbiAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2MgfSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY1JvdyB9LFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jQ29sdW1uIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0RGF0ZSwgeyB0aXRsZTogJ0t1dXBcXHhFNGV2ICcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2twdicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHNlbGYuZG9jRGF0YS5rcHYsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQta3B2JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkT25seTogIWlzRWRpdE1vZGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6ICEhc2VsZi5kb2NEYXRhLmlkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiBzZWxmLmhhbmRsZUlucHV0Q2hhbmdlIH0pXG4gICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NDb2x1bW4gfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXRUZXh0LCB7IHRpdGxlOiAnU3RhYXR1cycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3N0YXR1cycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHNlbGYuZG9jRGF0YS5zdGF0dXMgfHwgJycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQtc3RhdHVzJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkT25seTogdHJ1ZSB9KVxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY1JvdyB9LFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jQ29sdW1uIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFNlbGVjdCwgeyB0aXRsZTogJ1xceERDa3N1czonLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdncnVwcF9pZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGliczogJ2xhcHNlX2dydXBwJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiBzZWxmLmxpYnNbJ2xhcHNlX2dydXBwJ10sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHNlbGYuZG9jRGF0YS5ncnVwcF9pZCB8fCAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHRWYWx1ZTogc2VsZi5kb2NEYXRhLnlrc3lzIHx8ICcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ3NlbGVjdC1sYXBzZV9ncnVwcCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sbElkOiAnaWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJ0bkRlbGV0ZTogaXNFZGl0TW9kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZDogISFzZWxmLmRvY0RhdGEuaWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFpc0VkaXRNb2RlXG4gICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAhc2VsZi5kb2NEYXRhLmlkICYmIHNlbGYuZG9jRGF0YS5ncnVwcF9pZCAmJiBjaGVja1JpZ2h0cyh1c2VyUm9sZXMsIGRvY1JpZ2h0cywgJ2FkZCcpID8gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY0NvbHVtbiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChCdG5BcnZlc3RhLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6ICdBcnZlc3RhIHRhYWJlbCA/JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrOiB0aGlzLm9uQ2xpY2tIYW5kbGVyLmJpbmQoJ2FydmVzdGEnKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaG93RGF0ZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcy5CdG5BcnZlc3RhLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2J0bi1hcnZlc3RhJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXk6ICdrZXktYXJ2ZXN0YSdcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICkgOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jQ29sdW1uIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBjaGVja1JpZ2h0cyh1c2VyUm9sZXMsIGRvY1JpZ2h0cywgJ2VkaXQnKSA/IFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnV0dG9uRWRpdCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2J0bkVkaXQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiAnTXV1ZGEnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s6IHRoaXMuYnRuRWRpdEdydXBwQ2xpY2ssXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvdzogIWlzRWRpdE1vZGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcy5idG5FZGl0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc2FibGVkOiBmYWxzZVxuICAgICAgICAgICAgICAgICAgICAgICAgfSkgOiBudWxsXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgIHNlbGYuZG9jRGF0YS5pZCAmJiBpc0VkaXRNb2RlID8gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NSb3cgfSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgnZGl2JywgeyBzdHlsZTogc3R5bGVzLmRvY0NvbHVtbiB9KSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY0NvbHVtbiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChCdXR0b25TZXRBbGwsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrOiB0aGlzLm9uQ2xpY2tIYW5kbGVyLmJpbmQoJ211dWRhJyksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcy5CdXR0b25TZXRBbGwsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6ICdLYXMgbXV1dGEgdmVlcnUgXCJFcmlhcnZlc3R1c1wiIHbDpMOkcnR1c3Q/JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdidG4tbXV1ZGEtY292aWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleTogJ2tleS1tdXVkYS1jb3ZpZCdcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICApIDogbnVsbCxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY1JvdyB9LFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KERhdGFHcmlkLCB7IHNvdXJjZTogJ2RldGFpbHMnLFxuICAgICAgICAgICAgICAgICAgICAgICAgZ3JpZERhdGE6IHNlbGYuZG9jRGF0YS5ncmlkRGF0YSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGdyaWRDb2x1bW5zOiBzZWxmLmRvY0RhdGEuZ3JpZENvbmZpZyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHNob3dUb29sQmFyOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGhhbmRsZUdyaWRSb3c6IHRoaXMuaGFuZGxlR3JpZFJvdyxcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uSGVhZGVyQ2xpY2s6IHRoaXMuaGFuZGxlSGVhZGVyQ2xpY2ssXG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrOiBzZWxmLmhhbmRsZUdyaWRDZWxsQ2xpY2ssXG4gICAgICAgICAgICAgICAgICAgICAgICByZWFkT25seTogIWlzRWRpdE1vZGUsXG4gICAgICAgICAgICAgICAgICAgICAgICBzdHlsZTogZ3JpZFN0eWxlLFxuICAgICAgICAgICAgICAgICAgICAgICAgaXNGb3JVcGRhdGU6IGlzRWRpdE1vZGUsXG4gICAgICAgICAgICAgICAgICAgICAgICBzdWJ0b3RhbHM6IHRoaXMuc3VidG90YWxzLFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAnZGF0YS1ncmlkJyB9KVxuICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgc2VsZi5kb2NEYXRhLmlkID8gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NSb3cgfSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChUZXh0QXJlYSwgeyB0aXRsZTogJ01cXHhFNHJrdXNlZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnbXV1ZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICByZWY6ICd0ZXh0YXJlYS1tdXVkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiBzZWxmLmhhbmRsZUlucHV0Q2hhbmdlLFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHNlbGYuZG9jRGF0YS5tdXVkIHx8ICcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFpc0VkaXRNb2RlIH0pXG4gICAgICAgICAgICAgICAgKSA6IG51bGxcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ2hhbmRsZVBhZ2VDbGljaycsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBoYW5kbGVQYWdlQ2xpY2socGFnZURvY1R5cGVJZCkge1xuICAgICAgICAgICAgdGhpcy5wcm9wcy5oaXN0b3J5LnB1c2goJy9sYXBzZWQvJyArIHBhZ2VEb2NUeXBlSWQpO1xuICAgICAgICB9XG4gICAgfSwge1xuICAgICAgICBrZXk6ICdvbkNsaWNrSGFuZGxlcicsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBvbkNsaWNrSGFuZGxlcihuYW1lLCB2YWx1ZSkge1xuICAgICAgICAgICAgdmFyIF90aGlzMyA9IHRoaXM7XG5cbiAgICAgICAgICAgIGlmIChuYW1lID09ICdBcnZlc3RhIHRhYWJlbCA/Jykge1xuICAgICAgICAgICAgICAgIC8vINC00LXQudGB0YLQstC40LUg0LTQu9GPINC60L3QvtC/0LrQuCBhcnZlc3RhXG4gICAgICAgICAgICAgICAgdmFyIERvYyA9IHRoaXMucmVmc1snZG9jdW1lbnQnXTtcbiAgICAgICAgICAgICAgICB2YXIgYXBpID0gJy9uZXdBcGkvdGFzay9hcnZlc3RhUGFldmFUYWFiZWwnO1xuXG4gICAgICAgICAgICAgICAgRG9jLmZldGNoRGF0YSgnUG9zdCcsIGFwaSwgeyBzZWlzdWdhOiB0aGlzLnN0YXRlLmtwdiwgZG9jSWQ6IHRoaXMuc3RhdGUuZ3J1cHBfaWQgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEgJiYgcmVzcG9uc2UuZGF0YS5lcnJvcl9jb2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBEb2Muc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdhcm5pbmc6IHJlc3BvbnNlLmRhdGEuZXJyb3JfbWVzc2FnZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3YXJuaW5nVHlwZTogJ2Vycm9yJ1xuICAgICAgICAgICAgICAgICAgICAgICAgfSwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzMy5mb3JjZVVwZGF0ZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBkb2NJZCA9IHJlc3BvbnNlLmRhdGEgJiYgcmVzcG9uc2UuZGF0YS5yZXN1bHQgPyByZXNwb25zZS5kYXRhLnJlc3VsdCA6IG51bGw7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZG9jSWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyByZWxvYWQgLyByZWRpcmVjdFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBjdXJyZW50ID0gJy9sYXBzZWQvcGFldmFfdGFhYmVsLycgKyBkb2NJZDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdGhpczMucHJvcHMuaGlzdG9yeS5yZXBsYWNlKCcvcmVsb2FkJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzMy5wcm9wcy5oaXN0b3J5LnJlcGxhY2UoY3VycmVudCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdmFyIGRhdGEgPSB0aGlzLnJlZnNbJ2RvY3VtZW50J10uZG9jRGF0YS5ncmlkRGF0YTtcbiAgICAgICAgICAgICAgICBpZiAoZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgY292aWQgPSAhdGhpcy5zdGF0ZS5jb3ZpZDtcbiAgICAgICAgICAgICAgICAgICAgLy8g0L/RgNC+0LnRgtC4INC/0L4g0LLRgdC10Lwg0LfQsNC/0LjRgdGP0Lwg0Lgg0L/QvtC80LXQvdGP0YLRjCDQt9C90LDRh9C10L3QuNC1INC90LDQvtCx0L7RgNC+0YJcbiAgICAgICAgICAgICAgICAgICAgZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChyb3csIGluZGV4KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXJvdy5vc2FsZW1pbmUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdGhpczMuY2hlY2tEYXRhKG51bGwsIGluZGV4LCAnY292aWQnLCBjb3ZpZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHsgY292aWQ6IGNvdmlkIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqINCx0YPQtNC10YIg0LLRi9C30LLQsNC90LAg0YLRgNC40LPQs9C10YDQvtC8INC/0YDQuCDQuNGF0LzQtdC90LXQvdC40LguINCf0YDQvtCy0YDQuNGCINC/0L7Qu9GPINC/0L7RgdC10YnQsNC10LzQvtGB0YLQuCDQuCDQtdGB0LvQuCDQvdC10YIsINGC0L4g0L/RgNC+0YHRgtCw0LLQuNGCINC90LXRgiDQstGB0LXQvCDRg9GB0LvRg9GI0LDQvFxyXG4gICAgICAgICAqIEBwYXJhbSBzZWxmXHJcbiAgICAgICAgICovXG5cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ2NoZWNrRGF0YScsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBjaGVja0RhdGEoc2VsZiwgaWR4LCBjb2x1bW5JZCwgdmFsdWUpIHtcbiAgICAgICAgICAgIHZhciBkYXRhID0gdGhpcy5yZWZzWydkb2N1bWVudCddLmRvY0RhdGE7XG4gICAgICAgICAgICB2YXIgaXNFZGl0TW9kZSA9IHRoaXMucmVmc1snZG9jdW1lbnQnXS5zdGF0ZS5lZGl0ZWQ7XG5cbiAgICAgICAgICAgIGlmICghaXNFZGl0TW9kZSkge1xuICAgICAgICAgICAgICAgIC8vINC90LUg0LIg0YDQtdC20LjQvNC1INGA0LXQtNCw0LrRgtC40YDQvtCy0LDQvdC40Y9cbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChjb2x1bW5JZCAmJiBjb2x1bW5JZCA9PSAnb3NhbGVtaW5lJykge1xuICAgICAgICAgICAgICAgIGlmICghZGF0YS5ncmlkRGF0YVtpZHhdLm9zYWxlbWluZSkge1xuICAgICAgICAgICAgICAgICAgICAvLyDQvtCx0L3Rg9C70LjRgtGMINC30L3QsNGH0LXQvdC40Y8g0LLRgdC10YUg0YPRgdC70YPQs1xuICAgICAgICAgICAgICAgICAgICB2YXIgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIHZhciBfZGlkSXRlcmF0b3JFcnJvciA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICB2YXIgX2l0ZXJhdG9yRXJyb3IgPSB1bmRlZmluZWQ7XG5cbiAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIF9pdGVyYXRvciA9IE9iamVjdC5lbnRyaWVzKGRhdGEuZ3JpZERhdGFbaWR4XSlbU3ltYm9sLml0ZXJhdG9yXSgpLCBfc3RlcDsgIShfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gKF9zdGVwID0gX2l0ZXJhdG9yLm5leHQoKSkuZG9uZSk7IF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gPSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIF9yZWYgPSBfc3RlcC52YWx1ZTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBfcmVmMiA9IF9zbGljZWRUb0FycmF5KF9yZWYsIDIpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGtleSA9IF9yZWYyWzBdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBfdmFsdWUgPSBfcmVmMlsxXTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghaXNOYU4oa2V5KSAmJiAhIV92YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDQv9C+0YHQtdGJ0LXQvdC40Y8g0L3QtdGCLCDQsCDQt9C90LDRh9C10L3QuNC1INC/0L7Qu9C+0LbQuNGC0LXQu9GM0L3QvtC1LiDQvNC10L3Rj9C10LxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS5ncmlkRGF0YVtpZHhdW2tleV0gPSAhX3ZhbHVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBfZGlkSXRlcmF0b3JFcnJvciA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICBfaXRlcmF0b3JFcnJvciA9IGVycjtcbiAgICAgICAgICAgICAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uICYmIF9pdGVyYXRvci5yZXR1cm4pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2l0ZXJhdG9yLnJldHVybigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKF9kaWRJdGVyYXRvckVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IF9pdGVyYXRvckVycm9yO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlmIChkYXRhLmdyaWREYXRhW2lkeF0ub3NhbGVtaW5lICYmIGRhdGEuZ3JpZERhdGFbaWR4XS5jb3ZpZCkge1xuICAgICAgICAgICAgICAgICAgICAvLyDQvdC1INC80L7QttC10YIg0LrQvtCy0LjQtCDQsdGL0YLRjCwg0LXRgdC70Lgg0L3QtdGCINC+0YLRgdGD0YLRgdGC0LLQuNGPXG4gICAgICAgICAgICAgICAgICAgIGRhdGEuZ3JpZERhdGFbaWR4XS5jb3ZpZCA9IDA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyDQvtCx0YDQsNCx0L7RgtC60LAg0L/QvtC70Y8g0LrQvtC00LjQtFxuICAgICAgICAgICAgaWYgKGNvbHVtbklkICYmIGNvbHVtbklkID09ICdjb3ZpZCcpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWRhdGEuZ3JpZERhdGFbaWR4XS5vc2FsZW1pbmUpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8g0LXRgdC70Lgg0LXRgdGC0Ywg0L/QvtGB0LXRidC10L3QuNC1LCDRgtC+INC90LUg0LzQvtC20LXRgiDQsdGL0YLRjCDQutC+0LLQuNC0XG4gICAgICAgICAgICAgICAgICAgIGRhdGEuZ3JpZERhdGFbaWR4XS5jb3ZpZCA9IHZhbHVlO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIC8vINC90LUg0LzQtdC90Y/QtdC8INC30L3QsNGH0LXQvdC40LUg0LrQvtCy0LjQtCwg0YLQsNC6INC60LDQuiDQtdGB0YLRjCDQv9C+0YHQtdGJ0LXQvdC40LVcbiAgICAgICAgICAgICAgICAgICAgZGF0YS5ncmlkRGF0YVtpZHhdLmNvdmlkID0gIXZhbHVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0sIHtcbiAgICAgICAga2V5OiAnaGFuZGxlR3JpZFJvdycsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBoYW5kbGVHcmlkUm93KGdyaWRFdmVudCkge1xuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IGdyaWRSb3dFZGl0OiB0cnVlLCBncmlkUm93RXZlbnQ6IGdyaWRFdmVudCB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqINC+0LHRgNCw0LHQvtGC0YfQuNC6INGB0L7QsdGL0YLQuNGPINC60LvQuNC60LAg0L/QviDQutC+0LvQvtC90LrQtVxyXG4gICAgICAgICAqIEBwYXJhbSBoZWFkZXJcclxuICAgICAgICAgKi9cblxuICAgIH0sIHtcbiAgICAgICAga2V5OiAnaGFuZGxlSGVhZGVyQ2xpY2snLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gaGFuZGxlSGVhZGVyQ2xpY2soaGVhZGVyKSB7XG4gICAgICAgICAgICB2YXIgaXNFZGl0ZU1vZGUgPSB0aGlzLnJlZnNbJ2RvY3VtZW50J10uc3RhdGUuZWRpdGVkO1xuICAgICAgICAgICAgaWYgKCFpc0VkaXRlTW9kZSkge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdub3QgaW4gZWRpdCBtb2RlJyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB2YXIgY29sdW1uID0gaGVhZGVyWzBdLmNvbHVtbjtcbiAgICAgICAgICAgIC8vINC/0YDQvtCy0LXRgNC40Lwg0L3QsCDQutC+0LvQvtC90LrRgyDRgdC+INC30L3QsNGH0LXQvdC40LXQvCDQutC+0Lst0LLQsCDRg9GB0LvRg9CzXG4gICAgICAgICAgICBpZiAoaXNOYU4oTnVtYmVyKGNvbHVtbikpKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ3ZhbGUgdmVyZywgaWdub3JlZXJpbWUnKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vINC90LDQtNC+INC/0YDQvtC50YLQuCDRhtC40LrQu9C+0Lwg0Lgg0L/QvtC80LXQvdGP0YLRjCDQt9C90LDRh9C10L3QuNC1INCyINGD0LrQsNC30LDQvdC90L7QvCDQv9C+0LvQtVxuICAgICAgICAgICAgdmFyIGRhdGEgPSB0aGlzLnJlZnNbJ2RvY3VtZW50J10uZG9jRGF0YTtcbiAgICAgICAgICAgIGlmIChkYXRhICYmIGRhdGEuZ3JpZERhdGEgJiYgZGF0YS5ncmlkRGF0YS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICBkYXRhLmdyaWREYXRhLmZvckVhY2goZnVuY3Rpb24gKHJvdykge1xuICAgICAgICAgICAgICAgICAgICBpZiAocm93W2NvbHVtbl0gIT09IG51bGwgJiYgcm93W2NvbHVtbl0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcm93W2NvbHVtbl0gPSAhcm93W2NvbHVtbl07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0sIHtcbiAgICAgICAga2V5OiAnaGFuZGxlR3JpZENlbGxDbGljaycsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBoYW5kbGVHcmlkQ2VsbENsaWNrKGFjdGlvbiwgZG9jSWQsIGlkeCwgY29sdW1uSWQpIHtcbiAgICAgICAgICAgIGdyaWREYXRhW2lkeF1bY29sdW1uSWRdID0gIWdyaWREYXRhW2lkeF1bY29sdW1uSWRdO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogICAgIC/QvtCx0YDQsNCx0L7RgtGH0LjQuiDRgdC+0LHRi9GC0LjRjyDQutC70LjRgdC60LAg0L3QsCDQutC90L7Qv9C60LUg0YDQtdC00LDQutGC0LjRgNC+0LLQsNC90LjRjyDQs9GA0YPQv9C/0YtcclxuICAgICAgICAgKi9cblxuICAgIH0sIHtcbiAgICAgICAga2V5OiAnYnRuRWRpdEdydXBwQ2xpY2snLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gYnRuRWRpdEdydXBwQ2xpY2soKSB7XG4gICAgICAgICAgICB2YXIgZG9jR3J1cHBJZCA9IHRoaXMucmVmc1snZG9jdW1lbnQnXS5kb2NEYXRhLmdydXBwX2lkO1xuXG4gICAgICAgICAgICAvLyDQvtGB0YPRidC10YHRgtCy0LjRgiDQv9C10YDQtdGF0L7QtCDQvdCwINC60LDRgNGC0L7Rh9C60YNcbiAgICAgICAgICAgIHRoaXMucHJvcHMuaGlzdG9yeS5wdXNoKCcvJyArIHRoaXMuc3RhdGUubW9kdWxlICsgJy9sYXBzZV9ncnVwcC8nICsgZG9jR3J1cHBJZCk7XG4gICAgICAgIH1cbiAgICB9XSk7XG5cbiAgICByZXR1cm4gUGFldmFUYWFiZWw7XG59KFJlYWN0LlB1cmVDb21wb25lbnQpO1xuXG5QYWV2YVRhYWJlbC5wcm9wVHlwZXMgPSB7XG4gICAgZG9jSWQ6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgaW5pdERhdGE6IFByb3BUeXBlcy5vYmplY3QsXG4gICAgdXNlckRhdGE6IFByb3BUeXBlcy5vYmplY3Rcbn07XG5cblBhZXZhVGFhYmVsLmRlZmF1bHRQcm9wcyA9IHtcbiAgICBwYXJhbXM6IHsgZG9jSWQ6IDAgfSxcbiAgICBpbml0RGF0YToge30sXG4gICAgdXNlckRhdGE6IHt9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFBhZXZhVGFhYmVsO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vZnJvbnRlbmQvZG9jcy9wYWV2YV90YWFiZWwvZG9jdW1lbnQvaW5kZXguanN4XG4vLyBtb2R1bGUgaWQgPSAyNjNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO21vZHVsZS5leHBvcnRzPXtkb2NSb3c6e2Rpc3BsYXk6J2ZsZXgnLGZsZXhEaXJlY3Rpb246J3JvdycvKlxyXG4gICAgICAgICAgICAgICAgYm9yZGVyOiAnMXB4IHNvbGlkIGJsdWUnXHJcbiAgICAgICAgKi99LGRvY0NvbHVtbjp7ZGlzcGxheTonZmxleCcsZmxleERpcmVjdGlvbjonY29sdW1uJywvKlxyXG4gICAgICAgICAgICAgICAgYm9yZGVyOiAnMXB4IHNvbGlkIHllbGxvdycsXHJcbiAgICAgICAgKi93aWR0aDonNTAlJ30sZG9jOntkaXNwbGF5OidmbGV4JyxmbGV4RGlyZWN0aW9uOidjb2x1bW4nLypcclxuICAgICAgICAgICAgICAgIGJvcmRlcjogJzFweCBzb2xpZCBicm93bidcclxuICAgICAgICAqL30sZ3JpZDp7bWFpblRhYmxlOnt0YWJsZUxheW91dDonZml4ZWQnLHdpZHRoOictd2Via2l0LWNhbGMoMTAwJSArIDE2cHgpJywvKlxyXG4gICAgICAgICAgICBwb3NpdGlvbjoncmVsYXRpdmUnLFxyXG4qL2JvcmRlckNvbGxhcHNlOidjb2xsYXBzZScsbWFyZ2luQm90dG9tOicxMHB4J30saGVhZGVyVGFibGU6e3RhYmxlTGF5b3V0OidmaXhlZCcsd2lkdGg6JzEwMCUnLGJvcmRlckNvbGxhcHNlOidjb2xsYXBzZSd9LGdyaWRDb250YWluZXI6e3dpZHRoOicxMDAlJ30sYm9vbFN1bWJvbDp7eWVzOnt2YWx1ZTonXFx1MjcxNCcsY29sb3I6JyMwMDczMDAnfSxubzp7dmFsdWU6bnVsbCxjb2xvcjoncmVkJ319fSxncmlkUm93OnsvKlxyXG4gICAgICAgICAgICAgICAgYm9yZGVyOiAnMXB4IHNvbGlkIGJsYWNrJyxcclxuICAgICAgICAqL2JhY2tncm91bmRDb2xvcjond2hpdGUnLHBvc2l0aW9uOidyZWxhdGl2ZScsbWFyZ2luOicxMCUgMzAlIDEwJSAzMCUnLHdpZHRoOidhdXRvJyxvcGFjaXR5OicxJyx0b3A6JzEwMHB4J30sYnRuRWRpdDp7d2lkdGg6J21pbi1jb250ZW50J30sQnV0dG9uU2V0QWxsOnt3aWR0aDonZml0LWNvbnRlbnQnfSxCdG5BcnZlc3RhOnt3aWR0aDonZml0LWNvbnRlbnQnfSx0b3RhbDp7d2lkdGg6J2F1dG8nfX07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9mcm9udGVuZC9kb2NzL3BhZXZhX3RhYWJlbC9kb2N1bWVudC9zdHlsZXMuanNcbi8vIG1vZHVsZSBpZCA9IDI2NFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIFByb3BUeXBlcyA9IHJlcXVpcmUoJ3Byb3AtdHlwZXMnKTtcbnZhciBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5cbnZhciBEb2N1bWVudFRlbXBsYXRlID0gcmVxdWlyZSgnLi4vLi4vZG9jdW1lbnRUZW1wbGF0ZS9pbmRleC5qc3gnKSxcbiAgICBJbnB1dFRleHQgPSByZXF1aXJlKCcuLi8uLi8uLi9jb21wb25lbnRzL2lucHV0LXRleHQvaW5wdXQtdGV4dC5qc3gnKSxcbiAgICBCdXR0b25FZGl0ID0gcmVxdWlyZSgnLi4vLi4vLi4vY29tcG9uZW50cy9idXR0b24tcmVnaXN0ZXIvYnV0dG9uLXJlZ2lzdGVyLWVkaXQvYnV0dG9uLXJlZ2lzdGVyLWVkaXQuanN4JyksXG4gICAgU2VsZWN0RGF0YSA9IHJlcXVpcmUoJy4uLy4uLy4uL2NvbXBvbmVudHMvc2VsZWN0LWRhdGEvc2VsZWN0LWRhdGEuanN4JyksXG4gICAgU2VsZWN0ID0gcmVxdWlyZSgnLi4vLi4vLi4vY29tcG9uZW50cy9zZWxlY3Qvc2VsZWN0LmpzeCcpLFxuICAgIFRleHRBcmVhID0gcmVxdWlyZSgnLi4vLi4vLi4vY29tcG9uZW50cy90ZXh0LWFyZWEvdGV4dC1hcmVhLmpzeCcpLFxuICAgIERhdGFHcmlkID0gcmVxdWlyZSgnLi4vLi4vLi4vY29tcG9uZW50cy9kYXRhLWdyaWQvZGF0YS1ncmlkLmpzeCcpLFxuICAgIENoZWNrQm94ID0gcmVxdWlyZSgnLi4vLi4vLi4vY29tcG9uZW50cy9pbnB1dC1jaGVja2JveC9pbnB1dC1jaGVja2JveC5qc3gnKSxcbiAgICBMb2FkaW5nID0gcmVxdWlyZSgnLi8uLi8uLi8uLi9jb21wb25lbnRzL2xvYWRpbmcvaW5kZXguanN4JyksXG4gICAgY3JlYXRlRW1wdHlGaWx0ZXJEYXRhID0gcmVxdWlyZSgnLi8uLi8uLi8uLi8uLi9saWJzL2NyZWF0ZUVtcHR5RmlsdGVyRGF0YScpLFxuICAgIHN0eWxlcyA9IHJlcXVpcmUoJy4vc3R5bGVzJyk7XG5cbnZhciBfZmV0Y2hEYXRhID0gcmVxdWlyZSgnLi8uLi8uLi8uLi8uLi9saWJzL2ZldGNoRGF0YScpO1xuXG52YXIgTElCUkFSSUVTID0gW107XG52YXIgRE9DUyA9IFsnQVJWJywgJ1NNSycsICdWTUsnXTtcbnZhciBEb2NDb250ZXh0ID0gcmVxdWlyZSgnLi8uLi8uLi8uLi9kb2MtY29udGV4dC5qcycpO1xuXG52YXIgVmFuZW0gPSBmdW5jdGlvbiAoX1JlYWN0JFB1cmVDb21wb25lbnQpIHtcbiAgICBfaW5oZXJpdHMoVmFuZW0sIF9SZWFjdCRQdXJlQ29tcG9uZW50KTtcblxuICAgIGZ1bmN0aW9uIFZhbmVtKHByb3BzKSB7XG4gICAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBWYW5lbSk7XG5cbiAgICAgICAgdmFyIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKFZhbmVtLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoVmFuZW0pKS5jYWxsKHRoaXMsIHByb3BzKSk7XG5cbiAgICAgICAgX3RoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBsb2FkZWREYXRhOiBmYWxzZSxcbiAgICAgICAgICAgIGRvY0lkOiBwcm9wcy5kb2NJZCA/IHByb3BzLmRvY0lkIDogTnVtYmVyKHByb3BzLm1hdGNoLnBhcmFtcy5kb2NJZCksXG4gICAgICAgICAgICBsYXBzSWQ6IG51bGwsXG4gICAgICAgICAgICBtb2R1bGU6ICdsYXBzZWQnXG4gICAgICAgIH07XG5cbiAgICAgICAgX3RoaXMucmVuZGVyZXIgPSBfdGhpcy5yZW5kZXJlci5iaW5kKF90aGlzKTtcbiAgICAgICAgX3RoaXMuaGFuZGxlTGFzdGVHcmlkQnRuQ2xpY2sgPSBfdGhpcy5oYW5kbGVMYXN0ZUdyaWRCdG5DbGljay5iaW5kKF90aGlzKTtcbiAgICAgICAgX3RoaXMuYnRuRWRpdEFzdXR1c0NsaWNrID0gX3RoaXMuYnRuRWRpdEFzdXR1c0NsaWNrLmJpbmQoX3RoaXMpO1xuICAgICAgICBfdGhpcy5zZXRGaWx0ZXIgPSBfdGhpcy5zZXRGaWx0ZXIuYmluZChfdGhpcyk7XG5cbiAgICAgICAgX3RoaXMucGFnZXMgPSBbeyBwYWdlTmFtZTogJ1ZhbmVtIGthYXJ0JywgZG9jVHlwZUlkOiAnVkFORU0nIH1dO1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuXG4gICAgX2NyZWF0ZUNsYXNzKFZhbmVtLCBbe1xuICAgICAgICBrZXk6ICdjb21wb25lbnREaWRNb3VudCcsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnByb3BzLmhpc3RvcnkgJiYgdGhpcy5wcm9wcy5oaXN0b3J5LmxvY2F0aW9uLnN0YXRlKSB7XG4gICAgICAgICAgICAgICAgdmFyIGxhcHNJZCA9IHRoaXMucHJvcHMuaGlzdG9yeS5sb2NhdGlvbi5zdGF0ZS5sYXBzSWQ7XG4gICAgICAgICAgICAgICAgdmFyIF9tb2R1bGUgPSB0aGlzLnByb3BzLmhpc3RvcnkubG9jYXRpb24uc3RhdGUubW9kdWxlO1xuICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoeyBsYXBzSWQ6IGxhcHNJZCwgbW9kdWxlOiBfbW9kdWxlIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSwge1xuICAgICAgICBrZXk6ICdyZW5kZXInLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgICAgICAgdmFyIGluaXREYXRhID0gdGhpcy5wcm9wcy5pbml0RGF0YSA/IHRoaXMucHJvcHMuaW5pdERhdGEgOiB7fTtcblxuICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRG9jdW1lbnRUZW1wbGF0ZSwgeyBkb2NJZDogdGhpcy5zdGF0ZS5kb2NJZCxcbiAgICAgICAgICAgICAgICByZWY6ICdkb2N1bWVudCcsXG4gICAgICAgICAgICAgICAgZG9jVHlwZUlkOiAnVkFORU0nLFxuICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHRoaXMucHJvcHMuaGlzdG9yeSxcbiAgICAgICAgICAgICAgICBtb2R1bGU6IHRoaXMuc3RhdGUubW9kdWxlLFxuICAgICAgICAgICAgICAgIHVzZXJEYXRhOiB0aGlzLnByb3BzLnVzZXJEYXRhLFxuICAgICAgICAgICAgICAgIGluaXREYXRhOiBpbml0RGF0YSxcbiAgICAgICAgICAgICAgICBsaWJzOiBMSUJSQVJJRVMsXG4gICAgICAgICAgICAgICAgcGFnZXM6IHRoaXMucGFnZXMsXG4gICAgICAgICAgICAgICAgcmVuZGVyZXI6IHRoaXMucmVuZGVyZXIsXG4gICAgICAgICAgICAgICAgaGFuZGxlR3JpZEJ0bkNsaWNrOiB0aGlzLmhhbmRsZUxhc3RlR3JpZEJ0bkNsaWNrXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAq0JLQtdGA0L3QtdGCINC60LDRgdGC0L7QvNC90YvQtSDQutC+0LzQv9C+0L3QtdC90YLRiyDQtNC+0LrRg9C80LXQvdGC0LBcclxuICAgICAgICAgKi9cblxuICAgIH0sIHtcbiAgICAgICAga2V5OiAncmVuZGVyZXInLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyZXIoc2VsZikge1xuICAgICAgICAgICAgaWYgKCFzZWxmIHx8IHNlbGYuZG9jRGF0YS52YW5lbV9uaW1pID09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgLy8g0L3QtSDQt9Cw0LPRgNGD0LbQtdC90Ysg0LTQsNC90L3Ri9C1XG4gICAgICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jIH0sXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTG9hZGluZywgeyBsYWJlbDogJ0xhYWRpbWluZS4uLicgfSlcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB2YXIgaXNFZGl0TW9kZSA9IHNlbGYuc3RhdGUuZWRpdGVkLFxuICAgICAgICAgICAgICAgIGdyaWRMYXN0ZURhdGEgPSBzZWxmLmRvY0RhdGEubGFwc2VkLFxuICAgICAgICAgICAgICAgIGdyaWRMYXN0ZUNvbHVtbnMgPSBzZWxmLmRvY0RhdGEuZ3JpZENvbmZpZztcblxuICAgICAgICAgICAgaWYgKHRoaXMuc3RhdGUubGFwc0lkKSB7XG4gICAgICAgICAgICAgICAgc2VsZi5kb2NEYXRhLnBhcmVudGlkID0gdGhpcy5zdGF0ZS5sYXBzSWQ7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChzZWxmLmRvY0RhdGEudmFuZW1fbmltaSkge1xuICAgICAgICAgICAgICAgIC8vINC90LDQu9C+0LbQuNC8INGE0LjQu9GM0YLRgNGLXG4gICAgICAgICAgICAgICAgdGhpcy5zZXRGaWx0ZXIoc2VsZi5kb2NEYXRhLnZhbmVtX25pbWkpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jIH0sXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NSb3cgfSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY0NvbHVtbiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChTZWxlY3REYXRhLCB7IHRpdGxlOiAnVmFuZW06JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnYXN1dHVzaWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpYk5hbWU6ICdhc3V0dXNlZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGlzdG9yeTogdGhpcy5wcm9wcy5oaXN0b3J5LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNxbEZpZWxkczogWyduaW1ldHVzJywgJ3JlZ2tvb2QnXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiBbXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogc2VsZi5kb2NEYXRhLmFzdXR1c2lkIHx8IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdFZhbHVlOiBzZWxmLmRvY0RhdGEudmFuZW1fbmltaSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3VuZFRvR3JpZDogJ25pbWV0dXMnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvdW5kVG9EYXRhOiAndmFuZW1fbmltaScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAnc2VsZWN0LWFzdXR1c2lkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBidG5EZWxldGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiBzZWxmLmhhbmRsZUlucHV0Q2hhbmdlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiAhaXNFZGl0TW9kZSB9KVxuICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jQ29sdW1uIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEJ1dHRvbkVkaXQsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdidG5FZGl0JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogJ011dWRhJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrOiB0aGlzLmJ0bkVkaXRBc3V0dXNDbGljayxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaG93OiAhaXNFZGl0TW9kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLmJ0bkVkaXQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IGZhbHNlXG4gICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY1JvdyB9LFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jQ29sdW1uIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0VGV4dCwgeyB0aXRsZTogJ1N1Z3VsdXM6JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnc3VodHVtaW5lJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogc2VsZi5kb2NEYXRhLnN1aHR1bWluZSB8fCAnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC1zdWh0dW1pbmUnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiAhaXNFZGl0TW9kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ2hlY2tCb3gsIHsgdGl0bGU6ICdBcnZlbGR1czonLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdhcnZlZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IEJvb2xlYW4oc2VsZi5kb2NEYXRhLmFydmVkKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdjaGVja2JveF9hcnZlZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IHNlbGYuaGFuZGxlSW5wdXRDaGFuZ2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFpc0VkaXRNb2RlXG4gICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuZG9jRGF0YS5hcnZlZCA/IFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ2hlY2tCb3gsIHsgdGl0bGU6ICdQcmludCBwYWJlcmlsID8nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdrYXNfcGFiZXJpbCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IEJvb2xlYW4oc2VsZi5kb2NEYXRhLmthc19wYWJlcmlsKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdjaGVja2JveF9rYXNfcGFiZXJpbCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IHNlbGYuaGFuZGxlSW5wdXRDaGFuZ2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFpc0VkaXRNb2RlXG4gICAgICAgICAgICAgICAgICAgICAgICB9KSA6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxmLmRvY0RhdGEuYXJ2ZWQgPyBSZWFjdC5jcmVhdGVFbGVtZW50KENoZWNrQm94LCB7IHRpdGxlOiAnS2FzIGVtYWlsID8nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdrYXNfZW1haWwnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBCb29sZWFuKHNlbGYuZG9jRGF0YS5rYXNfZW1haWwpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2NoZWNrYm94X2thc19lbWFpbCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IHNlbGYuaGFuZGxlSW5wdXRDaGFuZ2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFpc0VkaXRNb2RlXG4gICAgICAgICAgICAgICAgICAgICAgICB9KSA6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KENoZWNrQm94LCB7IHRpdGxlOiAnTGFwc2Ugc2VhZHVzbGlrIGVzaW5kYWphJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAna2FzX2VzaW5kYWphJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogQm9vbGVhbihzZWxmLmRvY0RhdGEua2FzX2VzaW5kYWphKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdjaGVja2JveF9rYXNfZXNpbmRhamEnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiBzZWxmLmhhbmRsZUlucHV0Q2hhbmdlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiAhaXNFZGl0TW9kZVxuICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgc2VsZi5kb2NEYXRhLmFydmVkID8gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NSb3cgfSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY0NvbHVtbiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChDaGVja0JveCwgeyB0aXRsZTogJ0UtYXJ2ZSA/JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAna2FzX2VhcnZlJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogQm9vbGVhbihzZWxmLmRvY0RhdGEua2FzX2VhcnZlKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdjaGVja2JveF9rYXNfZWFydmUnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiBzZWxmLmhhbmRsZUlucHV0Q2hhbmdlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiAhaXNFZGl0TW9kZVxuICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICkgOiBudWxsLFxuICAgICAgICAgICAgICAgIHNlbGYuZG9jRGF0YS5hcnZlZCAmJiBzZWxmLmRvY0RhdGEua2FzX2VhcnZlID8gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NSb3cgfSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY0NvbHVtbiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChTZWxlY3QsIHsgdGl0bGU6ICdFLWFydmUgcGFuazonLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdwYW5rJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiBbeyBpZDogMCwga29vZDogJycsIG5pbWV0dXM6ICcnIH0sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ6IDEsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtvb2Q6ICdTV0VEJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmltZXR1czogJ1N3ZWRwYW5rJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIHsgaWQ6IDIsIGtvb2Q6ICdTRUInLCBuaW1ldHVzOiAnU2ViIHBhbmsnIH1dLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbGxJZDogJ2tvb2QnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBzZWxmLmRvY0RhdGEucGFuayB8fCAnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0VmFsdWU6IHNlbGYuZG9jRGF0YS5wYW5rLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ3NlbGVjdC1wYW5rJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBidG5EZWxldGU6IGlzRWRpdE1vZGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IHNlbGYuaGFuZGxlSW5wdXRDaGFuZ2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFpc0VkaXRNb2RlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOiBzdHlsZXMucGFua1xuICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY0NvbHVtbiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dFRleHQsIHsgdGl0bGU6ICdFLWFydmUgSUJBTjonLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdpYmFuJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogc2VsZi5kb2NEYXRhLmliYW4gfHwgJycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQtaWJhbicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFpc0VkaXRNb2RlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiBzZWxmLmhhbmRsZUlucHV0Q2hhbmdlIH0pXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICApIDogbnVsbCxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY1JvdyB9LFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFRleHRBcmVhLCB7IHRpdGxlOiAnTVxceEU0cmt1c2VkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdtdXVkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ3RleHRhcmVhLW11dWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IHNlbGYuaGFuZGxlSW5wdXRDaGFuZ2UsXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogc2VsZi5kb2NEYXRhLm11dWQgfHwgJycsXG4gICAgICAgICAgICAgICAgICAgICAgICByZWFkT25seTogIWlzRWRpdE1vZGUgfSlcbiAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLmRvY1JvdyB9LFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdsYWJlbCcgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICdMYXBzZWQnXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jUm93IH0sXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRGF0YUdyaWQsIHsgc291cmNlOiAnbGFwc2VkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGdyaWREYXRhOiBncmlkTGFzdGVEYXRhLFxuICAgICAgICAgICAgICAgICAgICAgICAgZ3JpZENvbHVtbnM6IGdyaWRMYXN0ZUNvbHVtbnMsXG4gICAgICAgICAgICAgICAgICAgICAgICBzaG93VG9vbEJhcjogIWlzRWRpdE1vZGUsXG4gICAgICAgICAgICAgICAgICAgICAgICBoYW5kbGVHcmlkQnRuQ2xpY2s6IHNlbGYuaGFuZGxlR3JpZEJ0bkNsaWNrLFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFpc0VkaXRNb2RlLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcy5ncmlkLmhlYWRlclRhYmxlLFxuICAgICAgICAgICAgICAgICAgICAgICAgZG9jVHlwZUlkOiAnbGFwcycsXG4gICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdsYXNwc2VkLWRhdGEtZ3JpZCcgfSlcbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgfSwge1xuICAgICAgICBrZXk6ICdoYW5kbGVMYXN0ZUdyaWRCdG5DbGljaycsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBoYW5kbGVMYXN0ZUdyaWRCdG5DbGljayhidG5OYW1lLCBhY3RpdmVSb3csIGlkLCBkb2NUeXBlSWQpIHtcbiAgICAgICAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICAgICAgICBzd2l0Y2ggKGJ0bk5hbWUpIHtcbiAgICAgICAgICAgICAgICBjYXNlIFwiZWRpdFwiOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLnByb3BzLmhpc3RvcnkucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgICAgICBwYXRobmFtZTogJy9sYXBzZWQvJyArIGRvY1R5cGVJZCArICcvJyArIGlkLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGU6IHsgdmFuZW1JZDogdGhpcy5zdGF0ZS5kb2NJZCwgbW9kdWxlOiB0aGlzLnN0YXRlLm1vZHVsZSB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgXCJNdXVkYVwiOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLnByb3BzLmhpc3RvcnkucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgICAgICBwYXRobmFtZTogJy9sYXBzZWQvJyArIGRvY1R5cGVJZCArICcvJyArIGlkLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGU6IHsgdmFuZW1JZDogdGhpcy5zdGF0ZS5kb2NJZCwgbW9kdWxlOiB0aGlzLnN0YXRlLm1vZHVsZSB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgXCJhZGRcIjpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wcm9wcy5oaXN0b3J5LnB1c2goe1xuICAgICAgICAgICAgICAgICAgICAgICAgcGF0aG5hbWU6ICcvbGFwc2VkLycgKyBkb2NUeXBlSWQgKyAnLzAnLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGU6IHsgdmFuZW1JZDogdGhpcy5zdGF0ZS5kb2NJZCwgbW9kdWxlOiB0aGlzLnN0YXRlLm1vZHVsZSB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIFwiZGVsZXRlXCI6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZmV0Y2hEYXRhKGRvY1R5cGVJZCwgaWQpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgaXNUcnVlID0gcmVzcG9uc2UgJiYgcmVzcG9uc2Uuc3RhdHVzICYmIHJlc3BvbnNlLnN0YXR1cyA9PT0gMjAwID8gJ09rJyA6ICdFcnJvcic7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZXJyb3JNZXNzYWdlID0gJ1ZpZ2EnO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzVHJ1ZSAmJiByZXNwb25zZS5kYXRhICYmIHJlc3BvbnNlLmRhdGEuZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBlcnJvclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzVHJ1ZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yTWVzc2FnZSA9IHJlc3BvbnNlLmRhdGEuZXJyb3JfbWVzc2FnZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBEb2MgPSBfdGhpczIucmVmc1snZG9jdW1lbnQnXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vINC+0LHQvdC+0LLQuNC8INGB0L/RgNCw0LLQvtGH0L3QuNC6XG4gICAgICAgICAgICAgICAgICAgICAgICBEb2MubG9hZExpYnMoJ3ZhbmVtJyk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpc1RydWUgPT09ICdPaycpIHtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIERvYy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbG9hZERhdGE6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdhcm5pbmc6ICdLaXJpIGt1c3R1dGF0dWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3YXJuaW5nVHlwZTogJ29rJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgY3VycmVudCA9IF90aGlzMi5wcm9wcy5sb2NhdGlvbi5wYXRobmFtZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzMi5wcm9wcy5oaXN0b3J5LnJlcGxhY2UoJy9yZWxvYWQnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzMi5wcm9wcy5oaXN0b3J5LnJlcGxhY2UoY3VycmVudCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgMjAwMCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIERvYy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbG9hZERhdGE6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3YXJuaW5nOiAnJyArIGVycm9yTWVzc2FnZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2FybmluZ1R5cGU6ICdlcnJvcidcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdWaWdhbmUgY2xpY2snKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vINC+0YLQv9GA0LDQstC40YIg0LfQsNC/0YDQvtGBINC90LAg0YPQtNCw0LvQtdC90LjQtSDRgSDQv9Cw0YDQsNC80LXRgtGA0L7QvCDRgtC40L8g0LTQvtC60YPQvNC10L3RgtCwINC4INC40LRcblxuICAgIH0sIHtcbiAgICAgICAga2V5OiAnZmV0Y2hEYXRhJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGZldGNoRGF0YShkb2NUeXBlSWQsIGlkKSB7XG5cbiAgICAgICAgICAgIHZhciB1cmwgPSAnL25ld0FwaS9kZWxldGUnO1xuXG4gICAgICAgICAgICB2YXIgcGFyYW1zID0ge1xuICAgICAgICAgICAgICAgIHBhcmFtZXRlcjogZG9jVHlwZUlkLFxuICAgICAgICAgICAgICAgIG1vZHVsZTogJ2xhcHNlZCcsXG4gICAgICAgICAgICAgICAgdXNlcklkOiBEb2NDb250ZXh0LnVzZXJEYXRhLnVzZXJJZCxcbiAgICAgICAgICAgICAgICB1dWlkOiBEb2NDb250ZXh0LnVzZXJEYXRhLnV1aWQsXG4gICAgICAgICAgICAgICAgZG9jSWQ6IGlkXG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICByZXR1cm4gX2ZldGNoRGF0YVsnZmV0Y2hEYXRhUG9zdCddKHVybCwgcGFyYW1zKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vINC+0LHRgNCw0LHQvtGC0YfQuNC6INGB0L7QsdGL0YLQuNGPINC60LvQuNGB0LrQsCDQvdCwINC60L3QvtC/0LrQtSDRgNC10LTQsNC60YLQuNGA0L7QstCw0L3QuNGPINC60L7QvdGC0YAt0LDQs9C10L3RgtCwXG5cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ2J0bkVkaXRBc3V0dXNDbGljaycsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBidG5FZGl0QXN1dHVzQ2xpY2soKSB7XG4gICAgICAgICAgICB2YXIgZG9jQXN1dHVzSWQgPSB0aGlzLnJlZnNbJ2RvY3VtZW50J10uZG9jRGF0YS5hc3V0dXNpZDtcblxuICAgICAgICAgICAgLy8g0L7RgdGD0YnQtdGB0YLQstC40YIg0L/QtdGA0LXRhdC+0LQg0L3QsCDQutCw0YDRgtC+0YfQutGDINC60L7QvdGC0YAt0LDQs9C10L3RgtCwXG4gICAgICAgICAgICB0aGlzLnByb3BzLmhpc3RvcnkucHVzaCgnL2xhcHNlZC9hc3V0dXNlZC8nICsgZG9jQXN1dHVzSWQpO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXHJcbiAgICAgICAgICog0YPRgdGC0LDQvdC+0LLQuNC8INGE0LjQu9GM0YLRgCDQvdCwINC00L7QutGD0LzQtdC90YLQsFxyXG4gICAgICAgICAqL1xuXG4gICAgfSwge1xuICAgICAgICBrZXk6ICdzZXRGaWx0ZXInLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gc2V0RmlsdGVyKG5pbWkpIHtcblxuICAgICAgICAgICAgLy8g0L/RgNC+0LLQtdGA0LjQvCDQvdCw0LvQuNGH0LjQtSDRhNC40LvRjNGC0YDQsFxuICAgICAgICAgICAgRE9DUy5mb3JFYWNoKGZ1bmN0aW9uIChkb2MpIHtcbiAgICAgICAgICAgICAgICBpZiAoIURvY0NvbnRleHQuZmlsdGVyW2RvY10gfHwgIURvY0NvbnRleHQuZmlsdGVyW2RvY10ubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vINGB0L7Qt9C00LDQtdC8INC/0YPRgdGC0L7QuSDRhNC40LvRjNGC0YAg0LTQu9GPINC30LDQtNCw0L3QvdC+0LPQviDRgtC40L/QsFxuICAgICAgICAgICAgICAgICAgICBEb2NDb250ZXh0LmZpbHRlcltkb2NdID0gY3JlYXRlRW1wdHlGaWx0ZXJEYXRhKERvY0NvbnRleHQuZ3JpZENvbmZpZ1tkb2NdLCBbXSwgZG9jKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAvLyDQvdCw0LrQu9Cw0LTRi9Cy0LDQtdC8INGE0LjQu9GM0YLRgFxuICAgICAgICAgICAgICAgIERvY0NvbnRleHQuZmlsdGVyW2RvY10uZm9yRWFjaChmdW5jdGlvbiAocm93KSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChyb3cuaWQgPT0gJ2FzdXR1cycpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJvdy52YWx1ZSA9IG5pbWk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfV0pO1xuXG4gICAgcmV0dXJuIFZhbmVtO1xufShSZWFjdC5QdXJlQ29tcG9uZW50KTtcblxuVmFuZW0ucHJvcFR5cGVzID0ge1xuICAgIGRvY0lkOiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIGluaXREYXRhOiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIHVzZXJEYXRhOiBQcm9wVHlwZXMub2JqZWN0XG59O1xuXG5WYW5lbS5kZWZhdWx0UHJvcHMgPSB7XG4gICAgcGFyYW1zOiB7IGRvY0lkOiAwIH0sXG4gICAgaW5pdERhdGE6IHt9LFxuICAgIHVzZXJEYXRhOiB7fVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBWYW5lbTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2Zyb250ZW5kL2RvY3MvdmFuZW0vZG9jdW1lbnQvaW5kZXguanN4XG4vLyBtb2R1bGUgaWQgPSAyNjVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO21vZHVsZS5leHBvcnRzPXtkb2NSb3c6e2Rpc3BsYXk6J2ZsZXgnLGZsZXhEaXJlY3Rpb246J3JvdycvKlxyXG4gICAgICAgICAgICAgICAgYm9yZGVyOiAnMXB4IHNvbGlkIGJsdWUnXHJcbiAgICAgICAgKi99LGRvY0NvbHVtbjp7ZGlzcGxheTonZmxleCcsZmxleERpcmVjdGlvbjonY29sdW1uJywvKlxyXG4gICAgICAgICAgICAgICAgYm9yZGVyOiAnMXB4IHNvbGlkIHllbGxvdycsXHJcbiAgICAgICAgKi93aWR0aDonNTAlJ30sZG9jOntkaXNwbGF5OidmbGV4JyxmbGV4RGlyZWN0aW9uOidjb2x1bW4nLypcclxuICAgICAgICAgICAgICAgIGJvcmRlcjogJzFweCBzb2xpZCBicm93bidcclxuICAgICAgICAqL30sZ3JpZDp7bWFpblRhYmxlOnt3aWR0aDonMTAwJSd9LGhlYWRlclRhYmxlOnt3aWR0aDonMTAwJSd9LGdyaWRDb250YWluZXI6e3dpZHRoOicxMDAlJ319LGdyaWRSb3c6ey8qXHJcbiAgICAgICAgICAgICAgICBib3JkZXI6ICcxcHggc29saWQgYmxhY2snLFxyXG4gICAgICAgICovYmFja2dyb3VuZENvbG9yOid3aGl0ZScscG9zaXRpb246J3JlbGF0aXZlJyxtYXJnaW46JzEwJSAzMCUgMTAlIDMwJScsd2lkdGg6J2F1dG8nLG9wYWNpdHk6JzEnLHRvcDonMTAwcHgnfSxidG5FZGl0Ont3aWR0aDonbWluLWNvbnRlbnQnfSxwYW5rOnt3aWR0aDonMzAlJ319O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vZnJvbnRlbmQvZG9jcy92YW5lbS9kb2N1bWVudC9zdHlsZXMuanNcbi8vIG1vZHVsZSBpZCA9IDI2NlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbnZhciBEb2N1bWVudFJlZ2lzdGVyID0gcmVxdWlyZSgnLi8uLi9kb2N1bWVudHMvZG9jdW1lbnRzLmpzeCcpO1xuXG52YXIgc3R5bGVzID0gcmVxdWlyZSgnLi9zdHlsZXMnKTtcbnZhciBCdXR0b25VcGxvYWQgPSByZXF1aXJlKCcuLy4uLy4uL2NvbXBvbmVudHMvdXBsb2FkX2J1dHRvbi9pbmRleC5qc3gnKTtcbnZhciBUb29sYmFyQ29udGFpbmVyID0gcmVxdWlyZSgnLi8uLi8uLi9jb21wb25lbnRzL3Rvb2xiYXItY29udGFpbmVyL3Rvb2xiYXItY29udGFpbmVyLmpzeCcpO1xudmFyIElucHV0VGV4dCA9IHJlcXVpcmUoJy4uLy4uL2NvbXBvbmVudHMvaW5wdXQtdGV4dC9pbnB1dC10ZXh0LmpzeCcpO1xuXG52YXIgRE9DX1RZUEVfSUQgPSAnVkFORU0nO1xudmFyIERvY1JpZ2h0cyA9IHJlcXVpcmUoJy4vLi4vLi4vLi4vY29uZmlnL2RvY19yaWdodHMnKTtcbnZhciBjaGVja1JpZ2h0cyA9IHJlcXVpcmUoJy4vLi4vLi4vLi4vbGlicy9jaGVja1JpZ2h0cycpO1xudmFyIERvY0NvbnRleHQgPSByZXF1aXJlKCcuLy4uLy4uL2RvYy1jb250ZXh0LmpzJyk7XG52YXIgZG9jUmlnaHRzID0gRG9jUmlnaHRzW0RPQ19UWVBFX0lEXSA/IERvY1JpZ2h0c1tET0NfVFlQRV9JRF0gOiBbXTtcblxuLyoqXHJcbiAqINCa0LvQsNGB0YEg0YDQtdCw0LvQuNC30YPQtdGCINC00L7QutGD0LzQtdC90YIg0YHQv9GA0LDQstC+0YfQvdC40LrQsCDQv9GA0LjQt9C90LDQutC+0LIuXHJcbiAqL1xuXG52YXIgRG9jdW1lbnRzID0gZnVuY3Rpb24gKF9SZWFjdCRQdXJlQ29tcG9uZW50KSB7XG4gICAgX2luaGVyaXRzKERvY3VtZW50cywgX1JlYWN0JFB1cmVDb21wb25lbnQpO1xuXG4gICAgZnVuY3Rpb24gRG9jdW1lbnRzKHByb3BzKSB7XG4gICAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBEb2N1bWVudHMpO1xuXG4gICAgICAgIHZhciBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChEb2N1bWVudHMuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihEb2N1bWVudHMpKS5jYWxsKHRoaXMsIHByb3BzKSk7XG5cbiAgICAgICAgX3RoaXMucmVuZGVyZXIgPSBfdGhpcy5yZW5kZXJlci5iaW5kKF90aGlzKTtcbiAgICAgICAgX3RoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICByZWFkOiAwLFxuICAgICAgICAgICAgZmlsdHJpX3JlYWQ6IDBcbiAgICAgICAgfTtcblxuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuXG4gICAgX2NyZWF0ZUNsYXNzKERvY3VtZW50cywgW3tcbiAgICAgICAga2V5OiAncmVuZGVyJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgICAgICAgIHZhciB1c2VyUm9sZXMgPSBEb2NDb250ZXh0LnVzZXJEYXRhID8gRG9jQ29udGV4dC51c2VyRGF0YS5yb2xlcyA6IFtdO1xuXG4gICAgICAgICAgICB2YXIgdG9vbGJhclBhcmFtcyA9IHtcbiAgICAgICAgICAgICAgICBidG5BZGQ6IHtcbiAgICAgICAgICAgICAgICAgICAgc2hvdzogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVkOiBmYWxzZVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgYnRuRWRpdDoge1xuICAgICAgICAgICAgICAgICAgICBzaG93OiBjaGVja1JpZ2h0cyh1c2VyUm9sZXMsIGRvY1JpZ2h0cywgJ2VkaXQnKSxcbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IGZhbHNlXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBidG5EZWxldGU6IHtcbiAgICAgICAgICAgICAgICAgICAgc2hvdzogY2hlY2tSaWdodHModXNlclJvbGVzLCBkb2NSaWdodHMsICdkZWxldGUnKSxcbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IGZhbHNlXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBidG5QcmludDoge1xuICAgICAgICAgICAgICAgICAgICBzaG93OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRG9jdW1lbnRSZWdpc3RlciwgeyBpbml0RGF0YTogdGhpcy5wcm9wcy5pbml0RGF0YSxcbiAgICAgICAgICAgICAgICAgICAgdXNlckRhdGE6IHRoaXMucHJvcHMudXNlckRhdGEsXG4gICAgICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHRoaXMucHJvcHMuaGlzdG9yeSA/IHRoaXMucHJvcHMuaGlzdG9yeSA6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vZHVsZTogdGhpcy5wcm9wcy5tb2R1bGUsXG4gICAgICAgICAgICAgICAgICAgIHJlZjogJ3JlZ2lzdGVyJyxcbiAgICAgICAgICAgICAgICAgICAgZG9jVHlwZUlkOiBET0NfVFlQRV9JRCxcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcyxcbiAgICAgICAgICAgICAgICAgICAgdG9vbGJhclBhcmFtczogdG9vbGJhclBhcmFtcyxcbiAgICAgICAgICAgICAgICAgICAgcmVuZGVyOiB0aGlzLnJlbmRlcmVyIH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXRUZXh0LCB7IHRpdGxlOiAnRmlsdHJpIGFsbCAvIHJlYWQga29ra3U6JyxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3JlYWRfa29ra3UnLFxuICAgICAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLnRvdGFsLFxuICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC1yZWFkJyxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IFN0cmluZyh0aGlzLnN0YXRlLmZpbHRyaV9yZWFkICsgJy8nICsgdGhpcy5zdGF0ZS5yZWFkKSxcbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IHRydWUgfSlcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ3JlbmRlcmVyJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcmVyKHNlbGYpIHtcbiAgICAgICAgICAgIGlmIChzZWxmICYmIHNlbGYuZ3JpZERhdGEpIHtcbiAgICAgICAgICAgICAgICB2YXIgcm93c190b3RhbCA9IHNlbGYuZ3JpZERhdGEubGVuZ3RoICYmIHNlbGYuZ3JpZERhdGFbMF0ucm93c190b3RhbCA/IHNlbGYuZ3JpZERhdGFbMF0ucm93c190b3RhbCA6IDA7XG4gICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgICAgIHJlYWQ6IHJvd3NfdG90YWwsXG4gICAgICAgICAgICAgICAgICAgIGZpbHRyaV9yZWFkOiBzZWxmLmdyaWREYXRhLmxlbmd0aCAmJiBzZWxmLmdyaWREYXRhWzBdLmZpbHRlcl90b3RhbCA/IHNlbGYuZ3JpZERhdGFbMF0uZmlsdGVyX3RvdGFsIDogcm93c190b3RhbFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB2YXIgdXNlclJvbGVzID0gRG9jQ29udGV4dC51c2VyRGF0YSA/IERvY0NvbnRleHQudXNlckRhdGEucm9sZXMgOiBbXTtcblxuICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgVG9vbGJhckNvbnRhaW5lcixcbiAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgIGNoZWNrUmlnaHRzKHVzZXJSb2xlcywgZG9jUmlnaHRzLCAnaW1wb3J0TGVwaW5ndWQnKSA/IFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnV0dG9uVXBsb2FkLCB7XG4gICAgICAgICAgICAgICAgICAgIHJlZjogJ2J0blVwbG9hZFN3ZWQnLFxuICAgICAgICAgICAgICAgICAgICBkb2NUeXBlSWQ6ICdpbXBvcnRfbGVwaW5nX3N3ZWQnLFxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrOiB0aGlzLmhhbmRsZUNsaWNrLFxuICAgICAgICAgICAgICAgICAgICBzaG93OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogJ0xvZSBwYW5nYSBsZXBpbmd1ZCAoU1dFRCknLFxuICAgICAgICAgICAgICAgICAgICBtaW1lVHlwZXM6ICcuY3N2J1xuICAgICAgICAgICAgICAgIH0pIDogbnVsbCxcbiAgICAgICAgICAgICAgICBjaGVja1JpZ2h0cyh1c2VyUm9sZXMsIGRvY1JpZ2h0cywgJ2ltcG9ydExlcGluZ3VkJykgPyBSZWFjdC5jcmVhdGVFbGVtZW50KEJ1dHRvblVwbG9hZCwge1xuICAgICAgICAgICAgICAgICAgICByZWY6ICdidG5VcGxvYWRTZWInLFxuICAgICAgICAgICAgICAgICAgICBkb2NUeXBlSWQ6ICdpbXBvcnRfbGVwaW5nX3NlYicsXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s6IHRoaXMuaGFuZGxlQ2xpY2ssXG4gICAgICAgICAgICAgICAgICAgIHNob3c6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiAnTG9lIHBhbmdhIGxlcGluZ3VkIChTRUIpJyxcbiAgICAgICAgICAgICAgICAgICAgbWltZVR5cGVzOiAnLmNzdidcbiAgICAgICAgICAgICAgICB9KSA6IG51bGwsXG4gICAgICAgICAgICAgICAgY2hlY2tSaWdodHModXNlclJvbGVzLCBkb2NSaWdodHMsICdpbXBvcnRWYW5lbWF0ZVJlZ2lzdGVyJykgPyBSZWFjdC5jcmVhdGVFbGVtZW50KEJ1dHRvblVwbG9hZCwge1xuICAgICAgICAgICAgICAgICAgICByZWY6ICdidG5VcGxvYWQnLFxuICAgICAgICAgICAgICAgICAgICBkb2NUeXBlSWQ6IERPQ19UWVBFX0lELFxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrOiB0aGlzLmhhbmRsZUNsaWNrLFxuICAgICAgICAgICAgICAgICAgICBzaG93OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBtaW1lVHlwZXM6ICcuY3N2J1xuICAgICAgICAgICAgICAgIH0pIDogbnVsbFxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgIH1dKTtcblxuICAgIHJldHVybiBEb2N1bWVudHM7XG59KFJlYWN0LlB1cmVDb21wb25lbnQpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IERvY3VtZW50cztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2Zyb250ZW5kL2RvY3MvdmFuZW0vaW5kZXguanN4XG4vLyBtb2R1bGUgaWQgPSAyNjdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO21vZHVsZS5leHBvcnRzPXtncmlkOnttYWluVGFibGU6e3dpZHRoOicxMDAlJyx0ZDp7Ym9yZGVyOicxcHggc29saWQgbGlnaHRHcmV5JyxkaXNwbGF5Oid0YWJsZS1jZWxsJyxwYWRkaW5nTGVmdDonNXB4J319LGhlYWRlclRhYmxlOnt3aWR0aDonMTAwJSd9LGdyaWRDb250YWluZXI6e3dpZHRoOicxMDAlJ319LHRvdGFsOnt3aWR0aDonYXV0byd9fTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2Zyb250ZW5kL2RvY3MvdmFuZW0vc3R5bGVzLmpzXG4vLyBtb2R1bGUgaWQgPSAyNjhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG52YXIgRG9jdW1lbnRSZWdpc3RlciA9IHJlcXVpcmUoJy4vLi4vZG9jdW1lbnRzL2RvY3VtZW50cy5qc3gnKTtcbnZhciBCdXR0b25VcGxvYWQgPSByZXF1aXJlKCcuLy4uLy4uL2NvbXBvbmVudHMvdXBsb2FkX2J1dHRvbi9pbmRleC5qc3gnKTtcbnZhciBUb29sYmFyQ29udGFpbmVyID0gcmVxdWlyZSgnLi8uLi8uLi9jb21wb25lbnRzL3Rvb2xiYXItY29udGFpbmVyL3Rvb2xiYXItY29udGFpbmVyLmpzeCcpO1xuXG52YXIgc3R5bGVzID0gcmVxdWlyZSgnLi9zdHlsZXMnKTtcbnZhciBET0NfVFlQRV9JRCA9ICdMQVBTRV9HUlVQUCc7XG5cbnZhciBEb2NSaWdodHMgPSByZXF1aXJlKCcuLy4uLy4uLy4uL2NvbmZpZy9kb2NfcmlnaHRzJyk7XG52YXIgY2hlY2tSaWdodHMgPSByZXF1aXJlKCcuLy4uLy4uLy4uL2xpYnMvY2hlY2tSaWdodHMnKTtcbnZhciBEb2NDb250ZXh0ID0gcmVxdWlyZSgnLi8uLi8uLi9kb2MtY29udGV4dC5qcycpO1xuXG52YXIgZG9jUmlnaHRzID0gRG9jUmlnaHRzW0RPQ19UWVBFX0lEXSA/IERvY1JpZ2h0c1tET0NfVFlQRV9JRF0gOiBbXTtcblxuLyoqXHJcbiAqINCa0LvQsNGB0YEg0YDQtdCw0LvQuNC30YPQtdGCINC00L7QutGD0LzQtdC90YIg0YHQv9GA0LDQstC+0YfQvdC40LrQsCDQv9GA0LjQt9C90LDQutC+0LIuXHJcbiAqL1xuXG52YXIgRG9jdW1lbnRzID0gZnVuY3Rpb24gKF9SZWFjdCRQdXJlQ29tcG9uZW50KSB7XG4gICAgX2luaGVyaXRzKERvY3VtZW50cywgX1JlYWN0JFB1cmVDb21wb25lbnQpO1xuXG4gICAgZnVuY3Rpb24gRG9jdW1lbnRzKHByb3BzKSB7XG4gICAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBEb2N1bWVudHMpO1xuXG4gICAgICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoRG9jdW1lbnRzLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoRG9jdW1lbnRzKSkuY2FsbCh0aGlzLCBwcm9wcykpO1xuICAgIH1cblxuICAgIF9jcmVhdGVDbGFzcyhEb2N1bWVudHMsIFt7XG4gICAgICAgIGtleTogJ3JlbmRlcicsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChEb2N1bWVudFJlZ2lzdGVyLCB7IGluaXREYXRhOiB0aGlzLnByb3BzLmluaXREYXRhLFxuICAgICAgICAgICAgICAgIHVzZXJEYXRhOiB0aGlzLnByb3BzLnVzZXJEYXRhLFxuICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHRoaXMucHJvcHMuaGlzdG9yeSA/IHRoaXMucHJvcHMuaGlzdG9yeSA6IG51bGwsXG4gICAgICAgICAgICAgICAgbW9kdWxlOiB0aGlzLnByb3BzLm1vZHVsZSxcbiAgICAgICAgICAgICAgICByZWY6ICdyZWdpc3RlcicsXG4gICAgICAgICAgICAgICAgZG9jVHlwZUlkOiBET0NfVFlQRV9JRCxcbiAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLFxuICAgICAgICAgICAgICAgIHJlbmRlcjogdGhpcy5yZW5kZXJlciB9KTtcbiAgICAgICAgfVxuICAgIH0sIHtcbiAgICAgICAga2V5OiAncmVuZGVyZXInLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyZXIoKSB7XG4gICAgICAgICAgICB2YXIgdXNlclJvbGVzID0gRG9jQ29udGV4dC51c2VyRGF0YSA/IERvY0NvbnRleHQudXNlckRhdGEucm9sZXMgOiBbXTtcblxuICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgVG9vbGJhckNvbnRhaW5lcixcbiAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgIGNoZWNrUmlnaHRzKHVzZXJSb2xlcywgZG9jUmlnaHRzLCAnaW1wb3J0R3JvdXBzJykgPyBSZWFjdC5jcmVhdGVFbGVtZW50KEJ1dHRvblVwbG9hZCwge1xuICAgICAgICAgICAgICAgICAgICByZWY6ICdidG5VcGxvYWQnLFxuICAgICAgICAgICAgICAgICAgICBkb2NUeXBlSWQ6IERPQ19UWVBFX0lELFxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrOiB0aGlzLmhhbmRsZUNsaWNrLFxuICAgICAgICAgICAgICAgICAgICBzaG93OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBtaW1lVHlwZXM6ICcuY3N2J1xuICAgICAgICAgICAgICAgIH0pIDogbnVsbFxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqINC60LDRgdGC0L7QvNC90YvQuSDQvtCx0YDQsNCx0L7RgtGH0LjQuiDRgdC+0LHRi9GC0LjRjyDQutC70LjQuiDQvdCwINC60L3QvtC/0LrRgyDQuNC80L/QvtGA0YLQsFxyXG4gICAgICAgICAqL1xuXG4gICAgfSwge1xuICAgICAgICBrZXk6ICdoYW5kbGVDbGljaycsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBoYW5kbGVDbGljayhyZXN1bHQpIHtcblxuICAgICAgICAgICAgLy/QvtCx0L3QvtCy0LjQvCDQtNCw0L3QvdGL0LVcbiAgICAgICAgICAgIHZhciBEb2MgPSB0aGlzLnJlZnNbJ3JlZ2lzdGVyJ107XG4gICAgICAgICAgICBpZiAoIURvYykge1xuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHJlc3VsdCkge1xuICAgICAgICAgICAgICAgIERvYy5zZXRTdGF0ZSh7IHdhcm5pbmc6ICdFZHVrYWx0OiAgJyArIHJlc3VsdCArICc6ICcsIHdhcm5pbmdUeXBlOiAnb2snIH0pO1xuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBEb2MuZmV0Y2hEYXRhKCdzZWxlY3REb2NzJyk7XG4gICAgICAgICAgICAgICAgfSwgMTAwMDApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfV0pO1xuXG4gICAgcmV0dXJuIERvY3VtZW50cztcbn0oUmVhY3QuUHVyZUNvbXBvbmVudCk7XG5cbm1vZHVsZS5leHBvcnRzID0gRG9jdW1lbnRzO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vZnJvbnRlbmQvZG9jcy9sYXBzZV9ncnVwcC9pbmRleC5qc3hcbi8vIG1vZHVsZSBpZCA9IDMwNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7bW9kdWxlLmV4cG9ydHM9e2dyaWQ6e21haW5UYWJsZTp7d2lkdGg6JzEwMCUnLHRkOntib3JkZXI6JzFweCBzb2xpZCBsaWdodEdyZXknLGRpc3BsYXk6J3RhYmxlLWNlbGwnLHBhZGRpbmdMZWZ0Oic1cHgnfX0saGVhZGVyVGFibGU6e3dpZHRoOicxMDAlJ30sZ3JpZENvbnRhaW5lcjp7d2lkdGg6JzEwMCUnfX19O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vZnJvbnRlbmQvZG9jcy9sYXBzZV9ncnVwcC9zdHlsZXMuanNcbi8vIG1vZHVsZSBpZCA9IDMwNVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIFByb3BUeXBlcyA9IHJlcXVpcmUoJ3Byb3AtdHlwZXMnKTtcbnZhciBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG52YXIgRG9jQ29udGV4dCA9IHJlcXVpcmUoJy4uLy4uLy4uL2RvYy1jb250ZXh0Jyk7XG5cbnZhciBEb2N1bWVudFRlbXBsYXRlID0gcmVxdWlyZSgnLi4vLi4vZG9jdW1lbnRUZW1wbGF0ZS9pbmRleC5qc3gnKSxcbiAgICBJbnB1dFRleHQgPSByZXF1aXJlKCcuLi8uLi8uLi9jb21wb25lbnRzL2lucHV0LXRleHQvaW5wdXQtdGV4dC5qc3gnKSxcbiAgICBTZWxlY3QgPSByZXF1aXJlKCcuLi8uLi8uLi9jb21wb25lbnRzL3NlbGVjdC9zZWxlY3QuanN4JyksXG4gICAgSW5wdXROdW1iZXIgPSByZXF1aXJlKCcuLi8uLi8uLi9jb21wb25lbnRzL2lucHV0LW51bWJlci9pbnB1dC1udW1iZXIuanN4JyksXG4gICAgVGV4dEFyZWEgPSByZXF1aXJlKCcuLi8uLi8uLi9jb21wb25lbnRzL3RleHQtYXJlYS90ZXh0LWFyZWEuanN4JyksXG4gICAgRGF0YUdyaWQgPSByZXF1aXJlKCcuLi8uLi8uLi9jb21wb25lbnRzL2RhdGEtZ3JpZC9kYXRhLWdyaWQuanN4JyksXG4gICAgTW9kYWxQYWdlID0gcmVxdWlyZSgnLi4vLi4vLi4vY29tcG9uZW50cy9tb2RhbHBhZ2UvbW9kYWxQYWdlLmpzeCcpLFxuICAgIHN0eWxlcyA9IHJlcXVpcmUoJy4vc3R5bGVzJyk7XG5cbnZhciBMSUJSQVJJRVMgPSByZXF1aXJlKCcuLy4uLy4uLy4uLy4uL2NvbmZpZy9jb25zdGFudHMnKS5MQVBTRV9HUlVQUC5MSUJSQVJJRVM7XG5cbnZhciBMYXBzZUdydXBwID0gZnVuY3Rpb24gKF9SZWFjdCRQdXJlQ29tcG9uZW50KSB7XG4gICAgX2luaGVyaXRzKExhcHNlR3J1cHAsIF9SZWFjdCRQdXJlQ29tcG9uZW50KTtcblxuICAgIGZ1bmN0aW9uIExhcHNlR3J1cHAocHJvcHMpIHtcbiAgICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIExhcHNlR3J1cHApO1xuXG4gICAgICAgIHZhciBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChMYXBzZUdydXBwLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoTGFwc2VHcnVwcCkpLmNhbGwodGhpcywgcHJvcHMpKTtcblxuICAgICAgICBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIGxvYWRlZERhdGE6IGZhbHNlLFxuICAgICAgICAgICAgZG9jSWQ6IHByb3BzLmRvY0lkID8gcHJvcHMuZG9jSWQgOiBOdW1iZXIocHJvcHMubWF0Y2gucGFyYW1zLmRvY0lkKSxcbiAgICAgICAgICAgIG1vZHVsZTogJ2xhcHNlZCdcbiAgICAgICAgfTtcblxuICAgICAgICBfdGhpcy5yZW5kZXJlciA9IF90aGlzLnJlbmRlcmVyLmJpbmQoX3RoaXMpO1xuICAgICAgICBfdGhpcy5jcmVhdGVHcmlkUm93ID0gX3RoaXMuY3JlYXRlR3JpZFJvdy5iaW5kKF90aGlzKTtcbiAgICAgICAgX3RoaXMuZ3JpZFZhbGlkYXRlRmllbGRzID0gX3RoaXMuZ3JpZFZhbGlkYXRlRmllbGRzLmJpbmQoX3RoaXMpO1xuICAgICAgICBfdGhpcy5oYW5kbGVQYWdlQ2xpY2sgPSBfdGhpcy5oYW5kbGVQYWdlQ2xpY2suYmluZChfdGhpcyk7XG5cbiAgICAgICAgX3RoaXMucGFnZXMgPSBbeyBwYWdlTmFtZTogJ0xhcHNlIGdydXBwJywgZG9jVHlwZUlkOiAnTEFQU0VfR1JVUFAnIH0sIHsgcGFnZU5hbWU6ICdMYXN0ZSB0YWFiZWwnLCBoYW5kbGVQYWdlQ2xpY2s6IF90aGlzLmhhbmRsZVBhZ2VDbGljaywgZG9jVHlwZUlkOiAnTEFQU0VfVEFBQkVMJyB9XTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cblxuICAgIF9jcmVhdGVDbGFzcyhMYXBzZUdydXBwLCBbe1xuICAgICAgICBrZXk6ICdyZW5kZXInLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgICAgICAgdmFyIGluaXREYXRhID0gdGhpcy5wcm9wcy5pbml0RGF0YSA/IHRoaXMucHJvcHMuaW5pdERhdGEgOiB7fTtcblxuICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRG9jdW1lbnRUZW1wbGF0ZSwgeyBkb2NJZDogdGhpcy5zdGF0ZS5kb2NJZCxcbiAgICAgICAgICAgICAgICByZWY6ICdkb2N1bWVudCcsXG4gICAgICAgICAgICAgICAgbW9kdWxlOiB0aGlzLnN0YXRlLm1vZHVsZSxcbiAgICAgICAgICAgICAgICBkb2NUeXBlSWQ6ICdMQVBTRV9HUlVQUCcsXG4gICAgICAgICAgICAgICAgbGliczogTElCUkFSSUVTLFxuICAgICAgICAgICAgICAgIHVzZXJEYXRhOiB0aGlzLnByb3BzLnVzZXJEYXRhLFxuICAgICAgICAgICAgICAgIHBhZ2VzOiB0aGlzLnBhZ2VzLFxuICAgICAgICAgICAgICAgIGluaXREYXRhOiBpbml0RGF0YSxcbiAgICAgICAgICAgICAgICByZW5kZXJlcjogdGhpcy5yZW5kZXJlcixcbiAgICAgICAgICAgICAgICBjcmVhdGVHcmlkUm93OiB0aGlzLmNyZWF0ZUdyaWRSb3csXG4gICAgICAgICAgICAgICAgZ3JpZFZhbGlkYXRvcjogdGhpcy5ncmlkVmFsaWRhdGVGaWVsZHMsXG4gICAgICAgICAgICAgICAgaGlzdG9yeTogdGhpcy5wcm9wcy5oaXN0b3J5LFxuICAgICAgICAgICAgICAgIGZvY3VzRWxlbWVudDogJ2lucHV0LWtvb2QnXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAq0JLQtdGA0L3QtdGCINC60LDRgdGC0L7QvNC90YvQtSDQutC+0LzQv9C+0L3QtdC90YLRiyDQtNC+0LrRg9C80LXQvdGC0LBcclxuICAgICAgICAgKi9cblxuICAgIH0sIHtcbiAgICAgICAga2V5OiAncmVuZGVyZXInLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyZXIoc2VsZikge1xuICAgICAgICAgICAgdmFyIGlzRWRpdE1vZGUgPSBzZWxmLnN0YXRlLmVkaXRlZDtcblxuICAgICAgICAgICAgaWYgKChzZWxmLmRvY0RhdGEuaWQgPT09IDAgfHwgIXNlbGYuZG9jRGF0YS5wYXJlbnRpZCkgJiYgdGhpcy5zdGF0ZS5sYXBzSWQpIHtcbiAgICAgICAgICAgICAgICAvL25ldyByZWNvcmRcbiAgICAgICAgICAgICAgICBzZWxmLmRvY0RhdGEucGFyZW50aWQgPSB0aGlzLnN0YXRlLmxhcHNJZDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIGdyaWRWYWx1ZSA9IHZvaWQgMDtcbiAgICAgICAgICAgIGlmIChzZWxmLmdyaWRSb3dEYXRhKSB7XG4gICAgICAgICAgICAgICAgZ3JpZFZhbHVlID0gc2VsZi5ncmlkUm93RGF0YS5pZCA/IHNlbGYuZ3JpZFJvd0RhdGEuaWQgOiBudWxsO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyDRh9C40YHRgtC40Lwg0LrQtdGILCDRh9GC0L7QsdGLINC40L3RhNC+0YDQvNCw0YbQuNGPINC/0YDQuCDQuNC30LzQtdC90LXQvdC40Lgg0LHRi9C70LAg0L7QsdC90L7QstC70LXQvdCwXG4gICAgICAgICAgICBpZiAoc2VsZi5kb2NEYXRhICYmIHNlbGYuZG9jRGF0YS5pZCAmJiBEb2NDb250ZXh0LmxpYnMgJiYgRG9jQ29udGV4dC5saWJzW3NlbGYuZG9jRGF0YS5pZF0pIHtcbiAgICAgICAgICAgICAgICBkZWxldGUgRG9jQ29udGV4dC5saWJzW3NlbGYuZG9jRGF0YS5pZF07XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2MgfSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY1JvdyB9LFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jQ29sdW1uIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0VGV4dCwgeyB0aXRsZTogJ0tvb2Q6JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAna29vZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHNlbGYuZG9jRGF0YS5rb29kIHx8ICcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LWtvb2QnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiAhaXNFZGl0TW9kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXRUZXh0LCB7IHRpdGxlOiAnTmltZXR1czonLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICduaW1ldHVzJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogc2VsZi5kb2NEYXRhLm5pbWV0dXMgfHwgJycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQtbmltZXR1cycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFpc0VkaXRNb2RlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiBzZWxmLmhhbmRsZUlucHV0Q2hhbmdlIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChTZWxlY3QsIHsgdGl0bGU6ICdLb29saXR1c2UgdFxceEZDXFx4RkNwOicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3R5eXAnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IHNlbGYubGlic1sna29vbGl0dXNlX3R5eXAnXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogc2VsZi5kb2NEYXRhLnR5eXAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAndHl5cCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sbElkOiAnaWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiAhc2VsZi5zdGF0ZS5lZGl0ZWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IHNlbGYuaGFuZGxlSW5wdXRDaGFuZ2UgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICdsYWJlbCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnQWxsIFxceEZDa3N1c2VkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0VGV4dCwgeyB0aXRsZTogJycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdhbGxfeWtzdXNfMScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBzZWxmLmRvY0RhdGEuYWxsX3lrc3VzXzEgfHwgJycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LWFsbF95a3N1c18xJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFpc0VkaXRNb2RlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0VGV4dCwgeyB0aXRsZTogJycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdhbGxfeWtzdXNfMicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBzZWxmLmRvY0RhdGEuYWxsX3lrc3VzXzIgfHwgJycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LWFsbF95a3N1c18yJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFpc0VkaXRNb2RlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0VGV4dCwgeyB0aXRsZTogJycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdhbGxfeWtzdXNfMycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBzZWxmLmRvY0RhdGEuYWxsX3lrc3VzXzMgfHwgJycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LWFsbF95a3N1c18zJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFpc0VkaXRNb2RlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0VGV4dCwgeyB0aXRsZTogJycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdhbGxfeWtzdXNfNCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBzZWxmLmRvY0RhdGEuYWxsX3lrc3VzXzQgfHwgJycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LWFsbF95a3N1c180JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFpc0VkaXRNb2RlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0VGV4dCwgeyB0aXRsZTogJycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdhbGxfeWtzdXNfNScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBzZWxmLmRvY0RhdGEuYWxsX3lrc3VzXzUgfHwgJycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LWFsbF95a3N1c181JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFpc0VkaXRNb2RlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY1JvdyB9LFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KERhdGFHcmlkLCB7IHNvdXJjZTogJ3RlZW51c2VkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGdyaWREYXRhOiBzZWxmLmRvY0RhdGEuZ3JpZERhdGEsXG4gICAgICAgICAgICAgICAgICAgICAgICBncmlkQ29sdW1uczogc2VsZi5kb2NEYXRhLmdyaWRDb25maWcsXG4gICAgICAgICAgICAgICAgICAgICAgICBzaG93VG9vbEJhcjogaXNFZGl0TW9kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNyZWF0ZUdyaWRSb3c6IHRoaXMuY3JlYXRlR3JpZFJvdyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGhhbmRsZUdyaWRSb3c6IHNlbGYuaGFuZGxlR3JpZFJvdyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGhhbmRsZUdyaWRCdG5DbGljazogc2VsZi5oYW5kbGVHcmlkQnRuQ2xpY2ssXG4gICAgICAgICAgICAgICAgICAgICAgICByZWFkT25seTogIWlzRWRpdE1vZGUsXG4gICAgICAgICAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLmdyaWQuaGVhZGVyVGFibGUsXG4gICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdkYXRhLWdyaWQnIH0pXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY1JvdyB9LFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFRleHRBcmVhLCB7IHRpdGxlOiAnTVxceEU0cmt1c2VkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdtdXVkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ3RleHRhcmVhLW11dWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IHNlbGYuaGFuZGxlSW5wdXRDaGFuZ2UsXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogc2VsZi5kb2NEYXRhLm11dWQgfHwgJycsXG4gICAgICAgICAgICAgICAgICAgICAgICByZWFkT25seTogIWlzRWRpdE1vZGUgfSlcbiAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgIHNlbGYuc3RhdGUuZ3JpZFJvd0VkaXQgPyB0aGlzLmNyZWF0ZUdyaWRSb3coc2VsZikgOiBudWxsXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXHJcbiAgICAgICAgICog0YTQvtGA0LzQuNGA0YPQtdGCINC+0LHRitC10LrRgtGLINC80L7QtNCw0LvRjNC90L7Qs9C+INC+0LrQvdCwINGA0LXQtNCw0LrRgtC40YDQvtCy0LDQvdC40Y8g0YHRgtGA0L7QutC4INCz0YDQuNC00LBcclxuICAgICAgICAgKiBAcmV0dXJucyB7WE1MfVxyXG4gICAgICAgICAqL1xuXG4gICAgfSwge1xuICAgICAgICBrZXk6ICdjcmVhdGVHcmlkUm93JyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGNyZWF0ZUdyaWRSb3coc2VsZikge1xuICAgICAgICAgICAgdmFyIHJvdyA9IHNlbGYuZ3JpZFJvd0RhdGEgPyBzZWxmLmdyaWRSb3dEYXRhIDoge30sXG4gICAgICAgICAgICAgICAgdmFsaWRhdGVNZXNzYWdlID0gJycsXG4gICAgICAgICAgICAgICAgLy8gc2VsZi5zdGF0ZS53YXJuaW5nXG4gICAgICAgICAgICBidXR0b25Pa1JlYWRPbmx5ID0gdmFsaWRhdGVNZXNzYWdlLmxlbmd0aCA+IDAgfHwgIXNlbGYuc3RhdGUuY2hlY2tlZCxcbiAgICAgICAgICAgICAgICBtb2RhbE9iamVjdHMgPSBbJ2J0bk9rJywgJ2J0bkNhbmNlbCddO1xuXG4gICAgICAgICAgICBpZiAoYnV0dG9uT2tSZWFkT25seSkge1xuICAgICAgICAgICAgICAgIC8vINGD0LHQtdGA0LXQvCDQutC90L7Qv9C60YMg0J7QulxuICAgICAgICAgICAgICAgIG1vZGFsT2JqZWN0cy5zcGxpY2UoMCwgMSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICghcm93KSByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudCgnZGl2JywgbnVsbCk7XG5cbiAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgIHsgY2xhc3NOYW1lOiAnLm1vZGFsUGFnZScgfSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICBNb2RhbFBhZ2UsXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1vZGFsT2JqZWN0czogbW9kYWxPYmplY3RzLFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAnbW9kYWxwYWdlLWdyaWQtcm93JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHNob3c6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBtb2RhbFBhZ2VCdG5DbGljazogc2VsZi5tb2RhbFBhZ2VDbGljayxcbiAgICAgICAgICAgICAgICAgICAgICAgIG1vZGFsUGFnZU5hbWU6ICdSZWEgbGlzYW1pbmUgLyBwYXJhbmRhbWluZScgfSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICAgICAgeyByZWY6ICdncmlkLXJvdy1jb250YWluZXInIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxmLnN0YXRlLmdyaWRXYXJuaW5nLmxlbmd0aCA/IFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY1JvdyB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdzcGFuJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5zdGF0ZS5ncmlkV2FybmluZ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICkgOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jUm93IH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChTZWxlY3QsIHsgdGl0bGU6ICdUZWVudXMnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnbm9taWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaWJzOiAnbm9tZW5jbGF0dXJlJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogc2VsZi5saWJzWydub21lbmNsYXR1cmUnXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IE51bWJlcihyb3cubm9taWQpIHx8IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHRWYWx1ZTogcm93Lmtvb2QgfHwgJycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ25vbWlkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sbElkOiAnaWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogJ1RlZW51c2Uga29vZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiBzZWxmLmhhbmRsZUdyaWRSb3dDaGFuZ2UgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NSb3cgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0TnVtYmVyLCB7IHRpdGxlOiAnS29ndXM6ICcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdrb2d1cycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBOdW1iZXIocm93LmtvZ3VzKSB8fCAxLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiaW5kRGF0YTogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2tvZ3VzJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IHNlbGYuaGFuZGxlR3JpZFJvd0lucHV0IH0pXG4gICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jUm93IH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dE51bWJlciwgeyB0aXRsZTogJ0hpbmQ6ICcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdoaW5kJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IE51bWJlcihyb3cuaGluZCkgfHwgMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmluZERhdGE6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdoaW5kJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IHNlbGYuaGFuZGxlR3JpZFJvd0lucHV0IH0pXG4gICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIG51bGwsXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICdzcGFuJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbGlkYXRlTWVzc2FnZVxuICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqINCy0LDQu9C40LTQsNGC0L7RgCDQtNC70Y8g0YHRgtGA0L7QutC4INCz0YDQuNC00LBcclxuICAgICAgICAgKiBAcmV0dXJucyB7c3RyaW5nfVxyXG4gICAgICAgICAqL1xuXG4gICAgfSwge1xuICAgICAgICBrZXk6ICdncmlkVmFsaWRhdGVGaWVsZHMnLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gZ3JpZFZhbGlkYXRlRmllbGRzKCkge1xuICAgICAgICAgICAgdmFyIHdhcm5pbmcgPSAnJztcbiAgICAgICAgICAgIHZhciBkb2MgPSB0aGlzLnJlZnNbJ2RvY3VtZW50J107XG4gICAgICAgICAgICBpZiAoZG9jICYmIGRvYy5ncmlkUm93RGF0YSkge1xuXG4gICAgICAgICAgICAgICAgLy8g0YLQvtC70YzQutC+INC/0L7RgdC70LUg0L/RgNC+0LLQtdGA0LrQuCDRhNC+0YDQvNGLINC90LAg0LLQsNC70LjQtNC90L7RgdGC0YxcbiAgICAgICAgICAgICAgICBpZiAoZG9jLmdyaWRSb3dEYXRhICYmICFkb2MuZ3JpZFJvd0RhdGFbJ25vbWlkJ10pIHdhcm5pbmcgPSB3YXJuaW5nICsgJyBQdXVkdWIgb3BlcmF0c2lvb24nO1xuXG4gICAgICAgICAgICAgICAgLy/Qv9C+0LTRgdGC0LDQstC40Lwg0L3QsNC40LzQtdC90L7QstCw0L3QuNC1INGD0YHQu9C+0LPRg1xuXG4gICAgICAgICAgICAgICAgaWYgKGRvYy5ncmlkUm93RGF0YVsnbm9taWQnXSkge1xuXG4gICAgICAgICAgICAgICAgICAgIHZhciBub21EYXRhTmFtZSA9IGRvYy5saWJzWydub21lbmNsYXR1cmUnXS5maW5kKGZ1bmN0aW9uIChsaWIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBOdW1iZXIobGliLmlkKSA9PT0gTnVtYmVyKGRvYy5ncmlkUm93RGF0YVsnbm9taWQnXSk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgICAgIGRvYy5ncmlkUm93RGF0YVsna29vZCddID0gbm9tRGF0YU5hbWUua29vZDtcbiAgICAgICAgICAgICAgICAgICAgZG9jLmdyaWRSb3dEYXRhWyduaW1ldHVzJ10gPSBub21EYXRhTmFtZS5uaW1ldHVzO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmICghZG9jLmdyaWRSb3dEYXRhWydoaW5kJ10pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvYy5ncmlkUm93RGF0YVsnaGluZCddID0gbm9tRGF0YU5hbWUuaGluZDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlmICghZG9jLmdyaWRSb3dEYXRhWydrb2d1cyddKSB7XG4gICAgICAgICAgICAgICAgICAgIGRvYy5ncmlkUm93RGF0YVsna29ndXMnXSA9IDE7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHdhcm5pbmc7XG4gICAgICAgIH1cblxuICAgICAgICAvKipcclxuICAgICAgICAgKiDQvtCx0YDQsNCx0L7RgtGH0LjQuiDQutC70LjQutCwINC90LAg0YHRgtGA0LDQvdC40YbRg1xyXG4gICAgICAgICAqIEBwYXJhbSBwYWdlRG9jVHlwZUlkXHJcbiAgICAgICAgICovXG5cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ2hhbmRsZVBhZ2VDbGljaycsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBoYW5kbGVQYWdlQ2xpY2socGFnZURvY1R5cGVJZCkge1xuICAgICAgICAgICAgLy8g0LTQsNC90L3Ri9C1INC00LvRjyDRhNC40LvRjNGC0YDQsFxuICAgICAgICAgICAgdmFyIHlrc3VzID0gdGhpcy5yZWZzWydkb2N1bWVudCddLmRvY0RhdGEubmltZXR1cztcblxuICAgICAgICAgICAgdGhpcy5wcm9wcy5oaXN0b3J5LnB1c2goe1xuICAgICAgICAgICAgICAgIHBhdGhuYW1lOiAnL2xhcHNlZC8nICsgcGFnZURvY1R5cGVJZCxcbiAgICAgICAgICAgICAgICBzdGF0ZTogeyB5a3N1czogeWtzdXMsIHR5cGU6ICd0ZXh0JyB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1dKTtcblxuICAgIHJldHVybiBMYXBzZUdydXBwO1xufShSZWFjdC5QdXJlQ29tcG9uZW50KTtcblxuTGFwc2VHcnVwcC5wcm9wVHlwZXMgPSB7XG4gICAgZG9jSWQ6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgaW5pdERhdGE6IFByb3BUeXBlcy5vYmplY3QsXG4gICAgdXNlckRhdGE6IFByb3BUeXBlcy5vYmplY3Rcbn07XG5cbkxhcHNlR3J1cHAuZGVmYXVsdFByb3BzID0ge1xuICAgIHBhcmFtczogeyBkb2NJZDogMCB9LFxuICAgIGluaXREYXRhOiB7fSxcbiAgICB1c2VyRGF0YToge31cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gTGFwc2VHcnVwcDtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2Zyb250ZW5kL2RvY3MvbGFwc2VfZ3J1cHAvZG9jdW1lbnQvaW5kZXguanN4XG4vLyBtb2R1bGUgaWQgPSAzMDZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO21vZHVsZS5leHBvcnRzPXtkb2NSb3c6e2Rpc3BsYXk6J2ZsZXgnLGZsZXhEaXJlY3Rpb246J3JvdycvKlxyXG4gICAgICAgICAgICAgICAgYm9yZGVyOiAnMXB4IHNvbGlkIGJsdWUnXHJcbiAgICAgICAgKi99LGRvY0NvbHVtbjp7ZGlzcGxheTonZmxleCcsZmxleERpcmVjdGlvbjonY29sdW1uJywvKlxyXG4gICAgICAgICAgICAgICAgYm9yZGVyOiAnMXB4IHNvbGlkIHllbGxvdycsXHJcbiAgICAgICAgKi93aWR0aDonNTAlJ30sZG9jOntkaXNwbGF5OidmbGV4JyxmbGV4RGlyZWN0aW9uOidjb2x1bW4nLypcclxuICAgICAgICAgICAgICAgIGJvcmRlcjogJzFweCBzb2xpZCBicm93bidcclxuICAgICAgICAqL30sZ3JpZDp7bWFpblRhYmxlOnt3aWR0aDonMTAwJSd9LGhlYWRlclRhYmxlOnt3aWR0aDonMTAwJSd9LGdyaWRDb250YWluZXI6e3dpZHRoOicxMDAlJ319LGdyaWRSb3c6ey8qXHJcbiAgICAgICAgICAgICAgICBib3JkZXI6ICcxcHggc29saWQgYmxhY2snLFxyXG4gICAgICAgICovYmFja2dyb3VuZENvbG9yOid3aGl0ZScscG9zaXRpb246J3JlbGF0aXZlJyxtYXJnaW46JzEwJSAzMCUgMTAlIDMwJScsd2lkdGg6J2F1dG8nLG9wYWNpdHk6JzEnLHRvcDonMTAwcHgnfSxidG5FZGl0Tm9tOnt3aWR0aDonbWluLWNvbnRlbnQnfSxzZWxlY3ROb206e21hcmdpbkxlZnQ6JzEwcHgnfX07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9mcm9udGVuZC9kb2NzL2xhcHNlX2dydXBwL2RvY3VtZW50L3N0eWxlcy5qc1xuLy8gbW9kdWxlIGlkID0gMzA3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xudmFyIERvY3VtZW50UmVnaXN0ZXIgPSByZXF1aXJlKCcuLy4uL2RvY3VtZW50cy9kb2N1bWVudHMuanN4Jyk7XG52YXIgQnRuQXJ2ZXN0YSA9IHJlcXVpcmUoJy4vLi4vLi4vY29tcG9uZW50cy9idXR0b24tcmVnaXN0ZXIvYnV0dG9uLXRhc2svaW5kZXguanN4Jyk7XG52YXIgVG9vbGJhckNvbnRhaW5lciA9IHJlcXVpcmUoJy4vLi4vLi4vY29tcG9uZW50cy90b29sYmFyLWNvbnRhaW5lci90b29sYmFyLWNvbnRhaW5lci5qc3gnKTtcbnZhciBCdG5FbWFpbCA9IHJlcXVpcmUoJy4vLi4vLi4vY29tcG9uZW50cy9idXR0b24tcmVnaXN0ZXIvYnV0dG9uLWVtYWlsL2luZGV4LmpzeCcpO1xudmFyIEJ0blByaW50ID0gcmVxdWlyZSgnLi8uLi8uLi9jb21wb25lbnRzL2J1dHRvbi1yZWdpc3Rlci9idXR0b24tcmVnaXN0ZXItcHJpbnQvYnV0dG9uLXJlZ2lzdGVyLXByaW50LmpzeCcpO1xudmFyIERvY0NvbnRleHQgPSByZXF1aXJlKCcuLy4uLy4uL2RvYy1jb250ZXh0LmpzJyk7XG5cbnZhciBzdHlsZXMgPSByZXF1aXJlKCcuL3N0eWxlcycpO1xudmFyIERPQ19UWVBFX0lEID0gJ1RFQVRJUyc7XG52YXIgRVZFTlRTID0gW3sgbmFtZTogJ1RhYmVsaSBrb29zdGFtaW5lJywgbWV0aG9kOiAnYXJ2ZXN0YVRhYWJlbCcsIGRvY1R5cGVJZDogJ2xhcHNlX3RhYWJlbCcgfSwgeyBuYW1lOiAnQXJ2ZSBrb29zdGFtaW5lJywgbWV0aG9kOiAna29vc3RhQXJ2ZScsIGRvY1R5cGVJZDogJ2FydicgfSwgeyBuYW1lOiAnRXR0ZW1ha3N1YXJ2ZSBrb29zdGFtaW5lJywgbWV0aG9kOiAna29vc3RhRXR0ZW1ha3N1QXJ2ZScsIGRvY1R5cGVJZDogJ2FydicgfV07XG5cbi8qKlxyXG4gKiDQmtC70LDRgdGBINGA0LXQsNC70LjQt9GD0LXRgiDQtNC+0LrRg9C80LXQvdGCINGB0L/RgNCw0LLQvtGH0L3QuNC60LAg0L/RgNC40LfQvdCw0LrQvtCyLlxyXG4gKi9cblxudmFyIERvY3VtZW50cyA9IGZ1bmN0aW9uIChfUmVhY3QkUHVyZUNvbXBvbmVudCkge1xuICAgIF9pbmhlcml0cyhEb2N1bWVudHMsIF9SZWFjdCRQdXJlQ29tcG9uZW50KTtcblxuICAgIGZ1bmN0aW9uIERvY3VtZW50cyhwcm9wcykge1xuICAgICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgRG9jdW1lbnRzKTtcblxuICAgICAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoRG9jdW1lbnRzLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoRG9jdW1lbnRzKSkuY2FsbCh0aGlzLCBwcm9wcykpO1xuXG4gICAgICAgIF90aGlzLm9uQ2xpY2tIYW5kbGVyID0gX3RoaXMub25DbGlja0hhbmRsZXIuYmluZChfdGhpcyk7XG4gICAgICAgIF90aGlzLnJlbmRlcmVyID0gX3RoaXMucmVuZGVyZXIuYmluZChfdGhpcyk7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG5cbiAgICBfY3JlYXRlQ2xhc3MoRG9jdW1lbnRzLCBbe1xuICAgICAgICBrZXk6ICdyZW5kZXInLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRG9jdW1lbnRSZWdpc3RlciwgeyBpbml0RGF0YTogdGhpcy5wcm9wcy5pbml0RGF0YSxcbiAgICAgICAgICAgICAgICBoaXN0b3J5OiB0aGlzLnByb3BzLmhpc3RvcnkgPyB0aGlzLnByb3BzLmhpc3RvcnkgOiBudWxsLFxuICAgICAgICAgICAgICAgIG1vZHVsZTogdGhpcy5wcm9wcy5tb2R1bGUsXG4gICAgICAgICAgICAgICAgcmVmOiAncmVnaXN0ZXInLFxuICAgICAgICAgICAgICAgIGRvY1R5cGVJZDogRE9DX1RZUEVfSUQsXG4gICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcyxcbiAgICAgICAgICAgICAgICByZW5kZXI6IHRoaXMucmVuZGVyZXIgfSk7XG4gICAgICAgIH1cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ3JlbmRlcmVyJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcmVyKCkge1xuICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgVG9vbGJhckNvbnRhaW5lcixcbiAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnRuQXJ2ZXN0YSwge1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogJ0tvb3N0YSB0ZWF0aXNlZCcsXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s6IHRoaXMub25DbGlja0hhbmRsZXIsXG4gICAgICAgICAgICAgICAgICAgIHJlZjogJ2J0bi10ZWF0aXMnXG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChCdG5FbWFpbCwge1xuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrOiB0aGlzLm9uQ2xpY2tIYW5kbGVyLFxuICAgICAgICAgICAgICAgICAgICByZWY6ICdidG5FbWFpbCcsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiAnRW1haWwga8O1aWsgdmFsaXR1ZCB0ZWF0aXNlZCdcbiAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEJ0blByaW50LCB7XG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s6IHRoaXMub25DbGlja0hhbmRsZXIsXG4gICAgICAgICAgICAgICAgICAgIHJlZjogJ2J0blByaW50JyxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6ICdUcsO8a2sga8O1aWsgdmFsaXR1ZCB0ZWF0aXNlZCdcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgIH0sIHtcbiAgICAgICAga2V5OiAnb25DbGlja0hhbmRsZXInLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gb25DbGlja0hhbmRsZXIoZXZlbnQsIHNlaXN1Z2EpIHtcbiAgICAgICAgICAgIHZhciBEb2MgPSB0aGlzLnJlZnNbJ3JlZ2lzdGVyJ107XG4gICAgICAgICAgICB2YXIgaWRzID0gbmV3IFNldCgpOyAvLyDRgdGO0LTQsCDQv9C40YjQtdC8INC40LQg0YHRh9C10YLQvtC8LCDQutC+0YLQvtGA0YvQtSDQv9C+0LQg0L7QsdGA0LDQsdC+0YLQutGDXG5cbiAgICAgICAgICAgIHN3aXRjaCAoZXZlbnQpIHtcbiAgICAgICAgICAgICAgICBjYXNlICdLb29zdGEgdGVhdGlzZWQnOlxuXG4gICAgICAgICAgICAgICAgICAgIC8vINC+0YLQv9GA0LDQstC70Y/QtdC8INC30LDQv9GA0L7RgSDQvdCwINCy0YvQv9C+0LvQvdC10L3QuNC1XG4gICAgICAgICAgICAgICAgICAgIERvYy5mZXRjaERhdGEoJ2NhbGMva29vc3RhVGVhdGlzJywgeyBzZWlzdWdhOiBzZWlzdWdhIH0pLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXRhLnJlc3VsdCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIERvYy5zZXRTdGF0ZSh7IHdhcm5pbmc6ICdLb2trdSBhcnZlc3RhdHVkOiAnICsgZGF0YS5yZXN1bHQsIHdhcm5pbmdUeXBlOiAnb2snIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YS5lcnJvcl9tZXNzYWdlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIERvYy5zZXRTdGF0ZSh7IHdhcm5pbmc6ICdUZWtraXMgdmlnYTogJyArIGRhdGEuZXJyb3JfbWVzc2FnZSwgd2FybmluZ1R5cGU6ICdlcnJvcicgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRG9jLnNldFN0YXRlKHsgd2FybmluZzogJzAgZG9rdW1lbmRpZCBrb29zdGF0dWQnLCB3YXJuaW5nVHlwZTogJ25vdFZhbGlkJyB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBEb2MuZmV0Y2hEYXRhKCdzZWxlY3REb2NzJyk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlICdFbWFpbCBrw7VpayB2YWxpdHVkIHRlYXRpc2VkJzpcblxuICAgICAgICAgICAgICAgICAgICAvLyDQsdGD0LTQtdGCINC+0YLQv9GA0LDQstC70LXQvdC+INC90LAg0L/QvtGH0YLRgyAg0LLRi9Cx0YDQsNC90L3Ri9C1INC4INGC0L7Qu9GM0LrQviDQtNC70Y8g0Y3Quy7Qv9C+0YfRgtGLINGB0YfQtdGC0LBcbiAgICAgICAgICAgICAgICAgICAgRG9jLmdyaWREYXRhLmZvckVhY2goZnVuY3Rpb24gKHJvdykge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJvdy5zZWxlY3QpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDQstGL0LHRgNCw0L3QviDQtNC70Y8g0L/QtdGH0LDRgtC4XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWRzLmFkZChyb3cuaWQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgICAgICAvLyDQutC+0L3QstC10YDRgtCw0YbQuNGPINCyINC80LDRgdGB0LjQslxuICAgICAgICAgICAgICAgICAgICBpZHMgPSBBcnJheS5mcm9tKGlkcyk7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKCFpZHMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBEb2Muc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdhcm5pbmc6ICdNaXR0ZSDDvGh0ZWdpIGFydmUgbGVpZG51bScsIC8vINGB0YLRgNC+0LrQsCDQuNC30LLQtdGJ0LXQvdC40LlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3YXJuaW5nVHlwZTogJ25vdFZhbGlkJ1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyDQvtGC0L/RgNCw0LLQu9GP0LXQvCDQt9Cw0L/RgNC+0YEg0L3QsCDQstGL0L/QvtC70L3QtdC90LjQtVxuXG4gICAgICAgICAgICAgICAgICAgICAgICBEb2MuZmV0Y2hEYXRhKCdlbWFpbC90ZWF0aXMnLCBpZHMpLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YS5yZXN1bHQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRG9jLnNldFN0YXRlKHsgd2FybmluZzogJ0tva2t1IHNhYWRldHVkIHRlYXRpc2VkIGVtYWlsZ2E6ICcgKyBkYXRhLnJlc3VsdCwgd2FybmluZ1R5cGU6ICdvaycgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIERvYy5mZXRjaERhdGEoJ3NlbGVjdERvY3MnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCdlbWFpbCBlcnJvcicsIGRhdGEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBEb2Muc2V0U3RhdGUoeyB3YXJuaW5nOiAnVGVra2lzIHZpZ2E6ICcgKyBkYXRhLmVycm9yX21lc3NhZ2UsIHdhcm5pbmdUeXBlOiAnZXJyb3InIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ2VtYWlsIGVycm9yJywgZXJyb3IpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIERvYy5zZXRTdGF0ZSh7IHdhcm5pbmc6ICdUZWtraXMgdmlnYTogJyArIGVycm9yLCB3YXJuaW5nVHlwZTogJ2Vycm9yJyB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgJ1Ryw7xrayBrw7VpayB2YWxpdHVkIHRlYXRpc2VkJzpcbiAgICAgICAgICAgICAgICAgICAgLy8gUHJpbnRcblxuICAgICAgICAgICAgICAgICAgICAvLyDQsdGD0LTQtdGCINCy0YvQstC10LTQtdC90L4g0L3QsCDQv9C10YfQsNGC0Ywg0LLRi9Cx0YDQsNC90L3Ri9C1INC4INGC0L7Qu9GM0LrQviDQtNC70Y8g0L/QtdGH0LDRgtC4INGB0YfQtdGC0LBcbiAgICAgICAgICAgICAgICAgICAgRG9jLmdyaWREYXRhLmZvckVhY2goZnVuY3Rpb24gKHJvdykge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJvdy5zZWxlY3QpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDQstGL0LHRgNCw0L3QviDQtNC70Y8g0L/QtdGH0LDRgtC4XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWRzLmFkZChyb3cuaWQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgLy8g0LrQvtC90LLQtdGA0YLQsNGG0LjRjyDQsiDQvNCw0YHRgdC40LJcbiAgICAgICAgICAgICAgICAgICAgaWRzID0gQXJyYXkuZnJvbShpZHMpO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmIChpZHMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgRG9jLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3YXJuaW5nOiAnTGVpZHNpbiAnICsgaWRzLmxlbmd0aCArICcgdGVhdGlzZWQgcHJpbnRpbWlzZWtzJywgLy8g0YHRgtGA0L7QutCwINC40LfQstC10YnQtdC90LjQuVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdhcm5pbmdUeXBlOiAnb2snXG4gICAgICAgICAgICAgICAgICAgICAgICB9LCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgRG9jLmZldGNoRGF0YSgnc2VsZWN0RG9jcycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB1cmwgPSAnL211bHRpcGxlX3ByaW50LycgKyBET0NfVFlQRV9JRCArICcvJyArIERvY0NvbnRleHQudXNlckRhdGEudXVpZCArICcvJyArIGlkcztcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5vcGVuKCcnICsgdXJsKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIERvYy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2FybmluZzogJ01pdHRlIMO8aHRlZ2kgZG9rdW1lbmQgbGVpZG51bScsIC8vINGB0YLRgNC+0LrQsCDQuNC30LLQtdGJ0LXQvdC40LlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3YXJuaW5nVHlwZTogJ25vdFZhbGlkJ1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfV0pO1xuXG4gICAgcmV0dXJuIERvY3VtZW50cztcbn0oUmVhY3QuUHVyZUNvbXBvbmVudCk7XG5cbm1vZHVsZS5leHBvcnRzID0gRG9jdW1lbnRzO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vZnJvbnRlbmQvZG9jcy90ZWF0aXMvaW5kZXguanN4XG4vLyBtb2R1bGUgaWQgPSAzMDhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO21vZHVsZS5leHBvcnRzPXtncmlkOnttYWluVGFibGU6e3dpZHRoOicxMDAlJyx0ZDp7Ym9yZGVyOicxcHggc29saWQgbGlnaHRHcmV5JyxkaXNwbGF5Oid0YWJsZS1jZWxsJyxwYWRkaW5nTGVmdDonNXB4J319LGhlYWRlclRhYmxlOnt3aWR0aDonMTAwJSd9LGdyaWRDb250YWluZXI6e3dpZHRoOicxMDAlJ319fTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2Zyb250ZW5kL2RvY3MvdGVhdGlzL3N0eWxlcy5qc1xuLy8gbW9kdWxlIGlkID0gMzA5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgUHJvcFR5cGVzID0gcmVxdWlyZSgncHJvcC10eXBlcycpO1xudmFyIFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcblxudmFyIERvY3VtZW50VGVtcGxhdGUgPSByZXF1aXJlKCcuLi8uLi9kb2N1bWVudFRlbXBsYXRlL2luZGV4LmpzeCcpLFxuICAgIFNlbGVjdERhdGEgPSByZXF1aXJlKCcuLi8uLi8uLi9jb21wb25lbnRzL3NlbGVjdC1kYXRhL3NlbGVjdC1kYXRhLmpzeCcpLFxuICAgIElucHV0RGF0ZSA9IHJlcXVpcmUoJy4uLy4uLy4uL2NvbXBvbmVudHMvaW5wdXQtZGF0ZS9pbnB1dC1kYXRlLmpzeCcpLFxuICAgIElucHV0VGV4dCA9IHJlcXVpcmUoJy4uLy4uLy4uL2NvbXBvbmVudHMvaW5wdXQtdGV4dC9pbnB1dC10ZXh0LmpzeCcpLFxuICAgIEJ1dHRvbkVkaXQgPSByZXF1aXJlKCcuLi8uLi8uLi9jb21wb25lbnRzL2J1dHRvbi1yZWdpc3Rlci9idXR0b24tcmVnaXN0ZXItZWRpdC9idXR0b24tcmVnaXN0ZXItZWRpdC5qc3gnKSxcbiAgICBUZXh0QXJlYSA9IHJlcXVpcmUoJy4uLy4uLy4uL2NvbXBvbmVudHMvdGV4dC1hcmVhL3RleHQtYXJlYS5qc3gnKSxcbiAgICByZWxhdGVkRG9jdW1lbnRzID0gcmVxdWlyZSgnLi4vLi4vLi4vbWl4aW4vcmVsYXRlZERvY3VtZW50cy5qc3gnKSxcbiAgICBzdHlsZXMgPSByZXF1aXJlKCcuL3N0eWxlcycpO1xuXG52YXIgTElCRE9LID0gJ1RFQVRJUycsXG4gICAgTElCUkFSSUVTID0gW107XG5cbnZhciBub3cgPSBuZXcgRGF0ZSgpO1xuXG52YXIgVGVhdGlzID0gZnVuY3Rpb24gKF9SZWFjdCRQdXJlQ29tcG9uZW50KSB7XG4gICAgX2luaGVyaXRzKFRlYXRpcywgX1JlYWN0JFB1cmVDb21wb25lbnQpO1xuXG4gICAgZnVuY3Rpb24gVGVhdGlzKHByb3BzKSB7XG4gICAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBUZWF0aXMpO1xuXG4gICAgICAgIHZhciBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChUZWF0aXMuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihUZWF0aXMpKS5jYWxsKHRoaXMsIHByb3BzKSk7XG5cbiAgICAgICAgX3RoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBsb2FkZWREYXRhOiBmYWxzZSxcbiAgICAgICAgICAgIGRvY0lkOiBwcm9wcy5kb2NJZCA/IHByb3BzLmRvY0lkIDogTnVtYmVyKHByb3BzLm1hdGNoLnBhcmFtcy5kb2NJZCksXG4gICAgICAgICAgICBsYXBzSWQ6IG51bGwsXG4gICAgICAgICAgICBtb2R1bGU6ICdsYXBzZWQnXG4gICAgICAgIH07XG5cbiAgICAgICAgX3RoaXMucmVuZGVyZXIgPSBfdGhpcy5yZW5kZXJlci5iaW5kKF90aGlzKTtcbiAgICAgICAgX3RoaXMuaGFuZGxlUGFnZUNsaWNrID0gX3RoaXMuaGFuZGxlUGFnZUNsaWNrLmJpbmQoX3RoaXMpO1xuICAgICAgICBfdGhpcy5idG5FZGl0QXN1dHVzQ2xpY2sgPSBfdGhpcy5idG5FZGl0QXN1dHVzQ2xpY2suYmluZChfdGhpcyk7XG5cbiAgICAgICAgX3RoaXMucGFnZXMgPSBbeyBwYWdlTmFtZTogJ1RlYXRpcycsIGRvY1R5cGVJZDogJ1RFQVRJUycgfV07XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG5cbiAgICBfY3JlYXRlQ2xhc3MoVGVhdGlzLCBbe1xuICAgICAgICBrZXk6ICdyZW5kZXInLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgICAgICAgdmFyIGluaXREYXRhID0gdGhpcy5wcm9wcy5pbml0RGF0YSA/IHRoaXMucHJvcHMuaW5pdERhdGEgOiB7fTtcblxuICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRG9jdW1lbnRUZW1wbGF0ZSwgeyBkb2NJZDogdGhpcy5zdGF0ZS5kb2NJZCxcbiAgICAgICAgICAgICAgICByZWY6ICdkb2N1bWVudCcsXG4gICAgICAgICAgICAgICAgZG9jVHlwZUlkOiAnVEVBVElTJyxcbiAgICAgICAgICAgICAgICBoaXN0b3J5OiB0aGlzLnByb3BzLmhpc3RvcnksXG4gICAgICAgICAgICAgICAgbW9kdWxlOiB0aGlzLnN0YXRlLm1vZHVsZSxcbiAgICAgICAgICAgICAgICB1c2VyRGF0YTogdGhpcy5wcm9wcy51c2VyRGF0YSxcbiAgICAgICAgICAgICAgICBpbml0RGF0YTogaW5pdERhdGEsXG4gICAgICAgICAgICAgICAgbGliczogTElCUkFSSUVTLFxuICAgICAgICAgICAgICAgIHBhZ2VzOiB0aGlzLnBhZ2VzLFxuICAgICAgICAgICAgICAgIHJlbmRlcmVyOiB0aGlzLnJlbmRlcmVyLFxuICAgICAgICAgICAgICAgIGZvY3VzRWxlbWVudDogJ2lucHV0LW51bWJlcidcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXHJcbiAgICAgICAgICrQktC10YDQvdC10YIg0LrQsNGB0YLQvtC80L3Ri9C1INC60L7QvNC/0L7QvdC10L3RgtGLINC00L7QutGD0LzQtdC90YLQsFxyXG4gICAgICAgICAqL1xuXG4gICAgfSwge1xuICAgICAgICBrZXk6ICdyZW5kZXJlcicsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXJlcihzZWxmKSB7XG4gICAgICAgICAgICB2YXIgaXNFZGl0TW9kZSA9IHNlbGYuc3RhdGUuZWRpdGVkO1xuXG4gICAgICAgICAgICAvLyDRhNC+0YDQvNC40YDRg9C10Lwg0LfQsNCy0LjRgdC40LzQvtGB0YLQuFxuICAgICAgICAgICAgaWYgKHNlbGYuZG9jRGF0YS5yZWxhdGlvbnMpIHtcbiAgICAgICAgICAgICAgICByZWxhdGVkRG9jdW1lbnRzKHNlbGYpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jIH0sXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NSb3cgfSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY0NvbHVtbiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dFRleHQsIHsgdGl0bGU6ICdOdW1iZXI6JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnbnVtYmVyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogc2VsZi5kb2NEYXRhLm51bWJlciB8fCAnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC1udW1iZXInLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiAhaXNFZGl0TW9kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXREYXRlLCB7IHRpdGxlOiAnS3V1cFxceEU0ZXYgJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAna3B2JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogc2VsZi5kb2NEYXRhLmtwdixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC1rcHYnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiAhaXNFZGl0TW9kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSB9KVxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY1JvdyB9LFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jQ29sdW1uIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFNlbGVjdERhdGEsIHsgdGl0bGU6ICdTYWFqYTonLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdhc3V0dXNpZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGliTmFtZTogJ2FzdXR1c2VkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcWxGaWVsZHM6IFsnbmltZXR1cycsICdyZWdrb29kJ10sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogW10sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHNlbGYuZG9jRGF0YS5hc3V0dXNpZCB8fCAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHRWYWx1ZTogc2VsZi5kb2NEYXRhLmFzdXR1cyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3VuZFRvR3JpZDogJ25pbWV0dXMnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvdW5kVG9EYXRhOiAnYXN1dHVzJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdzZWxlY3QtYXN1dHVzaWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJ0bkRlbGV0ZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IHNlbGYuaGFuZGxlSW5wdXRDaGFuZ2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFpc0VkaXRNb2RlIH0pXG4gICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NDb2x1bW4gfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnV0dG9uRWRpdCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2J0bkVkaXQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiAnTXV1ZGEnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s6IHRoaXMuYnRuRWRpdEFzdXR1c0NsaWNrLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNob3c6ICFpc0VkaXRNb2RlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOiBzdHlsZXMuYnRuRWRpdCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZDogZmFsc2VcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jUm93IH0sXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoVGV4dEFyZWEsIHsgdGl0bGU6ICdTaXN1JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdzaXN1JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ3RleHRhcmVhLXNpc3UnLFxuICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IHNlbGYuaGFuZGxlSW5wdXRDaGFuZ2UsXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogc2VsZi5kb2NEYXRhLnNpc3UgfHwgJycsXG4gICAgICAgICAgICAgICAgICAgICAgICByZWFkT25seTogIWlzRWRpdE1vZGUgfSlcbiAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jUm93IH0sXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoVGV4dEFyZWEsIHsgdGl0bGU6ICdNXFx4RTRya3VzZWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ211dWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAndGV4dGFyZWEtbXV1ZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBzZWxmLmRvY0RhdGEubXV1ZCB8fCAnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiAhaXNFZGl0TW9kZSB9KVxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ2hhbmRsZVBhZ2VDbGljaycsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBoYW5kbGVQYWdlQ2xpY2socGFnZURvY1R5cGVJZCkge1xuICAgICAgICAgICAgdmFyIG5pbWkgPSB0aGlzLnJlZnNbJ2RvY3VtZW50J10uZG9jRGF0YS52YW5lbV9uaW1pO1xuXG4gICAgICAgICAgICB0aGlzLnByb3BzLmhpc3RvcnkucHVzaCh7XG4gICAgICAgICAgICAgICAgcGF0aG5hbWU6ICcvbGFwc2VkLycgKyBwYWdlRG9jVHlwZUlkLFxuICAgICAgICAgICAgICAgIHN0YXRlOiB7IGFzdXR1czogbmltaSwgdHlwZTogJ3RleHQnIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8g0L7QsdGA0LDQsdC+0YLRh9C40Log0YHQvtCx0YvRgtC40Y8g0LrQu9C40YHQutCwINC90LAg0LrQvdC+0L/QutC1INGA0LXQtNCw0LrRgtC40YDQvtCy0LDQvdC40Y8g0LrQvtC90YLRgC3QsNCz0LXQvdGC0LBcblxuICAgIH0sIHtcbiAgICAgICAga2V5OiAnYnRuRWRpdEFzdXR1c0NsaWNrJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGJ0bkVkaXRBc3V0dXNDbGljaygpIHtcbiAgICAgICAgICAgIHZhciBkb2NBc3V0dXNJZCA9IHRoaXMucmVmc1snZG9jdW1lbnQnXS5kb2NEYXRhLmFzdXR1c2lkO1xuXG4gICAgICAgICAgICAvLyDQvtGB0YPRidC10YHRgtCy0LjRgiDQv9C10YDQtdGF0L7QtCDQvdCwINC60LDRgNGC0L7Rh9C60YMg0LrQvtC90YLRgC3QsNCz0LXQvdGC0LBcbiAgICAgICAgICAgIHRoaXMucHJvcHMuaGlzdG9yeS5wdXNoKCcvbGFwc2VkL2FzdXR1c2VkLycgKyBkb2NBc3V0dXNJZCk7XG4gICAgICAgIH1cbiAgICB9XSk7XG5cbiAgICByZXR1cm4gVGVhdGlzO1xufShSZWFjdC5QdXJlQ29tcG9uZW50KTtcblxuVGVhdGlzLnByb3BUeXBlcyA9IHtcbiAgICBkb2NJZDogUHJvcFR5cGVzLm51bWJlcixcbiAgICBpbml0RGF0YTogUHJvcFR5cGVzLm9iamVjdCxcbiAgICB1c2VyRGF0YTogUHJvcFR5cGVzLm9iamVjdFxufTtcblxuVGVhdGlzLmRlZmF1bHRQcm9wcyA9IHtcbiAgICBwYXJhbXM6IHsgZG9jSWQ6IDAgfSxcbiAgICBpbml0RGF0YToge30sXG4gICAgdXNlckRhdGE6IHt9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFRlYXRpcztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2Zyb250ZW5kL2RvY3MvdGVhdGlzL2RvY3VtZW50L2luZGV4LmpzeFxuLy8gbW9kdWxlIGlkID0gMzEwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0Jzttb2R1bGUuZXhwb3J0cz17ZG9jUm93OntkaXNwbGF5OidmbGV4JyxmbGV4RGlyZWN0aW9uOidyb3cnfSxkb2NDb2x1bW46e2Rpc3BsYXk6J2ZsZXgnLGZsZXhEaXJlY3Rpb246J2NvbHVtbicsd2lkdGg6JzUwJSd9LGRvYzp7ZGlzcGxheTonZmxleCcsZmxleERpcmVjdGlvbjonY29sdW1uJ30sYnRuRWRpdDp7d2lkdGg6J21pbi1jb250ZW50J319O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vZnJvbnRlbmQvZG9jcy90ZWF0aXMvZG9jdW1lbnQvc3R5bGVzLmpzXG4vLyBtb2R1bGUgaWQgPSAzMTFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG52YXIgRG9jdW1lbnRzID0gcmVxdWlyZSgnLi8uLi9kb2N1bWVudHMvZG9jdW1lbnRzLmpzeCcpO1xudmFyIHN0eWxlcyA9IHJlcXVpcmUoJy4vc3R5bGVzJyk7XG5cbnZhciBET0NfVFlQRV9JRCA9ICdBU1VUVVNFX0xJSUsnO1xuXG4vKipcclxuICog0JrQu9Cw0YHRgSDRgNC10LDQu9C40LfRg9C10YIg0LTQvtC60YPQvNC10L3RgiDRgdC/0YDQsNCy0L7Rh9C90LjQutCwINC/0YDQuNC30L3QsNC60L7Qsi5cclxuICovXG5cbnZhciBBc3V0dXNlTGlpayA9IGZ1bmN0aW9uIChfUmVhY3QkUHVyZUNvbXBvbmVudCkge1xuICAgIF9pbmhlcml0cyhBc3V0dXNlTGlpaywgX1JlYWN0JFB1cmVDb21wb25lbnQpO1xuXG4gICAgZnVuY3Rpb24gQXN1dHVzZUxpaWsocHJvcHMpIHtcbiAgICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEFzdXR1c2VMaWlrKTtcblxuICAgICAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKEFzdXR1c2VMaWlrLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoQXN1dHVzZUxpaWspKS5jYWxsKHRoaXMsIHByb3BzKSk7XG4gICAgfVxuXG4gICAgX2NyZWF0ZUNsYXNzKEFzdXR1c2VMaWlrLCBbe1xuICAgICAgICBrZXk6ICdyZW5kZXInLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRG9jdW1lbnRzLCB7IGluaXREYXRhOiB0aGlzLnByb3BzLmluaXREYXRhLFxuICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHRoaXMucHJvcHMuaGlzdG9yeSA/IHRoaXMucHJvcHMuaGlzdG9yeSA6IG51bGwsXG4gICAgICAgICAgICAgICAgbW9kdWxlOiB0aGlzLnByb3BzLm1vZHVsZSxcbiAgICAgICAgICAgICAgICByZWY6ICdyZWdpc3RlcicsXG4gICAgICAgICAgICAgICAgZG9jVHlwZUlkOiBET0NfVFlQRV9JRCxcbiAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLFxuICAgICAgICAgICAgICAgIHJlbmRlcjogdGhpcy5yZW5kZXJlciB9KTtcbiAgICAgICAgfVxuICAgIH0sIHtcbiAgICAgICAga2V5OiAncmVuZGVyZXInLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyZXIoKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgIH1dKTtcblxuICAgIHJldHVybiBBc3V0dXNlTGlpaztcbn0oUmVhY3QuUHVyZUNvbXBvbmVudCk7XG5cbm1vZHVsZS5leHBvcnRzID0gQXN1dHVzZUxpaWs7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9mcm9udGVuZC9kb2NzL2FzdXR1c2VfbGlpay9pbmRleC5qc3hcbi8vIG1vZHVsZSBpZCA9IDMxMlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7bW9kdWxlLmV4cG9ydHM9e2dyaWQ6e21haW5UYWJsZTp7d2lkdGg6JzEwMCUnLHRkOntib3JkZXI6JzFweCBzb2xpZCBsaWdodEdyZXknLGRpc3BsYXk6J3RhYmxlLWNlbGwnLHBhZGRpbmdMZWZ0Oic1cHgnfX0saGVhZGVyVGFibGU6e3dpZHRoOicxMDAlJ30sZ3JpZENvbnRhaW5lcjp7d2lkdGg6JzEwMCUnfX19O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vZnJvbnRlbmQvZG9jcy9hc3V0dXNlX2xpaWsvc3R5bGVzLmpzXG4vLyBtb2R1bGUgaWQgPSAzMTNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG52YXIgUHJvcFR5cGVzID0gcmVxdWlyZSgncHJvcC10eXBlcycpO1xuXG52YXIgRG9jdW1lbnRUZW1wbGF0ZSA9IHJlcXVpcmUoJy4vLi4vLi4vZG9jdW1lbnRUZW1wbGF0ZS9pbmRleC5qc3gnKSxcbiAgICBJbnB1dFRleHQgPSByZXF1aXJlKCcuLi8uLi8uLi9jb21wb25lbnRzL2lucHV0LXRleHQvaW5wdXQtdGV4dC5qc3gnKSxcbiAgICBJbnB1dERhdGUgPSByZXF1aXJlKCcuLi8uLi8uLi9jb21wb25lbnRzL2lucHV0LWRhdGUvaW5wdXQtZGF0ZS5qc3gnKSxcbiAgICBUZXh0QXJlYSA9IHJlcXVpcmUoJy4uLy4uLy4uL2NvbXBvbmVudHMvdGV4dC1hcmVhL3RleHQtYXJlYS5qc3gnKSxcbiAgICBzdHlsZXMgPSByZXF1aXJlKCcuL3N0eWxlcycpO1xuXG4vKipcclxuICog0JrQu9Cw0YHRgSDRgNC10LDQu9C40LfRg9C10YIg0LTQvtC60YPQvNC10L3RgiDRgdC/0YDQsNCy0L7Rh9C90LjQutCwINC/0YDQuNC30L3QsNC60L7Qsi5cclxuICovXG5cbnZhciBBc3V0dXNlTGlpayA9IGZ1bmN0aW9uIChfUmVhY3QkUHVyZUNvbXBvbmVudCkge1xuICAgIF9pbmhlcml0cyhBc3V0dXNlTGlpaywgX1JlYWN0JFB1cmVDb21wb25lbnQpO1xuXG4gICAgZnVuY3Rpb24gQXN1dHVzZUxpaWsocHJvcHMpIHtcbiAgICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEFzdXR1c2VMaWlrKTtcblxuICAgICAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoQXN1dHVzZUxpaWsuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihBc3V0dXNlTGlpaykpLmNhbGwodGhpcywgcHJvcHMpKTtcblxuICAgICAgICBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIGRvY0lkOiBwcm9wcy5kb2NJZCA/IHByb3BzLmRvY0lkIDogTnVtYmVyKHByb3BzLm1hdGNoLnBhcmFtcy5kb2NJZCksXG4gICAgICAgICAgICBsb2FkZWREYXRhOiBmYWxzZVxuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5yZW5kZXJlciA9IF90aGlzLnJlbmRlcmVyLmJpbmQoX3RoaXMpO1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuXG4gICAgX2NyZWF0ZUNsYXNzKEFzdXR1c2VMaWlrLCBbe1xuICAgICAgICBrZXk6ICdyZW5kZXInLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRG9jdW1lbnRUZW1wbGF0ZSwgeyBkb2NJZDogdGhpcy5zdGF0ZS5kb2NJZCxcbiAgICAgICAgICAgICAgICByZWY6ICdkb2N1bWVudCcsXG4gICAgICAgICAgICAgICAgZG9jVHlwZUlkOiAnQVNVVFVTRV9MSUlLJyxcbiAgICAgICAgICAgICAgICBtb2R1bGU6IHRoaXMucHJvcHMubW9kdWxlLFxuICAgICAgICAgICAgICAgIGluaXREYXRhOiB0aGlzLnByb3BzLmluaXREYXRhLFxuICAgICAgICAgICAgICAgIHJlbmRlcmVyOiB0aGlzLnJlbmRlcmVyLFxuICAgICAgICAgICAgICAgIGZvY3VzRWxlbWVudDogJ2lucHV0LWtvb2QnLFxuICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHRoaXMucHJvcHMuaGlzdG9yeVxuXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqINCc0LXRgtC+0LQg0LLQtdGA0L3QtdGCINC60LDRgdGC0L7QvNC90YvQuSDQutC+0LzQv9C+0L3QtdC90YJcclxuICAgICAgICAgKiBAcGFyYW0gc2VsZlxyXG4gICAgICAgICAqIEByZXR1cm5zIHsqfVxyXG4gICAgICAgICAqL1xuXG4gICAgfSwge1xuICAgICAgICBrZXk6ICdyZW5kZXJlcicsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXJlcihzZWxmKSB7XG4gICAgICAgICAgICBpZiAoIXNlbGYuZG9jRGF0YSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvYyB9LFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jUm93IH0sXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NDb2x1bW4gfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXRUZXh0LCB7IHRpdGxlOiAnS29vZCAnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdrb29kJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC1rb29kJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkT25seTogIXNlbGYuc3RhdGUuZWRpdGVkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBzZWxmLmRvY0RhdGEua29vZCB8fCAnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSB9KVxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY1JvdyB9LFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jQ29sdW1uIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0VGV4dCwgeyB0aXRsZTogJ05pbWV0dXMgJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnbmltZXR1cycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQtbmltZXR1cycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFzZWxmLnN0YXRlLmVkaXRlZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogc2VsZi5kb2NEYXRhLm5pbWV0dXMgfHwgJycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IHNlbGYuaGFuZGxlSW5wdXRDaGFuZ2UgfSlcbiAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NSb3cgfSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY0NvbHVtbiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dERhdGUsIHsgdGl0bGU6ICdLZWh0aXYga3VuaTonLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICd2YWxpZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHNlbGYuZG9jRGF0YS52YWxpZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC12YWxpZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFzZWxmLnN0YXRlLmVkaXRlZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSB9KVxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY1JvdyB9LFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFRleHRBcmVhLCB7IHRpdGxlOiAnTXV1ZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnbXV1ZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICByZWY6ICd0ZXh0YXJlYS1tdXVkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiBzZWxmLmhhbmRsZUlucHV0Q2hhbmdlLFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHNlbGYuZG9jRGF0YS5tdXVkIHx8ICcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFzZWxmLnN0YXRlLmVkaXRlZCB9KVxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICB9XSk7XG5cbiAgICByZXR1cm4gQXN1dHVzZUxpaWs7XG59KFJlYWN0LlB1cmVDb21wb25lbnQpO1xuXG5Bc3V0dXNlTGlpay5wcm9wVHlwZXMgPSB7XG4gICAgZG9jSWQ6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgaW5pdERhdGE6IFByb3BUeXBlcy5vYmplY3Rcbn07XG5cbkFzdXR1c2VMaWlrLmRlZmF1bHRQcm9wcyA9IHtcbiAgICBpbml0RGF0YToge31cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gQXN1dHVzZUxpaWs7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9mcm9udGVuZC9kb2NzL2FzdXR1c2VfbGlpay9kb2N1bWVudC9pbmRleC5qc3hcbi8vIG1vZHVsZSBpZCA9IDMxNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7bW9kdWxlLmV4cG9ydHM9e2RvY1Jvdzp7ZGlzcGxheTonZmxleCcsZmxleERpcmVjdGlvbjoncm93J30sZG9jQ29sdW1uOntkaXNwbGF5OidmbGV4JyxmbGV4RGlyZWN0aW9uOidjb2x1bW4nLHdpZHRoOic1MCUnfSxkb2M6e2Rpc3BsYXk6J2ZsZXgnLGZsZXhEaXJlY3Rpb246J2NvbHVtbid9fTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2Zyb250ZW5kL2RvY3MvYXN1dHVzZV9saWlrL2RvY3VtZW50L3N0eWxlcy5qc1xuLy8gbW9kdWxlIGlkID0gMzE1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xudmFyIERvY3VtZW50cyA9IHJlcXVpcmUoJy4vLi4vZG9jdW1lbnRzL2RvY3VtZW50cy5qc3gnKTtcbnZhciBzdHlsZXMgPSByZXF1aXJlKCcuL3N0eWxlcycpO1xudmFyIERPQ19UWVBFX0lEID0gJ0tPT0xJVFVTRV9UWVlQJztcblxuLyoqXHJcbiAqINCa0LvQsNGB0YEg0YDQtdCw0LvQuNC30YPQtdGCINC00L7QutGD0LzQtdC90YIg0YHQv9GA0LDQstC+0YfQvdC40LrQsCDQv9GA0LjQt9C90LDQutC+0LIuXHJcbiAqL1xuXG52YXIgS29vbGl0dXNlVHl5cCA9IGZ1bmN0aW9uIChfUmVhY3QkUHVyZUNvbXBvbmVudCkge1xuICAgIF9pbmhlcml0cyhLb29saXR1c2VUeXlwLCBfUmVhY3QkUHVyZUNvbXBvbmVudCk7XG5cbiAgICBmdW5jdGlvbiBLb29saXR1c2VUeXlwKHByb3BzKSB7XG4gICAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBLb29saXR1c2VUeXlwKTtcblxuICAgICAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKEtvb2xpdHVzZVR5eXAuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihLb29saXR1c2VUeXlwKSkuY2FsbCh0aGlzLCBwcm9wcykpO1xuICAgIH1cblxuICAgIF9jcmVhdGVDbGFzcyhLb29saXR1c2VUeXlwLCBbe1xuICAgICAgICBrZXk6ICdyZW5kZXInLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRG9jdW1lbnRzLCB7IGluaXREYXRhOiB0aGlzLnByb3BzLmluaXREYXRhLFxuICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHRoaXMucHJvcHMuaGlzdG9yeSA/IHRoaXMucHJvcHMuaGlzdG9yeSA6IG51bGwsXG4gICAgICAgICAgICAgICAgbW9kdWxlOiB0aGlzLnByb3BzLm1vZHVsZSxcbiAgICAgICAgICAgICAgICByZWY6ICdyZWdpc3RlcicsXG4gICAgICAgICAgICAgICAgZG9jVHlwZUlkOiBET0NfVFlQRV9JRCxcbiAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLFxuICAgICAgICAgICAgICAgIHJlbmRlcjogdGhpcy5yZW5kZXJlciB9KTtcbiAgICAgICAgfVxuICAgIH0sIHtcbiAgICAgICAga2V5OiAncmVuZGVyZXInLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyZXIoKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgIH1dKTtcblxuICAgIHJldHVybiBLb29saXR1c2VUeXlwO1xufShSZWFjdC5QdXJlQ29tcG9uZW50KTtcblxubW9kdWxlLmV4cG9ydHMgPSBLb29saXR1c2VUeXlwO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vZnJvbnRlbmQvZG9jcy9rb29saXR1c2VfdHl5cC9pbmRleC5qc3hcbi8vIG1vZHVsZSBpZCA9IDMxNlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7bW9kdWxlLmV4cG9ydHM9e2dyaWQ6e21haW5UYWJsZTp7d2lkdGg6JzEwMCUnLHRkOntib3JkZXI6JzFweCBzb2xpZCBsaWdodEdyZXknLGRpc3BsYXk6J3RhYmxlLWNlbGwnLHBhZGRpbmdMZWZ0Oic1cHgnfX0saGVhZGVyVGFibGU6e3dpZHRoOicxMDAlJ30sZ3JpZENvbnRhaW5lcjp7d2lkdGg6JzEwMCUnfX19O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vZnJvbnRlbmQvZG9jcy9rb29saXR1c2VfdHl5cC9zdHlsZXMuanNcbi8vIG1vZHVsZSBpZCA9IDMxN1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbnZhciBQcm9wVHlwZXMgPSByZXF1aXJlKCdwcm9wLXR5cGVzJyk7XG5cbnZhciBEb2N1bWVudFRlbXBsYXRlID0gcmVxdWlyZSgnLi8uLi8uLi9kb2N1bWVudFRlbXBsYXRlL2luZGV4LmpzeCcpLFxuICAgIElucHV0VGV4dCA9IHJlcXVpcmUoJy4uLy4uLy4uL2NvbXBvbmVudHMvaW5wdXQtdGV4dC9pbnB1dC10ZXh0LmpzeCcpLFxuICAgIElucHV0RGF0ZSA9IHJlcXVpcmUoJy4uLy4uLy4uL2NvbXBvbmVudHMvaW5wdXQtZGF0ZS9pbnB1dC1kYXRlLmpzeCcpLFxuICAgIFRleHRBcmVhID0gcmVxdWlyZSgnLi4vLi4vLi4vY29tcG9uZW50cy90ZXh0LWFyZWEvdGV4dC1hcmVhLmpzeCcpLFxuICAgIHN0eWxlcyA9IHJlcXVpcmUoJy4vc3R5bGVzJyk7XG5cbi8qKlxyXG4gKiDQmtC70LDRgdGBINGA0LXQsNC70LjQt9GD0LXRgiDQtNC+0LrRg9C80LXQvdGCINGB0L/RgNCw0LLQvtGH0L3QuNC60LAg0L/RgNC40LfQvdCw0LrQvtCyLlxyXG4gKi9cblxudmFyIEtvb2xpdHVzZVR5eXAgPSBmdW5jdGlvbiAoX1JlYWN0JFB1cmVDb21wb25lbnQpIHtcbiAgICBfaW5oZXJpdHMoS29vbGl0dXNlVHl5cCwgX1JlYWN0JFB1cmVDb21wb25lbnQpO1xuXG4gICAgZnVuY3Rpb24gS29vbGl0dXNlVHl5cChwcm9wcykge1xuICAgICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgS29vbGl0dXNlVHl5cCk7XG5cbiAgICAgICAgdmFyIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKEtvb2xpdHVzZVR5eXAuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihLb29saXR1c2VUeXlwKSkuY2FsbCh0aGlzLCBwcm9wcykpO1xuXG4gICAgICAgIF90aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgZG9jSWQ6IHByb3BzLmRvY0lkID8gcHJvcHMuZG9jSWQgOiBOdW1iZXIocHJvcHMubWF0Y2gucGFyYW1zLmRvY0lkKSxcbiAgICAgICAgICAgIGxvYWRlZERhdGE6IGZhbHNlXG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLnJlbmRlcmVyID0gX3RoaXMucmVuZGVyZXIuYmluZChfdGhpcyk7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG5cbiAgICBfY3JlYXRlQ2xhc3MoS29vbGl0dXNlVHl5cCwgW3tcbiAgICAgICAga2V5OiAncmVuZGVyJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KERvY3VtZW50VGVtcGxhdGUsIHsgZG9jSWQ6IHRoaXMuc3RhdGUuZG9jSWQsXG4gICAgICAgICAgICAgICAgcmVmOiAnZG9jdW1lbnQnLFxuICAgICAgICAgICAgICAgIGRvY1R5cGVJZDogJ0tPT0xJVFVTRV9UWVlQJyxcbiAgICAgICAgICAgICAgICBtb2R1bGU6IHRoaXMucHJvcHMubW9kdWxlLFxuICAgICAgICAgICAgICAgIGluaXREYXRhOiB0aGlzLnByb3BzLmluaXREYXRhLFxuICAgICAgICAgICAgICAgIHJlbmRlcmVyOiB0aGlzLnJlbmRlcmVyLFxuICAgICAgICAgICAgICAgIGZvY3VzRWxlbWVudDogJ2lucHV0LWtvb2QnLFxuICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHRoaXMucHJvcHMuaGlzdG9yeVxuXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqINCc0LXRgtC+0LQg0LLQtdGA0L3QtdGCINC60LDRgdGC0L7QvNC90YvQuSDQutC+0LzQv9C+0L3QtdC90YJcclxuICAgICAgICAgKiBAcGFyYW0gc2VsZlxyXG4gICAgICAgICAqIEByZXR1cm5zIHsqfVxyXG4gICAgICAgICAqL1xuXG4gICAgfSwge1xuICAgICAgICBrZXk6ICdyZW5kZXJlcicsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXJlcihzZWxmKSB7XG4gICAgICAgICAgICBpZiAoIXNlbGYuZG9jRGF0YSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvYyB9LFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jUm93IH0sXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NDb2x1bW4gfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXRUZXh0LCB7IHRpdGxlOiAnS29vZCAnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdrb29kJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC1rb29kJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkT25seTogIXNlbGYuc3RhdGUuZWRpdGVkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBzZWxmLmRvY0RhdGEua29vZCB8fCAnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSB9KVxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY1JvdyB9LFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jQ29sdW1uIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0VGV4dCwgeyB0aXRsZTogJ05pbWV0dXMgJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnbmltZXR1cycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQtbmltZXR1cycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFzZWxmLnN0YXRlLmVkaXRlZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogc2VsZi5kb2NEYXRhLm5pbWV0dXMgfHwgJycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IHNlbGYuaGFuZGxlSW5wdXRDaGFuZ2UgfSlcbiAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NSb3cgfSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY0NvbHVtbiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dERhdGUsIHsgdGl0bGU6ICdLZWh0aXYga3VuaTonLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICd2YWxpZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHNlbGYuZG9jRGF0YS52YWxpZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC12YWxpZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFzZWxmLnN0YXRlLmVkaXRlZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSB9KVxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY1JvdyB9LFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFRleHRBcmVhLCB7IHRpdGxlOiAnTXV1ZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnbXV1ZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICByZWY6ICd0ZXh0YXJlYS1tdXVkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiBzZWxmLmhhbmRsZUlucHV0Q2hhbmdlLFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHNlbGYuZG9jRGF0YS5tdXVkIHx8ICcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFzZWxmLnN0YXRlLmVkaXRlZCB9KVxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICB9XSk7XG5cbiAgICByZXR1cm4gS29vbGl0dXNlVHl5cDtcbn0oUmVhY3QuUHVyZUNvbXBvbmVudCk7XG5cbktvb2xpdHVzZVR5eXAucHJvcFR5cGVzID0ge1xuICAgIGRvY0lkOiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIGluaXREYXRhOiBQcm9wVHlwZXMub2JqZWN0XG59O1xuXG5Lb29saXR1c2VUeXlwLmRlZmF1bHRQcm9wcyA9IHtcbiAgICBpbml0RGF0YToge31cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gS29vbGl0dXNlVHl5cDtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2Zyb250ZW5kL2RvY3Mva29vbGl0dXNlX3R5eXAvZG9jdW1lbnQvaW5kZXguanN4XG4vLyBtb2R1bGUgaWQgPSAzMThcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO21vZHVsZS5leHBvcnRzPXtkb2NSb3c6e2Rpc3BsYXk6J2ZsZXgnLGZsZXhEaXJlY3Rpb246J3Jvdyd9LGRvY0NvbHVtbjp7ZGlzcGxheTonZmxleCcsZmxleERpcmVjdGlvbjonY29sdW1uJyx3aWR0aDonNTAlJ30sZG9jOntkaXNwbGF5OidmbGV4JyxmbGV4RGlyZWN0aW9uOidjb2x1bW4nfX07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9mcm9udGVuZC9kb2NzL2tvb2xpdHVzZV90eXlwL2RvY3VtZW50L3N0eWxlcy5qc1xuLy8gbW9kdWxlIGlkID0gMzE5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xudmFyIERvY3VtZW50cyA9IHJlcXVpcmUoJy4vLi4vZG9jdW1lbnRzL2RvY3VtZW50cy5qc3gnKTtcbnZhciBzdHlsZXMgPSByZXF1aXJlKCcuL3N0eWxlcycpO1xudmFyIERPQ19UWVBFX0lEID0gJ0tPT0xJVFVTRV9MSUlLJztcblxuLyoqXHJcbiAqINCa0LvQsNGB0YEg0YDQtdCw0LvQuNC30YPQtdGCINC00L7QutGD0LzQtdC90YIg0YHQv9GA0LDQstC+0YfQvdC40LrQsCDQv9GA0LjQt9C90LDQutC+0LIuXHJcbiAqL1xuXG52YXIgS29vbGl0dXNlTGlpayA9IGZ1bmN0aW9uIChfUmVhY3QkUHVyZUNvbXBvbmVudCkge1xuICAgIF9pbmhlcml0cyhLb29saXR1c2VMaWlrLCBfUmVhY3QkUHVyZUNvbXBvbmVudCk7XG5cbiAgICBmdW5jdGlvbiBLb29saXR1c2VMaWlrKHByb3BzKSB7XG4gICAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBLb29saXR1c2VMaWlrKTtcblxuICAgICAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKEtvb2xpdHVzZUxpaWsuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihLb29saXR1c2VMaWlrKSkuY2FsbCh0aGlzLCBwcm9wcykpO1xuICAgIH1cblxuICAgIF9jcmVhdGVDbGFzcyhLb29saXR1c2VMaWlrLCBbe1xuICAgICAgICBrZXk6ICdyZW5kZXInLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRG9jdW1lbnRzLCB7IGluaXREYXRhOiB0aGlzLnByb3BzLmluaXREYXRhLFxuICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHRoaXMucHJvcHMuaGlzdG9yeSA/IHRoaXMucHJvcHMuaGlzdG9yeSA6IG51bGwsXG4gICAgICAgICAgICAgICAgbW9kdWxlOiB0aGlzLnByb3BzLm1vZHVsZSxcbiAgICAgICAgICAgICAgICByZWY6ICdyZWdpc3RlcicsXG4gICAgICAgICAgICAgICAgZG9jVHlwZUlkOiBET0NfVFlQRV9JRCxcbiAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLFxuICAgICAgICAgICAgICAgIHJlbmRlcjogdGhpcy5yZW5kZXJlciB9KTtcbiAgICAgICAgfVxuICAgIH0sIHtcbiAgICAgICAga2V5OiAncmVuZGVyZXInLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyZXIoKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgIH1dKTtcblxuICAgIHJldHVybiBLb29saXR1c2VMaWlrO1xufShSZWFjdC5QdXJlQ29tcG9uZW50KTtcblxubW9kdWxlLmV4cG9ydHMgPSBLb29saXR1c2VMaWlrO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vZnJvbnRlbmQvZG9jcy9rb29saXR1c2VfbGlpay9pbmRleC5qc3hcbi8vIG1vZHVsZSBpZCA9IDMyMFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7bW9kdWxlLmV4cG9ydHM9e2dyaWQ6e21haW5UYWJsZTp7d2lkdGg6JzEwMCUnLHRkOntib3JkZXI6JzFweCBzb2xpZCBsaWdodEdyZXknLGRpc3BsYXk6J3RhYmxlLWNlbGwnLHBhZGRpbmdMZWZ0Oic1cHgnfX0saGVhZGVyVGFibGU6e3dpZHRoOicxMDAlJ30sZ3JpZENvbnRhaW5lcjp7d2lkdGg6JzEwMCUnfX19O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vZnJvbnRlbmQvZG9jcy9rb29saXR1c2VfbGlpay9zdHlsZXMuanNcbi8vIG1vZHVsZSBpZCA9IDMyMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbnZhciBQcm9wVHlwZXMgPSByZXF1aXJlKCdwcm9wLXR5cGVzJyk7XG5cbnZhciBEb2N1bWVudFRlbXBsYXRlID0gcmVxdWlyZSgnLi8uLi8uLi9kb2N1bWVudFRlbXBsYXRlL2luZGV4LmpzeCcpLFxuICAgIElucHV0VGV4dCA9IHJlcXVpcmUoJy4uLy4uLy4uL2NvbXBvbmVudHMvaW5wdXQtdGV4dC9pbnB1dC10ZXh0LmpzeCcpLFxuICAgIElucHV0RGF0ZSA9IHJlcXVpcmUoJy4uLy4uLy4uL2NvbXBvbmVudHMvaW5wdXQtZGF0ZS9pbnB1dC1kYXRlLmpzeCcpLFxuICAgIFRleHRBcmVhID0gcmVxdWlyZSgnLi4vLi4vLi4vY29tcG9uZW50cy90ZXh0LWFyZWEvdGV4dC1hcmVhLmpzeCcpLFxuICAgIHN0eWxlcyA9IHJlcXVpcmUoJy4vc3R5bGVzJyk7XG5cbi8qKlxyXG4gKiDQmtC70LDRgdGBINGA0LXQsNC70LjQt9GD0LXRgiDQtNC+0LrRg9C80LXQvdGCINGB0L/RgNCw0LLQvtGH0L3QuNC60LAg0L/RgNC40LfQvdCw0LrQvtCyLlxyXG4gKi9cblxudmFyIEtvb2xpdHVzZUxpaWsgPSBmdW5jdGlvbiAoX1JlYWN0JFB1cmVDb21wb25lbnQpIHtcbiAgICBfaW5oZXJpdHMoS29vbGl0dXNlTGlpaywgX1JlYWN0JFB1cmVDb21wb25lbnQpO1xuXG4gICAgZnVuY3Rpb24gS29vbGl0dXNlTGlpayhwcm9wcykge1xuICAgICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgS29vbGl0dXNlTGlpayk7XG5cbiAgICAgICAgdmFyIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKEtvb2xpdHVzZUxpaWsuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihLb29saXR1c2VMaWlrKSkuY2FsbCh0aGlzLCBwcm9wcykpO1xuXG4gICAgICAgIF90aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgZG9jSWQ6IHByb3BzLmRvY0lkID8gcHJvcHMuZG9jSWQgOiBOdW1iZXIocHJvcHMubWF0Y2gucGFyYW1zLmRvY0lkKSxcbiAgICAgICAgICAgIGxvYWRlZERhdGE6IGZhbHNlXG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLnJlbmRlcmVyID0gX3RoaXMucmVuZGVyZXIuYmluZChfdGhpcyk7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG5cbiAgICBfY3JlYXRlQ2xhc3MoS29vbGl0dXNlTGlpaywgW3tcbiAgICAgICAga2V5OiAncmVuZGVyJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KERvY3VtZW50VGVtcGxhdGUsIHsgZG9jSWQ6IHRoaXMuc3RhdGUuZG9jSWQsXG4gICAgICAgICAgICAgICAgcmVmOiAnZG9jdW1lbnQnLFxuICAgICAgICAgICAgICAgIGRvY1R5cGVJZDogJ0tPT0xJVFVTRV9MSUlLJyxcbiAgICAgICAgICAgICAgICBtb2R1bGU6IHRoaXMucHJvcHMubW9kdWxlLFxuICAgICAgICAgICAgICAgIGluaXREYXRhOiB0aGlzLnByb3BzLmluaXREYXRhLFxuICAgICAgICAgICAgICAgIHJlbmRlcmVyOiB0aGlzLnJlbmRlcmVyLFxuICAgICAgICAgICAgICAgIGZvY3VzRWxlbWVudDogJ2lucHV0LWtvb2QnLFxuICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHRoaXMucHJvcHMuaGlzdG9yeVxuXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqINCc0LXRgtC+0LQg0LLQtdGA0L3QtdGCINC60LDRgdGC0L7QvNC90YvQuSDQutC+0LzQv9C+0L3QtdC90YJcclxuICAgICAgICAgKiBAcGFyYW0gc2VsZlxyXG4gICAgICAgICAqIEByZXR1cm5zIHsqfVxyXG4gICAgICAgICAqL1xuXG4gICAgfSwge1xuICAgICAgICBrZXk6ICdyZW5kZXJlcicsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXJlcihzZWxmKSB7XG4gICAgICAgICAgICBpZiAoIXNlbGYuZG9jRGF0YSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvYyB9LFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jUm93IH0sXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NDb2x1bW4gfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXRUZXh0LCB7IHRpdGxlOiAnS29vZCAnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdrb29kJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC1rb29kJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkT25seTogIXNlbGYuc3RhdGUuZWRpdGVkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBzZWxmLmRvY0RhdGEua29vZCB8fCAnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSB9KVxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY1JvdyB9LFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jQ29sdW1uIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0VGV4dCwgeyB0aXRsZTogJ05pbWV0dXMgJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnbmltZXR1cycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQtbmltZXR1cycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFzZWxmLnN0YXRlLmVkaXRlZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogc2VsZi5kb2NEYXRhLm5pbWV0dXMgfHwgJycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IHNlbGYuaGFuZGxlSW5wdXRDaGFuZ2UgfSlcbiAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NSb3cgfSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY0NvbHVtbiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dERhdGUsIHsgdGl0bGU6ICdLZWh0aXYga3VuaTonLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICd2YWxpZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHNlbGYuZG9jRGF0YS52YWxpZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC12YWxpZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFzZWxmLnN0YXRlLmVkaXRlZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSB9KVxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY1JvdyB9LFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFRleHRBcmVhLCB7IHRpdGxlOiAnTXV1ZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnbXV1ZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICByZWY6ICd0ZXh0YXJlYS1tdXVkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiBzZWxmLmhhbmRsZUlucHV0Q2hhbmdlLFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHNlbGYuZG9jRGF0YS5tdXVkIHx8ICcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFzZWxmLnN0YXRlLmVkaXRlZCB9KVxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICB9XSk7XG5cbiAgICByZXR1cm4gS29vbGl0dXNlTGlpaztcbn0oUmVhY3QuUHVyZUNvbXBvbmVudCk7XG5cbktvb2xpdHVzZUxpaWsucHJvcFR5cGVzID0ge1xuICAgIGRvY0lkOiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIGluaXREYXRhOiBQcm9wVHlwZXMub2JqZWN0XG59O1xuXG5Lb29saXR1c2VMaWlrLmRlZmF1bHRQcm9wcyA9IHtcbiAgICBpbml0RGF0YToge31cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gS29vbGl0dXNlTGlpaztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2Zyb250ZW5kL2RvY3Mva29vbGl0dXNlX2xpaWsvZG9jdW1lbnQvaW5kZXguanN4XG4vLyBtb2R1bGUgaWQgPSAzMjJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO21vZHVsZS5leHBvcnRzPXtkb2NSb3c6e2Rpc3BsYXk6J2ZsZXgnLGZsZXhEaXJlY3Rpb246J3Jvdyd9LGRvY0NvbHVtbjp7ZGlzcGxheTonZmxleCcsZmxleERpcmVjdGlvbjonY29sdW1uJyx3aWR0aDonNTAlJ30sZG9jOntkaXNwbGF5OidmbGV4JyxmbGV4RGlyZWN0aW9uOidjb2x1bW4nfX07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9mcm9udGVuZC9kb2NzL2tvb2xpdHVzZV9saWlrL2RvY3VtZW50L3N0eWxlcy5qc1xuLy8gbW9kdWxlIGlkID0gMzIzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xudmFyIERvY3VtZW50UmVnaXN0ZXIgPSByZXF1aXJlKCcuLy4uL2RvY3VtZW50cy9kb2N1bWVudHMuanN4Jyk7XG52YXIgSW5wdXROdW1iZXIgPSByZXF1aXJlKCcuLi8uLi9jb21wb25lbnRzL2lucHV0LW51bWJlci9pbnB1dC1udW1iZXIuanN4Jyk7XG52YXIgSW5wdXRUZXh0ID0gcmVxdWlyZSgnLi4vLi4vY29tcG9uZW50cy9pbnB1dC10ZXh0L2lucHV0LXRleHQuanN4Jyk7XG52YXIgVG9vbGJhckNvbnRhaW5lciA9IHJlcXVpcmUoJy4vLi4vLi4vY29tcG9uZW50cy90b29sYmFyLWNvbnRhaW5lci90b29sYmFyLWNvbnRhaW5lci5qc3gnKTtcbnZhciBCdG5Mb2VUYXN1ID0gcmVxdWlyZSgnLi8uLi8uLi9jb21wb25lbnRzL2J1dHRvbi1yZWdpc3Rlci9idXR0b24tdGFzay9pbmRleC5qc3gnKTtcblxudmFyIHN0eWxlcyA9IHJlcXVpcmUoJy4vc3R5bGVzJyk7XG52YXIgRE9DX1RZUEVfSUQgPSAnUEFOS19WVic7XG5cbnZhciBEb2NSaWdodHMgPSByZXF1aXJlKCcuLy4uLy4uLy4uL2NvbmZpZy9kb2NfcmlnaHRzJyk7XG52YXIgY2hlY2tSaWdodHMgPSByZXF1aXJlKCcuLy4uLy4uLy4uL2xpYnMvY2hlY2tSaWdodHMnKTtcbnZhciBEb2NDb250ZXh0ID0gcmVxdWlyZSgnLi8uLi8uLi9kb2MtY29udGV4dC5qcycpO1xuXG52YXIgZG9jUmlnaHRzID0gRG9jUmlnaHRzW0RPQ19UWVBFX0lEXSA/IERvY1JpZ2h0c1tET0NfVFlQRV9JRF0gOiBbXTtcbnZhciB1c2VyUm9sZXMgPSBEb2NDb250ZXh0LnVzZXJEYXRhID8gRG9jQ29udGV4dC51c2VyRGF0YS5yb2xlcyA6IFtdO1xudmFyIGdldFN1bSA9IHJlcXVpcmUoJy4vLi4vLi4vLi4vbGlicy9nZXRTdW0nKTtcblxuLyoqXHJcbiAqINCa0LvQsNGB0YEg0YDQtdCw0LvQuNC30YPQtdGCINC00L7QutGD0LzQtdC90YIg0YHQv9GA0LDQstC+0YfQvdC40LrQsCDQv9GA0LjQt9C90LDQutC+0LIuXHJcbiAqL1xuXG52YXIgRG9jdW1lbnRzID0gZnVuY3Rpb24gKF9SZWFjdCRQdXJlQ29tcG9uZW50KSB7XG4gICAgX2luaGVyaXRzKERvY3VtZW50cywgX1JlYWN0JFB1cmVDb21wb25lbnQpO1xuXG4gICAgZnVuY3Rpb24gRG9jdW1lbnRzKHByb3BzKSB7XG4gICAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBEb2N1bWVudHMpO1xuXG4gICAgICAgIHZhciBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChEb2N1bWVudHMuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihEb2N1bWVudHMpKS5jYWxsKHRoaXMsIHByb3BzKSk7XG5cbiAgICAgICAgX3RoaXMuRG9jID0gbnVsbDsgLy/RgdGB0YvQu9C60LAg0L3QsCDRgdGC0YDQsNC90LjRhtGDXG4gICAgICAgIF90aGlzLnJlbmRlcmVyID0gX3RoaXMucmVuZGVyZXIuYmluZChfdGhpcyk7XG4gICAgICAgIF90aGlzLnJlbmRlciA9IF90aGlzLnJlbmRlci5iaW5kKF90aGlzKTtcbiAgICAgICAgX3RoaXMub25DbGlja0hhbmRsZXIgPSBfdGhpcy5vbkNsaWNrSGFuZGxlci5iaW5kKF90aGlzKTtcbiAgICAgICAgX3RoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBzdW1tYTogMCxcbiAgICAgICAgICAgIHJlYWQ6IDAsXG4gICAgICAgICAgICBmaWx0cmlfcmVhZDogMFxuXG4gICAgICAgIH07XG5cbiAgICAgICAgX3RoaXMubWFrc2UgPSB7fTsgLy8g0LTQsNC90L3Ri9C1INC90LAg0YHRgtGA0L7QutGDXG5cbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cblxuICAgIF9jcmVhdGVDbGFzcyhEb2N1bWVudHMsIFt7XG4gICAgICAgIGtleTogJ3JlbmRlcicsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICAgICAgICB2YXIgc3RhdGUgPSB2b2lkIDA7XG4gICAgICAgICAgICBpZiAodGhpcy5Eb2MpIHtcbiAgICAgICAgICAgICAgICBzdGF0ZSA9IHRoaXMuRG9jICYmIHRoaXMuRG9jLnN0YXRlID8gdGhpcy5Eb2Muc3RhdGUgOiBudWxsO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB2YXIgdG9vbGJhclBhcmFtcyA9IHtcbiAgICAgICAgICAgICAgICBidG5BZGQ6IHtcbiAgICAgICAgICAgICAgICAgICAgc2hvdzogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGJ0bkVkaXQ6IHtcbiAgICAgICAgICAgICAgICAgICAgc2hvdzogdHJ1ZVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgYnRuRGVsZXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIHNob3c6IGZhbHNlXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBidG5QcmludDoge1xuICAgICAgICAgICAgICAgICAgICBzaG93OiBmYWxzZVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgYnRuU3RhcnQ6IHtcbiAgICAgICAgICAgICAgICAgICAgc2hvdzogZmFsc2VcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRG9jdW1lbnRSZWdpc3RlciwgeyBoaXN0b3J5OiB0aGlzLnByb3BzLmhpc3RvcnkgPyB0aGlzLnByb3BzLmhpc3RvcnkgOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb2R1bGU6IHRoaXMucHJvcHMubW9kdWxlLFxuICAgICAgICAgICAgICAgICAgICByZWY6ICdyZWdpc3RlcicsXG4gICAgICAgICAgICAgICAgICAgIGRvY1R5cGVJZDogRE9DX1RZUEVfSUQsXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlOiBzdHlsZXMsXG4gICAgICAgICAgICAgICAgICAgIHRvb2xiYXJQYXJhbXM6IHRvb2xiYXJQYXJhbXMsXG4gICAgICAgICAgICAgICAgICAgIHJlbmRlcjogdGhpcy5yZW5kZXJlciB9KSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0VGV4dCwgeyB0aXRsZTogJ0ZpbHRyaSBhbGwgLyByZWFkIGtva2t1OicsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdyZWFkX2tva2t1JyxcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcy50b3RhbCxcbiAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQtcmVhZCcsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBTdHJpbmcodGhpcy5zdGF0ZS5maWx0cmlfcmVhZCArICcvJyArIHRoaXMuc3RhdGUucmVhZCksXG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVkOiB0cnVlIH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXROdW1iZXIsIHsgdGl0bGU6ICdTdW1tYSBrb2trdTonLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnc3VtbWFfa29ra3UnLFxuICAgICAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLnRvdGFsLFxuICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC1zdW1tYScsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBOdW1iZXIodGhpcy5zdGF0ZS5zdW1tYSkudG9GaXhlZCgyKSB8fCAwLFxuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZDogdHJ1ZSB9KVxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgIH0sIHtcbiAgICAgICAga2V5OiAncmVuZGVyZXInLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyZXIoc2VsZikge1xuICAgICAgICAgICAgaWYgKCFzZWxmKSB7XG4gICAgICAgICAgICAgICAgLy8g0L3QtSDQuNC90LjRhtC40LDQu9C40LfQuNGA0L7QstCw0L3QvlxuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0aGlzLkRvYyA9IHNlbGY7XG4gICAgICAgICAgICB2YXIga2FzTG9lTWFrc2UgPSBmYWxzZTtcblxuICAgICAgICAgICAgLy8g0L7Qv9GA0LXQtNC10LvQuNC8INC40LQg0YHRgtGA0L7QutC4XG4gICAgICAgICAgICB2YXIgcm93SWQgPSB0aGlzLkRvYy5zdGF0ZSAmJiB0aGlzLkRvYy5zdGF0ZS52YWx1ZSA/IHRoaXMuRG9jLnN0YXRlLnZhbHVlIDogMDtcbiAgICAgICAgICAgIC8vINC90LDQudC00LXQvCDRgdGC0YDQvtC60YNcbiAgICAgICAgICAgIGlmIChyb3dJZCkge1xuICAgICAgICAgICAgICAgIHRoaXMubWFrc2UgPSB0aGlzLkRvYy5ncmlkRGF0YS5maW5kKGZ1bmN0aW9uIChyb3cpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJvdy5pZCA9PSByb3dJZDtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5tYWtzZSAmJiAhdGhpcy5tYWtzZS5kb2NfaWQpIHtcbiAgICAgICAgICAgICAgICAgICAga2FzTG9lTWFrc2UgPSB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8g0L/QvtC00YHRh9C10YIg0LjRgtC+0LPQvtCyXG4gICAgICAgICAgICB2YXIgc3VtbWEgPSBzZWxmLmdyaWREYXRhID8gZ2V0U3VtKHNlbGYuZ3JpZERhdGEsICdzdW1tYScpIDogMDtcbiAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgIHN1bW1hOiBzdW1tYSxcbiAgICAgICAgICAgICAgICByZWFkOiBzZWxmLmdyaWREYXRhICYmIHNlbGYuZ3JpZERhdGEubGVuZ3RoICYmIHNlbGYuZ3JpZERhdGFbMF0ucm93c190b3RhbCA/IHNlbGYuZ3JpZERhdGFbMF0ucm93c190b3RhbCA6IHRoaXMuc3RhdGUucmVhZCxcbiAgICAgICAgICAgICAgICBmaWx0cmlfcmVhZDogc2VsZi5ncmlkRGF0YSAmJiBzZWxmLmdyaWREYXRhLmxlbmd0aCAmJiBzZWxmLmdyaWREYXRhWzBdLmZpbHRlcl90b3RhbCA/IHNlbGYuZ3JpZERhdGFbMF0uZmlsdGVyX3RvdGFsIDogMFxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgIFRvb2xiYXJDb250YWluZXIsXG4gICAgICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgICAgICBrYXNMb2VNYWtzZSA/IFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnRuTG9lVGFzdSwge1xuICAgICAgICAgICAgICAgICAgICBzaG93RGF0ZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiAnTG9lIG1ha3NlJyxcbiAgICAgICAgICAgICAgICAgICAgb25DbGljazogdGhpcy5vbkNsaWNrSGFuZGxlcixcbiAgICAgICAgICAgICAgICAgICAgcmVmOiAnYnRuLWxvZV9tYWtzZScsXG4gICAgICAgICAgICAgICAgICAgIGtleTogJ2tleS1sb2VfbWFrc2UnXG4gICAgICAgICAgICAgICAgfSkgOiBudWxsXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgfSwge1xuICAgICAgICBrZXk6ICdvbkNsaWNrSGFuZGxlcicsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBvbkNsaWNrSGFuZGxlcihldmVudCwgc2Vpc3VnYSkge1xuICAgICAgICAgICAgdmFyIERvYyA9IHRoaXMucmVmc1sncmVnaXN0ZXInXTtcbiAgICAgICAgICAgIHZhciBtZXNzYWdlID0gJ0VkdWthbHQnO1xuXG4gICAgICAgICAgICBEb2MuZmV0Y2hEYXRhKCdjYWxjL2xvZV9tYWtzZScsIHsgbWFrc2VfaWQ6IHRoaXMubWFrc2UuaWQgfSkudGhlbihmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgICAgIGlmIChkYXRhLnJlc3VsdCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YS5yZXN1bHQgJiYgZGF0YS5yZXN1bHQuZXJyb3JfY29kZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gZXJyb3JcbiAgICAgICAgICAgICAgICAgICAgICAgIERvYy5zZXRTdGF0ZSh7IHdhcm5pbmc6ICdUZWtraXMgdmlnYTogJyArIGRhdGEucmVzdWx0LmVycm9yX21lc3NhZ2UsIHdhcm5pbmdUeXBlOiAnZXJyb3InIH0pO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEucmVzdWx0LmRhdGFbMF0uZXJyb3JfbWVzc2FnZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGVycm9yXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgRG9jLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2FybmluZzogJ1Rla2tpcyB2aWdhOiAnICsgZGF0YS5yZXN1bHQuZGF0YVswXS5lcnJvcl9tZXNzYWdlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3YXJuaW5nVHlwZTogJ2Vycm9yJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBEb2Muc2V0U3RhdGUoeyB3YXJuaW5nOiAnJyArIG1lc3NhZ2UsIHdhcm5pbmdUeXBlOiAnb2snIH0sIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIERvYy5mZXRjaERhdGEoJ3NlbGVjdERvY3MnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIC8vINC+0YLQutGA0YvQstCw0LXQvCDQvtGC0YfQtdGCXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEuZXJyb3JfbWVzc2FnZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgRG9jLnNldFN0YXRlKHsgd2FybmluZzogJ1Rla2tpcyB2aWdhOiAnICsgZGF0YS5lcnJvcl9tZXNzYWdlLCB3YXJuaW5nVHlwZTogJ2Vycm9yJyB9KTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIERvYy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2FybmluZzogJ0tva2t1IGFydmVzdGF0dWQgOiAnICsgZGF0YS5yZXN1bHQgKyAnLCAnICsgbWVzc2FnZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3YXJuaW5nVHlwZTogJ25vdFZhbGlkJ1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1dKTtcblxuICAgIHJldHVybiBEb2N1bWVudHM7XG59KFJlYWN0LlB1cmVDb21wb25lbnQpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IERvY3VtZW50cztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2Zyb250ZW5kL2RvY3MvcGFua192di9pbmRleC5qc3hcbi8vIG1vZHVsZSBpZCA9IDMyNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7bW9kdWxlLmV4cG9ydHM9e2dyaWQ6e21haW5UYWJsZTp7d2lkdGg6JzEwMCUnLHRkOntib3JkZXI6JzFweCBzb2xpZCBsaWdodEdyZXknLGRpc3BsYXk6J3RhYmxlLWNlbGwnLHBhZGRpbmdMZWZ0Oic1cHgnfX0saGVhZGVyVGFibGU6e3dpZHRoOicxMDAlJ30sZ3JpZENvbnRhaW5lcjp7d2lkdGg6JzEwMCUnfX0sdG90YWw6e3dpZHRoOidhdXRvJ319O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vZnJvbnRlbmQvZG9jcy9wYW5rX3Z2L3N0eWxlcy5qc1xuLy8gbW9kdWxlIGlkID0gMzI1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xudmFyIFByb3BUeXBlcyA9IHJlcXVpcmUoJ3Byb3AtdHlwZXMnKTtcblxudmFyIERvY3VtZW50VGVtcGxhdGUgPSByZXF1aXJlKCcuLy4uLy4uL2RvY3VtZW50VGVtcGxhdGUvaW5kZXguanN4JyksXG4gICAgSW5wdXRUZXh0ID0gcmVxdWlyZSgnLi4vLi4vLi4vY29tcG9uZW50cy9pbnB1dC10ZXh0L2lucHV0LXRleHQuanN4JyksXG4gICAgSW5wdXREYXRlID0gcmVxdWlyZSgnLi4vLi4vLi4vY29tcG9uZW50cy9pbnB1dC1kYXRlL2lucHV0LWRhdGUuanN4JyksXG4gICAgSW5wdXROdW1iZXIgPSByZXF1aXJlKCcuLi8uLi8uLi9jb21wb25lbnRzL2lucHV0LW51bWJlci9pbnB1dC1udW1iZXIuanN4JyksXG4gICAgVGV4dEFyZWEgPSByZXF1aXJlKCcuLi8uLi8uLi9jb21wb25lbnRzL3RleHQtYXJlYS90ZXh0LWFyZWEuanN4JyksXG4gICAgQnV0dG9uRWRpdCA9IHJlcXVpcmUoJy4uLy4uLy4uL2NvbXBvbmVudHMvYnV0dG9uLXJlZ2lzdGVyL2J1dHRvbi1yZWdpc3Rlci1lZGl0L2J1dHRvbi1yZWdpc3Rlci1lZGl0LmpzeCcpLFxuICAgIExvYWRpbmcgPSByZXF1aXJlKCcuLy4uLy4uLy4uL2NvbXBvbmVudHMvbG9hZGluZy9pbmRleC5qc3gnKTtcblxudmFyIHN0eWxlcyA9IHJlcXVpcmUoJy4vc3R5bGVzJyk7XG5cbi8qKlxyXG4gKiDQmtC70LDRgdGBINGA0LXQsNC70LjQt9GD0LXRgiDQtNC+0LrRg9C80LXQvdGCINGB0L/RgNCw0LLQvtGH0L3QuNC60LAg0L/RgNC40LfQvdCw0LrQvtCyLlxyXG4gKi9cblxudmFyIFR1bm51cyA9IGZ1bmN0aW9uIChfUmVhY3QkUHVyZUNvbXBvbmVudCkge1xuICAgIF9pbmhlcml0cyhUdW5udXMsIF9SZWFjdCRQdXJlQ29tcG9uZW50KTtcblxuICAgIGZ1bmN0aW9uIFR1bm51cyhwcm9wcykge1xuICAgICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgVHVubnVzKTtcblxuICAgICAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoVHVubnVzLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoVHVubnVzKSkuY2FsbCh0aGlzLCBwcm9wcykpO1xuXG4gICAgICAgIF90aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgZG9jSWQ6IHByb3BzLmRvY0lkID8gcHJvcHMuZG9jSWQgOiBOdW1iZXIocHJvcHMubWF0Y2gucGFyYW1zLmRvY0lkKSxcbiAgICAgICAgICAgIGxvYWRlZERhdGE6IGZhbHNlXG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLnJlbmRlcmVyID0gX3RoaXMucmVuZGVyZXIuYmluZChfdGhpcyk7XG4gICAgICAgIF90aGlzLmJ0bkVkaXRNS0NsaWNrID0gX3RoaXMuYnRuRWRpdE1LQ2xpY2suYmluZChfdGhpcyk7XG5cbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cblxuICAgIF9jcmVhdGVDbGFzcyhUdW5udXMsIFt7XG4gICAgICAgIGtleTogJ3JlbmRlcicsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChEb2N1bWVudFRlbXBsYXRlLCB7IGRvY0lkOiB0aGlzLnN0YXRlLmRvY0lkLFxuICAgICAgICAgICAgICAgIHJlZjogJ2RvY3VtZW50JyxcbiAgICAgICAgICAgICAgICBkb2NUeXBlSWQ6ICdQQU5LX1ZWJyxcbiAgICAgICAgICAgICAgICBtb2R1bGU6IHRoaXMucHJvcHMubW9kdWxlLFxuICAgICAgICAgICAgICAgIGluaXREYXRhOiB0aGlzLnByb3BzLmluaXREYXRhLFxuICAgICAgICAgICAgICAgIHVzZXJEYXRhOiB0aGlzLnByb3BzLnVzZXJEYXRhLFxuICAgICAgICAgICAgICAgIHJlbmRlcmVyOiB0aGlzLnJlbmRlcmVyLFxuICAgICAgICAgICAgICAgIGZvY3VzRWxlbWVudDogJ2lucHV0LWtvb2QnLFxuICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHRoaXMucHJvcHMuaGlzdG9yeSxcbiAgICAgICAgICAgICAgICByZWxvYWQ6IHRydWVcblxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICAvKipcclxuICAgICAgICAgKiDQnNC10YLQvtC0INCy0LXRgNC90LXRgiDQutCw0YHRgtC+0LzQvdGL0Lkg0LrQvtC80L/QvtC90LXQvdGCXHJcbiAgICAgICAgICogQHBhcmFtIHNlbGZcclxuICAgICAgICAgKiBAcmV0dXJucyB7Kn1cclxuICAgICAgICAgKi9cblxuICAgIH0sIHtcbiAgICAgICAga2V5OiAncmVuZGVyZXInLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyZXIoc2VsZikge1xuICAgICAgICAgICAgaWYgKCFzZWxmLmRvY0RhdGEpIHtcbiAgICAgICAgICAgICAgICAvLyDQvdC1INC30LDQs9GA0YPQttC10L3RiyDQtNCw0L3QvdGL0LVcbiAgICAgICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2MgfSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChMb2FkaW5nLCB7IGxhYmVsOiAnTGFhZGltaW5lLi4uJyB9KVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jIH0sXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NSb3cgfSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY0NvbHVtbiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dFRleHQsIHsgdGl0bGU6ICdQYW5rIElEICcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3BhbmtfaWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LXBhbmtfaWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiAhc2VsZi5zdGF0ZS5lZGl0ZWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHNlbGYuZG9jRGF0YS5wYW5rX2lkIHx8ICcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiBzZWxmLmhhbmRsZUlucHV0Q2hhbmdlIH0pXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jUm93IH0sXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NDb2x1bW4gfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXREYXRlLCB7IHRpdGxlOiAnTWFrc2VwXFx4RTRldjonLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICd2YWxpZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHNlbGYuZG9jRGF0YS5rcHYsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQta3B2JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkT25seTogIXNlbGYuc3RhdGUuZWRpdGVkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiBzZWxmLmhhbmRsZUlucHV0Q2hhbmdlIH0pXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jUm93IH0sXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NDb2x1bW4gfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXROdW1iZXIsIHsgdGl0bGU6ICdTdW1tYTogJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnc3VtbWEnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBOdW1iZXIoc2VsZi5kb2NEYXRhLnN1bW1hKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdzdW1tYScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFzZWxmLnN0YXRlLmVkaXRlZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSB9KVxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY1JvdyB9LFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jQ29sdW1uIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0VGV4dCwgeyB0aXRsZTogJ1ZpaXRlbnVtYmVyOicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3ZpaXRlbnVtYmVyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC12aWl0ZW51bWJlcicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFzZWxmLnN0YXRlLmVkaXRlZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogc2VsZi5kb2NEYXRhLnZpaXRlbnVtYmVyIHx8ICcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiBzZWxmLmhhbmRsZUlucHV0Q2hhbmdlIH0pXG4gICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NDb2x1bW4gfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICcoJyArIChzZWxmLmRvY0RhdGEubmltaSA/IHNlbGYuZG9jRGF0YS5uaW1pIHx8ICcsJyB8fCBzZWxmLmRvY0RhdGEuYXN1dHVzIDogJ1B1dWR1YicpICsgJyknXG4gICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jUm93IH0sXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NDb2x1bW4gfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXRUZXh0LCB7IHRpdGxlOiAnUmVnLihJc2lrdSkga29vZDonLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdpc2lrdWtvb2QnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LWlzaWt1a29vZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFzZWxmLnN0YXRlLmVkaXRlZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogc2VsZi5kb2NEYXRhLmlzaWt1a29vZCB8fCAnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSB9KVxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY1JvdyB9LFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jQ29sdW1uIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0VGV4dCwgeyB0aXRsZTogJ01ha3NqYTonLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdtYWtzamEnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LW1ha3NqYScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFzZWxmLnN0YXRlLmVkaXRlZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogc2VsZi5kb2NEYXRhLm1ha3NqYSB8fCAnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSB9KVxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY1JvdyB9LFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jQ29sdW1uIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0VGV4dCwgeyB0aXRsZTogJ01ha3NqYSBBQTonLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdpYmFuJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC1pYmFuJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkT25seTogIXNlbGYuc3RhdGUuZWRpdGVkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBzZWxmLmRvY0RhdGEuaWJhbiB8fCAnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSB9KVxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY1JvdyB9LFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jQ29sdW1uIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0VGV4dCwgeyB0aXRsZTogJ1Bhbms6JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAncGFuaycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQtcGFuaycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFzZWxmLnN0YXRlLmVkaXRlZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogc2VsZi5kb2NEYXRhLnBhbmsgfHwgJycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IHNlbGYuaGFuZGxlSW5wdXRDaGFuZ2UgfSlcbiAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NSb3cgfSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChUZXh0QXJlYSwgeyB0aXRsZTogJ1NlbGdpdHVzJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdzZWxnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ3RleHRhcmVhLXNlbGcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IHNlbGYuaGFuZGxlSW5wdXRDaGFuZ2UsXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogc2VsZi5kb2NEYXRhLnNlbGcgfHwgJycsXG4gICAgICAgICAgICAgICAgICAgICAgICByZWFkT25seTogIXNlbGYuc3RhdGUuZWRpdGVkIH0pXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICBzZWxmLmRvY0RhdGEuZG9jX2lkID8gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NSb3cgfSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY0NvbHVtbiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dFRleHQsIHsgdGl0bGU6ICdLb29zdGF0dWQgTUs6JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnbnVtYmVyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC1udW1iZXInLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBzZWxmLmRvY0RhdGEubnVtYmVyIHx8ICcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiBzZWxmLmhhbmRsZUlucHV0Q2hhbmdlIH0pXG4gICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NDb2x1bW4gfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnV0dG9uRWRpdCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2J0bkVkaXQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiAnTXV1ZGEnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s6IHRoaXMuYnRuRWRpdE1LQ2xpY2ssXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvdzogIXNlbGYuc3RhdGUuZWRpdGVkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOiBzdHlsZXMuYnRuRWRpdCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZDogZmFsc2VcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICApIDogbnVsbFxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vINC+0LHRgNCw0LHQvtGC0YfQuNC6INGB0L7QsdGL0YLQuNGPINC60LvQuNGB0LrQsCDQvdCwINC60L3QvtC/0LrQtSDRgNC10LTQsNC60YLQuNGA0L7QstCw0L3QuNGPINC60L7QvdGC0YAt0LDQs9C10L3RgtCwXG5cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ2J0bkVkaXRNS0NsaWNrJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGJ0bkVkaXRNS0NsaWNrKCkge1xuICAgICAgICAgICAgdmFyIGRvY01rSWQgPSB0aGlzLnJlZnNbJ2RvY3VtZW50J10uZG9jRGF0YS5kb2NfaWQ7XG5cbiAgICAgICAgICAgIC8vINC+0YHRg9GJ0LXRgdGC0LLQuNGCINC/0LXRgNC10YXQvtC0INC90LAg0LrQsNGA0YLQvtGH0LrRgyDQutC+0L3RgtGALdCw0LPQtdC90YLQsFxuICAgICAgICAgICAgdGhpcy5wcm9wcy5oaXN0b3J5LnB1c2goJy9sYXBzZWQvc21rLycgKyBkb2NNa0lkKTtcbiAgICAgICAgfVxuICAgIH1dKTtcblxuICAgIHJldHVybiBUdW5udXM7XG59KFJlYWN0LlB1cmVDb21wb25lbnQpO1xuXG5UdW5udXMucHJvcFR5cGVzID0ge1xuICAgIGRvY0lkOiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIGluaXREYXRhOiBQcm9wVHlwZXMub2JqZWN0XG59O1xuXG5UdW5udXMuZGVmYXVsdFByb3BzID0ge1xuICAgIGluaXREYXRhOiB7fVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBUdW5udXM7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9mcm9udGVuZC9kb2NzL3BhbmtfdnYvZG9jdW1lbnQvaW5kZXguanN4XG4vLyBtb2R1bGUgaWQgPSAzMjZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO21vZHVsZS5leHBvcnRzPXtkb2NSb3c6e2Rpc3BsYXk6J2ZsZXgnLGZsZXhEaXJlY3Rpb246J3Jvdyd9LGRvY0NvbHVtbjp7ZGlzcGxheTonZmxleCcsZmxleERpcmVjdGlvbjonY29sdW1uJyx3aWR0aDonNTAlJ30sZG9jOntkaXNwbGF5OidmbGV4JyxmbGV4RGlyZWN0aW9uOidjb2x1bW4nfSxidG5FZGl0Ont3aWR0aDonbWluLWNvbnRlbnQnfX07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9mcm9udGVuZC9kb2NzL3BhbmtfdnYvZG9jdW1lbnQvc3R5bGVzLmpzXG4vLyBtb2R1bGUgaWQgPSAzMjdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG52YXIgUHJvcFR5cGVzID0gcmVxdWlyZSgncHJvcC10eXBlcycpO1xuXG52YXIgRG9jdW1lbnRUZW1wbGF0ZSA9IHJlcXVpcmUoJy4vLi4vLi4vZG9jdW1lbnRUZW1wbGF0ZS9pbmRleC5qc3gnKSxcbiAgICBJbnB1dFRleHQgPSByZXF1aXJlKCcuLi8uLi8uLi9jb21wb25lbnRzL2lucHV0LXRleHQvaW5wdXQtdGV4dC5qc3gnKSxcbiAgICBMb2FkaW5nID0gcmVxdWlyZSgnLi8uLi8uLi8uLi9jb21wb25lbnRzL2xvYWRpbmcvaW5kZXguanN4JyksXG4gICAgU2VsZWN0RGF0YSA9IHJlcXVpcmUoJy4uLy4uLy4uL2NvbXBvbmVudHMvc2VsZWN0LWRhdGEvc2VsZWN0LWRhdGEuanN4Jyk7XG5cbnZhciBEb2NDb250ZXh0ID0gcmVxdWlyZSgnLi4vLi4vLi4vZG9jLWNvbnRleHQnKTtcblxudmFyIHN0eWxlcyA9IHJlcXVpcmUoJy4vc3R5bGVzJyk7XG5cbnZhciBMSUJSQVJJRVMgPSBbeyBpZDogJ2xhcHMnLCBmaWx0ZXI6ICcnIH1dO1xuXG4vKipcclxuICog0JrQu9Cw0YHRgSDRgNC10LDQu9C40LfRg9C10YIg0LTQvtC60YPQvNC10L3RgiDRgdC/0YDQsNCy0L7Rh9C90LjQutCwINC/0YDQuNC30L3QsNC60L7Qsi5cclxuICovXG5cbnZhciBWaWl0ZW5yID0gZnVuY3Rpb24gKF9SZWFjdCRQdXJlQ29tcG9uZW50KSB7XG4gICAgX2luaGVyaXRzKFZpaXRlbnIsIF9SZWFjdCRQdXJlQ29tcG9uZW50KTtcblxuICAgIGZ1bmN0aW9uIFZpaXRlbnIocHJvcHMpIHtcbiAgICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFZpaXRlbnIpO1xuXG4gICAgICAgIHZhciBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChWaWl0ZW5yLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoVmlpdGVucikpLmNhbGwodGhpcywgcHJvcHMpKTtcblxuICAgICAgICBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIGRvY0lkOiBwcm9wcy5kb2NJZCA/IHByb3BzLmRvY0lkIDogTnVtYmVyKHByb3BzLm1hdGNoLnBhcmFtcy5kb2NJZCksXG4gICAgICAgICAgICBsb2FkZWREYXRhOiBmYWxzZSxcbiAgICAgICAgICAgIGxhcHNJZDogbnVsbFxuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5yZW5kZXJlciA9IF90aGlzLnJlbmRlcmVyLmJpbmQoX3RoaXMpO1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuXG4gICAgX2NyZWF0ZUNsYXNzKFZpaXRlbnIsIFt7XG4gICAgICAgIGtleTogJ2NvbXBvbmVudERpZE1vdW50JyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgICAgICAgdmFyIGxhcHNJZCA9IHZvaWQgMDtcblxuICAgICAgICAgICAgLy/QtdGB0LvQuCDQv9Cw0YDQsNC80LXRgtGAINC90LAg0YDQtdCx0LXQvdC60LAg0LfQsNC00LDQvSDQsiDRgdGC0LXQudGC0LUsINGC0L4g0LjRgdC/0L7Qu9GM0LfRg9C10Lwg0LXQs9C+LiDQmNC90LDRh9C1INC40YnQtdC8INC10LPQviDQsiDQutC+0L3RgtC10LrRgdGC0LVcbiAgICAgICAgICAgIGlmICh0aGlzLnByb3BzLmhpc3RvcnkgJiYgdGhpcy5wcm9wcy5oaXN0b3J5LmxvY2F0aW9uLnN0YXRlKSB7XG4gICAgICAgICAgICAgICAgbGFwc0lkID0gdGhpcy5wcm9wcy5oaXN0b3J5LmxvY2F0aW9uLnN0YXRlLmxhcHNJZDtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgbGFwc0lkID0gRG9jQ29udGV4dFsnbGFwcyddID8gRG9jQ29udGV4dFsnbGFwcyddIDogbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoeyBsYXBzSWQ6IGxhcHNJZCB9KTtcbiAgICAgICAgfVxuICAgIH0sIHtcbiAgICAgICAga2V5OiAncmVuZGVyJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KERvY3VtZW50VGVtcGxhdGUsIHsgZG9jSWQ6IHRoaXMuc3RhdGUuZG9jSWQsXG4gICAgICAgICAgICAgICAgcmVmOiAnZG9jdW1lbnQnLFxuICAgICAgICAgICAgICAgIGRvY1R5cGVJZDogJ1ZJSVRFTlInLFxuICAgICAgICAgICAgICAgIG1vZHVsZTogdGhpcy5wcm9wcy5tb2R1bGUsXG4gICAgICAgICAgICAgICAgaW5pdERhdGE6IHRoaXMucHJvcHMuaW5pdERhdGEsXG4gICAgICAgICAgICAgICAgdXNlckRhdGE6IHRoaXMucHJvcHMudXNlckRhdGEsXG4gICAgICAgICAgICAgICAgbGliczogTElCUkFSSUVTLFxuICAgICAgICAgICAgICAgIHJlbG9hZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICByZW5kZXJlcjogdGhpcy5yZW5kZXJlcixcbiAgICAgICAgICAgICAgICBmb2N1c0VsZW1lbnQ6ICdpbnB1dC12aWl0ZW51bWJlcicsXG4gICAgICAgICAgICAgICAgaGlzdG9yeTogdGhpcy5wcm9wcy5oaXN0b3J5XG5cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXHJcbiAgICAgICAgICog0JzQtdGC0L7QtCDQstC10YDQvdC10YIg0LrQsNGB0YLQvtC80L3Ri9C5INC60L7QvNC/0L7QvdC10L3RglxyXG4gICAgICAgICAqIEBwYXJhbSBzZWxmXHJcbiAgICAgICAgICogQHJldHVybnMgeyp9XHJcbiAgICAgICAgICovXG5cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ3JlbmRlcmVyJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcmVyKHNlbGYpIHtcbiAgICAgICAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICAgICAgICBpZiAoIXNlbGYuZG9jRGF0YSkge1xuICAgICAgICAgICAgICAgIC8vINC90LUg0LfQsNCz0YDRg9C20LXQvdGLINC00LDQvdC90YvQtVxuICAgICAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvYyB9LFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KExvYWRpbmcsIHsgbGFiZWw6ICdMYWFkaW1pbmUuLi4nIH0pXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKCghTnVtYmVyKHNlbGYuZG9jRGF0YS5pZCkgfHwgIXNlbGYuZG9jRGF0YS5sYXBzX2lkKSAmJiB0aGlzLnN0YXRlLmxhcHNJZCkge1xuICAgICAgICAgICAgICAgIC8vbmV3IHJlY29yZFxuICAgICAgICAgICAgICAgIHNlbGYuZG9jRGF0YS5sYXBzX2lkID0gdGhpcy5zdGF0ZS5sYXBzSWQ7XG4gICAgICAgICAgICAgICAgdmFyIGxhcHNSb3cgPSBzZWxmLmxpYnNbJ2xhcHMnXS5maWx0ZXIoZnVuY3Rpb24gKGxhcHMpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGxhcHMuaWQgPT0gX3RoaXMyLnN0YXRlLmxhcHNJZDtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBpZiAobGFwc1Jvdykge1xuICAgICAgICAgICAgICAgICAgICBzZWxmLmRvY0RhdGEubmltaSA9IGxhcHNSb3cubmltaTtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5kb2NEYXRhLmlzaWt1a29vZCA9IGxhcHNSb3cuaXNpa3Vrb29kO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvYyB9LFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jUm93IH0sXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NDb2x1bW4gfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXRUZXh0LCB7IHRpdGxlOiAnQXN1dHVzJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnYXN1dHVzJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC1hc3V0dXMnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBzZWxmLmRvY0RhdGEuYXN1dHVzIHx8ICcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiBzZWxmLmhhbmRsZUlucHV0Q2hhbmdlIH0pXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jUm93IH0sXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NDb2x1bW4gfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXRUZXh0LCB7IHRpdGxlOiAnVmlpdGVudW1iZXIgJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAndmlpdGVudW1iZXInLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LXZpaXRlbnVtYmVyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkT25seTogIXNlbGYuc3RhdGUuZWRpdGVkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBzZWxmLmRvY0RhdGEudmlpdGVudW1iZXIgfHwgJycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IHNlbGYuaGFuZGxlSW5wdXRDaGFuZ2UgfSlcbiAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NSb3cgfSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY0NvbHVtbiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChTZWxlY3REYXRhLCB7IHRpdGxlOiAnTGFwc2UgbmltaTonLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdsYXBzX2lkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyRGF0YTogc2VsZi51c2VyRGF0YSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaWJOYW1lOiAnbGFwcycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3FsRmllbGRzOiBbJ25pbWknLCAnaXNpa3Vrb29kJ10sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogW10sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHNlbGYuZG9jRGF0YS5sYXBzX2lkIHx8IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdFZhbHVlOiBzZWxmLmRvY0RhdGEubmltaSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3VuZFRvR3JpZDogJ25pbWknLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvdW5kVG9EYXRhOiAnbmltaScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAnc2VsZWN0LWlzaWt1a29vZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnRuRGVsZXRlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoaXN0b3J5OiB0aGlzLnByb3BzLmhpc3RvcnksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFzZWxmLnN0YXRlLmVkaXRlZCB9KVxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgIH1dKTtcblxuICAgIHJldHVybiBWaWl0ZW5yO1xufShSZWFjdC5QdXJlQ29tcG9uZW50KTtcblxuVmlpdGVuci5wcm9wVHlwZXMgPSB7XG4gICAgZG9jSWQ6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgaW5pdERhdGE6IFByb3BUeXBlcy5vYmplY3Rcbn07XG5cblZpaXRlbnIuZGVmYXVsdFByb3BzID0ge1xuICAgIGluaXREYXRhOiB7fVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBWaWl0ZW5yO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vZnJvbnRlbmQvZG9jcy92aWl0ZW5yL2RvY3VtZW50L2luZGV4LmpzeFxuLy8gbW9kdWxlIGlkID0gMzI4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0Jzttb2R1bGUuZXhwb3J0cz17ZG9jUm93OntkaXNwbGF5OidmbGV4JyxmbGV4RGlyZWN0aW9uOidyb3cnfSxkb2NDb2x1bW46e2Rpc3BsYXk6J2ZsZXgnLGZsZXhEaXJlY3Rpb246J2NvbHVtbicsd2lkdGg6JzUwJSd9LGRvYzp7ZGlzcGxheTonZmxleCcsZmxleERpcmVjdGlvbjonY29sdW1uJ319O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vZnJvbnRlbmQvZG9jcy92aWl0ZW5yL2RvY3VtZW50L3N0eWxlcy5qc1xuLy8gbW9kdWxlIGlkID0gMzI5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xudmFyIFByb3BUeXBlcyA9IHJlcXVpcmUoJ3Byb3AtdHlwZXMnKTtcblxudmFyIERvY3VtZW50VGVtcGxhdGUgPSByZXF1aXJlKCcuLy4uLy4uL2RvY3VtZW50VGVtcGxhdGUvaW5kZXguanN4JyksXG4gICAgSW5wdXRUZXh0ID0gcmVxdWlyZSgnLi4vLi4vLi4vY29tcG9uZW50cy9pbnB1dC10ZXh0L2lucHV0LXRleHQuanN4JyksXG4gICAgSW5wdXROdW1iZXIgPSByZXF1aXJlKCcuLi8uLi8uLi9jb21wb25lbnRzL2lucHV0LW51bWJlci9pbnB1dC1udW1iZXIuanN4JyksXG4gICAgVGV4dEFyZWEgPSByZXF1aXJlKCcuLi8uLi8uLi9jb21wb25lbnRzL3RleHQtYXJlYS90ZXh0LWFyZWEuanN4JyksXG4gICAgc3R5bGVzID0gcmVxdWlyZSgnLi9zdHlsZXMnKTtcblxuLyoqXHJcbiAqINCa0LvQsNGB0YEg0YDQtdCw0LvQuNC30YPQtdGCINC00L7QutGD0LzQtdC90YIg0YHQv9GA0LDQstC+0YfQvdC40LrQsCDQv9GA0LjQt9C90LDQutC+0LIuXHJcbiAqL1xuXG52YXIgQ29uZmlnID0gZnVuY3Rpb24gKF9SZWFjdCRQdXJlQ29tcG9uZW50KSB7XG4gICAgX2luaGVyaXRzKENvbmZpZywgX1JlYWN0JFB1cmVDb21wb25lbnQpO1xuXG4gICAgZnVuY3Rpb24gQ29uZmlnKHByb3BzKSB7XG4gICAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBDb25maWcpO1xuXG4gICAgICAgIHZhciBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChDb25maWcuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihDb25maWcpKS5jYWxsKHRoaXMsIHByb3BzKSk7XG5cbiAgICAgICAgX3RoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBkb2NJZDogcHJvcHMuZG9jSWQgPyBwcm9wcy5kb2NJZCA6IE51bWJlcihwcm9wcy5tYXRjaC5wYXJhbXMuZG9jSWQpLFxuICAgICAgICAgICAgbG9hZGVkRGF0YTogZmFsc2VcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMucmVuZGVyZXIgPSBfdGhpcy5yZW5kZXJlci5iaW5kKF90aGlzKTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cblxuICAgIF9jcmVhdGVDbGFzcyhDb25maWcsIFt7XG4gICAgICAgIGtleTogJ3JlbmRlcicsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChEb2N1bWVudFRlbXBsYXRlLCB7IGRvY0lkOiB0aGlzLnN0YXRlLmRvY0lkLFxuICAgICAgICAgICAgICAgIHJlZjogJ2RvY3VtZW50JyxcbiAgICAgICAgICAgICAgICBkb2NUeXBlSWQ6ICdDT05GSUcnLFxuICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHRoaXMucHJvcHMuaGlzdG9yeSxcbiAgICAgICAgICAgICAgICBtb2R1bGU6IHRoaXMucHJvcHMubW9kdWxlLFxuICAgICAgICAgICAgICAgIGluaXREYXRhOiB0aGlzLnByb3BzLmluaXREYXRhLFxuICAgICAgICAgICAgICAgIHJlbmRlcmVyOiB0aGlzLnJlbmRlcmVyLFxuICAgICAgICAgICAgICAgIGZvY3VzRWxlbWVudDogJ2lucHV0LW51bWJlcidcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXHJcbiAgICAgICAgICog0JzQtdGC0L7QtCDQstC10YDQvdC10YIg0LrQsNGB0YLQvtC80L3Ri9C5INC60L7QvNC/0L7QvdC10L3RglxyXG4gICAgICAgICAqIEBwYXJhbSBzZWxmXHJcbiAgICAgICAgICogQHJldHVybnMgeyp9XHJcbiAgICAgICAgICovXG5cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ3JlbmRlcmVyJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcmVyKHNlbGYpIHtcbiAgICAgICAgICAgIGlmICghc2VsZi5kb2NEYXRhKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jIH0sXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NSb3cgfSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY0NvbHVtbiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dFRleHQsIHsgdGl0bGU6ICdQcmVmaWtzOiAnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdudW1iZXInLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LW51bWJlcicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFzZWxmLnN0YXRlLmVkaXRlZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogc2VsZi5kb2NEYXRhLm51bWJlciB8fCAnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXRUZXh0LCB7IHRpdGxlOiAnQXJ2ZXRlIHRhaHRwXFx4RTRldiAnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICd0YWh0cGFldicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQtdGFodHBhZXYnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiAhc2VsZi5zdGF0ZS5lZGl0ZWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHNlbGYuZG9jRGF0YS50YWh0cGFldiB8fCAnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXROdW1iZXIsIHsgdGl0bGU6ICdBcnZlIHZcXHhGNWxnbmV2dXNlIGxpbWlpdDogJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnbGltaWl0JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC1saW1paXQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiAhc2VsZi5zdGF0ZS5lZGl0ZWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHNlbGYuZG9jRGF0YS5saW1paXQgfHwgMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSB9KVxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY1JvdyB9LFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFRleHRBcmVhLCB7IHRpdGxlOiAnT21uaXZhIGUtYXJ2ZXRlIHNlcnZlcicsXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnZWFydmVkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ3RleHRhcmVhLWVhcnZlZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBzZWxmLmRvY0RhdGEuZWFydmVkIHx8ICcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFzZWxmLnN0YXRlLmVkaXRlZCB9KVxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICB9XSk7XG5cbiAgICByZXR1cm4gQ29uZmlnO1xufShSZWFjdC5QdXJlQ29tcG9uZW50KTtcblxuQ29uZmlnLnByb3BUeXBlcyA9IHtcbiAgICBkb2NJZDogUHJvcFR5cGVzLm51bWJlcixcbiAgICBpbml0RGF0YTogUHJvcFR5cGVzLm9iamVjdFxufTtcblxuQ29uZmlnLmRlZmF1bHRQcm9wcyA9IHtcbiAgICBpbml0RGF0YToge31cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gQ29uZmlnO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vZnJvbnRlbmQvZG9jcy9jb25maWcvZG9jdW1lbnQvaW5kZXguanN4XG4vLyBtb2R1bGUgaWQgPSAzMzBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO21vZHVsZS5leHBvcnRzPXtkb2NSb3c6e2Rpc3BsYXk6J2ZsZXgnLGZsZXhEaXJlY3Rpb246J3JvdycvKlxyXG4gICAgICAgICAgICAgICAgYm9yZGVyOiAnMXB4IHNvbGlkIGJsdWUnXHJcbiAgICAgICAgKi99LGRvY0NvbHVtbjp7ZGlzcGxheTonZmxleCcsZmxleERpcmVjdGlvbjonY29sdW1uJywvKlxyXG4gICAgICAgICAgICAgICAgYm9yZGVyOiAnMXB4IHNvbGlkIHllbGxvdycsXHJcbiAgICAgICAgKi93aWR0aDonNTAlJ30sZG9jOntkaXNwbGF5OidmbGV4JyxmbGV4RGlyZWN0aW9uOidjb2x1bW4nLypcclxuICAgICAgICAgICAgICAgIGJvcmRlcjogJzFweCBzb2xpZCBicm93bidcclxuICAgICAgICAqL319O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vZnJvbnRlbmQvZG9jcy9jb25maWcvZG9jdW1lbnQvc3R5bGVzLmpzXG4vLyBtb2R1bGUgaWQgPSAzMzFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG52YXIgUHJvcFR5cGVzID0gcmVxdWlyZSgncHJvcC10eXBlcycpO1xuXG52YXIgRG9jdW1lbnRUZW1wbGF0ZSA9IHJlcXVpcmUoJy4vLi4vLi4vZG9jdW1lbnRUZW1wbGF0ZS9pbmRleC5qc3gnKSxcbiAgICBJbnB1dFRleHQgPSByZXF1aXJlKCcuLi8uLi8uLi9jb21wb25lbnRzL2lucHV0LXRleHQvaW5wdXQtdGV4dC5qc3gnKSxcbiAgICBEYXRhR3JpZCA9IHJlcXVpcmUoJy4uLy4uLy4uL2NvbXBvbmVudHMvZGF0YS1ncmlkL2RhdGEtZ3JpZC5qc3gnKSxcbiAgICBUZXh0QXJlYSA9IHJlcXVpcmUoJy4uLy4uLy4uL2NvbXBvbmVudHMvdGV4dC1hcmVhL3RleHQtYXJlYS5qc3gnKSxcbiAgICBNb2RhbFBhZ2UgPSByZXF1aXJlKCcuLi8uLi8uLi9jb21wb25lbnRzL21vZGFscGFnZS9tb2RhbFBhZ2UuanN4JyksXG4gICAgU2VsZWN0ID0gcmVxdWlyZSgnLi4vLi4vLi4vY29tcG9uZW50cy9zZWxlY3Qvc2VsZWN0LmpzeCcpLFxuICAgIENoZWNrQm94ID0gcmVxdWlyZSgnLi4vLi4vLi4vY29tcG9uZW50cy9pbnB1dC1jaGVja2JveC9pbnB1dC1jaGVja2JveC5qc3gnKSxcbiAgICBzdHlsZXMgPSByZXF1aXJlKCcuL3N0eWxlcycpO1xuXG52YXIgTElCX09CSlMgPSByZXF1aXJlKCcuLy4uLy4uLy4uLy4uL2NvbmZpZy9jb25zdGFudHMnKS5SRUtWLkxJQl9PQkpTO1xuXG4vKipcclxuICog0JrQu9Cw0YHRgSDRgNC10LDQu9C40LfRg9C10YIg0LTQvtC60YPQvNC10L3RgiDRgdC/0YDQsNCy0L7Rh9C90LjQutCwINC/0YDQuNC30L3QsNC60L7Qsi5cclxuICovXG5cbnZhciBSZWt2ID0gZnVuY3Rpb24gKF9SZWFjdCRQdXJlQ29tcG9uZW50KSB7XG4gICAgX2luaGVyaXRzKFJla3YsIF9SZWFjdCRQdXJlQ29tcG9uZW50KTtcblxuICAgIGZ1bmN0aW9uIFJla3YocHJvcHMpIHtcbiAgICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFJla3YpO1xuXG4gICAgICAgIHZhciBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChSZWt2Ll9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoUmVrdikpLmNhbGwodGhpcywgcHJvcHMpKTtcblxuICAgICAgICBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIGRvY0lkOiBwcm9wcy5kb2NJZCA/IHByb3BzLmRvY0lkIDogTnVtYmVyKHByb3BzLm1hdGNoLnBhcmFtcy5kb2NJZCksXG4gICAgICAgICAgICBsb2FkZWREYXRhOiBmYWxzZVxuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5yZW5kZXJlciA9IF90aGlzLnJlbmRlcmVyLmJpbmQoX3RoaXMpO1xuICAgICAgICBfdGhpcy5jcmVhdGVHcmlkUm93ID0gX3RoaXMuY3JlYXRlR3JpZFJvdy5iaW5kKF90aGlzKTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cblxuICAgIF9jcmVhdGVDbGFzcyhSZWt2LCBbe1xuICAgICAgICBrZXk6ICdyZW5kZXInLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRG9jdW1lbnRUZW1wbGF0ZSwgeyBkb2NJZDogdGhpcy5zdGF0ZS5kb2NJZCxcbiAgICAgICAgICAgICAgICByZWY6ICdkb2N1bWVudCcsXG4gICAgICAgICAgICAgICAgZG9jVHlwZUlkOiAnUkVLVicsXG4gICAgICAgICAgICAgICAgaGlzdG9yeTogdGhpcy5wcm9wcy5oaXN0b3J5LFxuICAgICAgICAgICAgICAgIG1vZHVsZTogdGhpcy5wcm9wcy5tb2R1bGUsXG4gICAgICAgICAgICAgICAgbGliczogTElCX09CSlMsXG4gICAgICAgICAgICAgICAgaW5pdERhdGE6IHRoaXMucHJvcHMuaW5pdERhdGEsXG4gICAgICAgICAgICAgICAgcmVuZGVyZXI6IHRoaXMucmVuZGVyZXIsXG4gICAgICAgICAgICAgICAgY3JlYXRlR3JpZFJvdzogdGhpcy5jcmVhdGVHcmlkUm93XG5cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXHJcbiAgICAgICAgICog0JzQtdGC0L7QtCDQstC10YDQvdC10YIg0LrQsNGB0YLQvtC80L3Ri9C5INC60L7QvNC/0L7QvdC10L3RglxyXG4gICAgICAgICAqIEBwYXJhbSBzZWxmXHJcbiAgICAgICAgICogQHJldHVybnMgeyp9XHJcbiAgICAgICAgICovXG5cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ3JlbmRlcmVyJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcmVyKHNlbGYpIHtcbiAgICAgICAgICAgIGlmICghc2VsZi5kb2NEYXRhKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgZ3JpZERhdGEgPSBzZWxmLmRvY0RhdGEuZ3JpZERhdGEsXG4gICAgICAgICAgICAgICAgZ3JpZENvbHVtbnMgPSBzZWxmLmRvY0RhdGEuZ3JpZENvbmZpZztcblxuICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvYyB9LFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jUm93IH0sXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXRUZXh0LCB7IHRpdGxlOiAnUmVna29vZDogJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdyZWdrb29kJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LXJlZ2tvb2QnLFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFzZWxmLnN0YXRlLmVkaXRlZCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBzZWxmLmRvY0RhdGEucmVna29vZCB8fCAnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiBzZWxmLmhhbmRsZUlucHV0Q2hhbmdlIH0pXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY1JvdyB9LFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0VGV4dCwgeyB0aXRsZTogJ0tCTSBrb29kOiAnLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2tibWtvb2QnLFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQta2Jta29vZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICByZWFkT25seTogIXNlbGYuc3RhdGUuZWRpdGVkLFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHNlbGYuZG9jRGF0YS5rYm1rb29kIHx8ICcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IHNlbGYuaGFuZGxlSW5wdXRDaGFuZ2UgfSlcbiAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jUm93IH0sXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXRUZXh0LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ05pbWV0dXM6ICcsXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnbmltZXR1cycsXG4gICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC1uaW1ldHVzJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiAhc2VsZi5zdGF0ZS5lZGl0ZWQsXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogc2VsZi5kb2NEYXRhLm5pbWV0dXMgfHwgJycsXG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSB9KVxuICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NSb3cgfSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dFRleHQsIHsgdGl0bGU6ICdUXFx4RTRpcy4gbmltZXR1czogJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdtdXVkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LW11dWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFzZWxmLnN0YXRlLmVkaXRlZCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBzZWxmLmRvY0RhdGEubXV1ZCB8fCAnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiBzZWxmLmhhbmRsZUlucHV0Q2hhbmdlIH0pXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY1JvdyB9LFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFNlbGVjdCwgeyB0aXRsZTogJ0FzdXR1c2UgbGlpazonLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2xpaWsnLFxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogc2VsZi5saWJzWydhc3V0dXNlX2xpaWsnXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBzZWxmLmRvY0RhdGEubGlpayB8fCAnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHRWYWx1ZTogc2VsZi5kb2NEYXRhLmxpaWsgfHwgJycsXG4gICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdsaWlrJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbGxJZDogJ2tvb2QnLFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFzZWxmLnN0YXRlLmVkaXRlZCxcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiBzZWxmLmhhbmRsZUlucHV0Q2hhbmdlIH0pXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY1JvdyB9LFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFRleHRBcmVhLCB7IHRpdGxlOiAnQWFkcmVzczogJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdhYWRyZXNzJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ3RleHRhcmVhLWFhZHJlc3MnLFxuICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IHNlbGYuaGFuZGxlSW5wdXRDaGFuZ2UsXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogc2VsZi5kb2NEYXRhLmFhZHJlc3MgfHwgJycsXG4gICAgICAgICAgICAgICAgICAgICAgICByZWFkT25seTogIXNlbGYuc3RhdGUuZWRpdGVkIH0pXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY1JvdyB9LFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0VGV4dCwgeyB0aXRsZTogJ0p1aGF0YWphOiAnLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2p1aHQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQtanVodCcsXG4gICAgICAgICAgICAgICAgICAgICAgICByZWFkT25seTogIXNlbGYuc3RhdGUuZWRpdGVkLFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHNlbGYuZG9jRGF0YS5qdWh0IHx8ICcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IHNlbGYuaGFuZGxlSW5wdXRDaGFuZ2UgfSlcbiAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jUm93IH0sXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXRUZXh0LCB7IHRpdGxlOiAnUmFhbWF0dXBpZGFqYTogJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdyYWFtYScsXG4gICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC1yYWFtYScsXG4gICAgICAgICAgICAgICAgICAgICAgICByZWFkT25seTogIXNlbGYuc3RhdGUuZWRpdGVkLFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHNlbGYuZG9jRGF0YS5yYWFtYSB8fCAnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiBzZWxmLmhhbmRsZUlucHV0Q2hhbmdlIH0pXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY1JvdyB9LFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0VGV4dCwgeyB0aXRsZTogJ0VtYWlsOiAnLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2VtYWlsJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LWVtYWlsJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiAhc2VsZi5zdGF0ZS5lZGl0ZWQsXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogc2VsZi5kb2NEYXRhLmVtYWlsIHx8ICcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IHNlbGYuaGFuZGxlSW5wdXRDaGFuZ2UgfSlcbiAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jUm93IH0sXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXRUZXh0LCB7IHRpdGxlOiAnT21uaXZhIHNhbGFzXFx4RjVuYTogJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdlYXJ2ZWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQtZWFydmVkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiAhc2VsZi5zdGF0ZS5lZGl0ZWQsXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogc2VsZi5kb2NEYXRhLmVhcnZlZCB8fCAnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiBzZWxmLmhhbmRsZUlucHV0Q2hhbmdlIH0pXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY1JvdyB9LFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0VGV4dCwgeyB0aXRsZTogJ0UtYXJ2ZSBhc3V0dXNlIHJlZy5rb29kOiAnLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2VhcnZlX3JlZ2tvb2QnLFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQtZWFydmVfcmVna29vZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICByZWFkT25seTogIXNlbGYuc3RhdGUuZWRpdGVkLFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHNlbGYuZG9jRGF0YS5lYXJ2ZV9yZWdrb29kIHx8ICcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IHNlbGYuaGFuZGxlSW5wdXRDaGFuZ2UgfSlcbiAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jUm93IH0sXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NDb2x1bW4gfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXRUZXh0LCB7IHRpdGxlOiAnU0VCIGUtYXJ2ZSBhYTogJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnc2ViX2VhcnZlJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC1zZWJfZWFydmUnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiAhc2VsZi5zdGF0ZS5lZGl0ZWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHNlbGYuZG9jRGF0YS5zZWJfZWFydmUgfHwgJycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IHNlbGYuaGFuZGxlSW5wdXRDaGFuZ2UgfSlcbiAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY0NvbHVtbiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dFRleHQsIHsgdGl0bGU6ICdTRUIga2FzdXRhamEgdHVubnVzOiAnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdzZWInLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LXNlYl9wYXJvb2wnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiAhc2VsZi5zdGF0ZS5lZGl0ZWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHNlbGYuZG9jRGF0YS5zZWIgfHwgJycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IHNlbGYuaGFuZGxlSW5wdXRDaGFuZ2UgfSlcbiAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NSb3cgfSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY0NvbHVtbiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dFRleHQsIHsgdGl0bGU6ICdTV0VEIGUtYXJ2ZSBhYTogJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnc3dlZF9lYXJ2ZScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQtc3dlZC1lYXJ2ZScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFzZWxmLnN0YXRlLmVkaXRlZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogc2VsZi5kb2NEYXRhLnN3ZWRfZWFydmUgfHwgJycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IHNlbGYuaGFuZGxlSW5wdXRDaGFuZ2UgfSlcbiAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY0NvbHVtbiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dFRleHQsIHsgdGl0bGU6ICdTV0VEIGthc3V0YWphIHR1bm51czogJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnc3dlZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQtc3dlZF9wYXJvb2wnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiAhc2VsZi5zdGF0ZS5lZGl0ZWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHNlbGYuZG9jRGF0YS5zd2VkIHx8ICcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiBzZWxmLmhhbmRsZUlucHV0Q2hhbmdlIH0pXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jUm93IH0sXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRGF0YUdyaWQsIHsgc291cmNlOiAnZGV0YWlscycsXG4gICAgICAgICAgICAgICAgICAgICAgICBncmlkRGF0YTogZ3JpZERhdGEsXG4gICAgICAgICAgICAgICAgICAgICAgICBncmlkQ29sdW1uczogZ3JpZENvbHVtbnMsXG4gICAgICAgICAgICAgICAgICAgICAgICBzaG93VG9vbEJhcjogc2VsZi5zdGF0ZS5lZGl0ZWQsXG4gICAgICAgICAgICAgICAgICAgICAgICBoYW5kbGVHcmlkUm93OiB0aGlzLmhhbmRsZUdyaWRSb3csXG4gICAgICAgICAgICAgICAgICAgICAgICBoYW5kbGVHcmlkQnRuQ2xpY2s6IHNlbGYuaGFuZGxlR3JpZEJ0bkNsaWNrLFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFzZWxmLnN0YXRlLmVkaXRlZCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOiBzdHlsZXMuZ3JpZC5oZWFkZXJUYWJsZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2RhdGEtZ3JpZCcgfSlcbiAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgIHNlbGYuc3RhdGUuZ3JpZFJvd0VkaXQgPyB0aGlzLmNyZWF0ZUdyaWRSb3coc2VsZikgOiBudWxsXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXHJcbiAgICAgICAgICog0KHQvtC30LTQsNGB0YIg0LrQvtC80L/QvtC90LXRgiDRgdGC0YDQvtC60Lgg0LPRgNC40LTQsFxyXG4gICAgICAgICAqIEByZXR1cm5zIHtYTUx9XHJcbiAgICAgICAgICovXG5cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ2NyZWF0ZUdyaWRSb3cnLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gY3JlYXRlR3JpZFJvdyhzZWxmKSB7XG5cbiAgICAgICAgICAgIHZhciByb3cgPSBzZWxmLmdyaWRSb3dEYXRhID8gc2VsZi5ncmlkUm93RGF0YSA6IHt9LFxuICAgICAgICAgICAgICAgIHZhbGlkYXRlTWVzc2FnZSA9ICcnLFxuICAgICAgICAgICAgICAgIC8vIHNlbGYuc3RhdGUud2FybmluZ1xuICAgICAgICAgICAgYnV0dG9uT2tSZWFkT25seSA9IHZhbGlkYXRlTWVzc2FnZS5sZW5ndGggPiAwIHx8ICFzZWxmLnN0YXRlLmNoZWNrZWQsXG4gICAgICAgICAgICAgICAgbW9kYWxPYmplY3RzID0gWydidG5PaycsICdidG5DYW5jZWwnXTtcblxuICAgICAgICAgICAgaWYgKGJ1dHRvbk9rUmVhZE9ubHkpIHtcbiAgICAgICAgICAgICAgICAvLyDRg9Cx0LXRgNC10Lwg0LrQvdC+0L/QutGDINCe0LpcbiAgICAgICAgICAgICAgICBtb2RhbE9iamVjdHMuc3BsaWNlKDAsIDEpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoIXJvdykgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoJ2RpdicsIG51bGwpO1xuXG4gICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICB7IGNsYXNzTmFtZTogJy5tb2RhbFBhZ2UnIH0sXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgTW9kYWxQYWdlLFxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBtb2RhbE9iamVjdHM6IG1vZGFsT2JqZWN0cyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ21vZGFscGFnZS1ncmlkLXJvdycsXG4gICAgICAgICAgICAgICAgICAgICAgICBzaG93OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgbW9kYWxQYWdlQnRuQ2xpY2s6IHNlbGYubW9kYWxQYWdlQ2xpY2ssXG4gICAgICAgICAgICAgICAgICAgICAgICBtb2RhbFBhZ2VOYW1lOiAnUmVhIGxpc2FtaW5lIC8gcGFyYW5kYW1pbmUnIH0sXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHsgcmVmOiAnZ3JpZC1yb3ctY29udGFpbmVyJyB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5zdGF0ZS5ncmlkV2FybmluZy5sZW5ndGggPyBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NSb3cgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnc3BhbicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG51bGwsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuc3RhdGUuZ3JpZFdhcm5pbmdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICApIDogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY1JvdyB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXRUZXh0LCB7IHRpdGxlOiAnTnVtYmVyOiAnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnYXJ2ZScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiByb3cuYXJ2ZSB8fCAnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJpbmREYXRhOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAnbnVtYmVyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IHNlbGYuaGFuZGxlR3JpZFJvd0lucHV0IH0pXG4gICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jUm93IH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dFRleHQsIHsgdGl0bGU6ICdOaW1ldHVzOiAnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnbmltZXR1cycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiByb3cubmltZXR1cyB8fCAnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJpbmREYXRhOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAnbnVtYmVyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IHNlbGYuaGFuZGxlR3JpZFJvd0lucHV0IH0pXG4gICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jUm93IH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChTZWxlY3QsIHsgdGl0bGU6ICdUXFx4RkNcXHhGQ3A6ICcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdrYXNzYXBhbmsnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiBbeyBpZDogMCwgbmltZXR1czogJ0thc3NhJyB9LCB7IGlkOiAxLCBuaW1ldHVzOiAnUGFuaycgfSwgeyBpZDogMiwgbmltZXR1czogJ1RQJyB9XSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHJvdy5rYXNzYXBhbmsgfHwgJycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2thc3NhcGFuaycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbGxJZDogJ2lkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IHNlbGYuaGFuZGxlR3JpZFJvd0NoYW5nZSB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY1JvdyB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoU2VsZWN0LCB7IHRpdGxlOiAnS29udG86ICcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdrb250bycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IHNlbGYubGlic1sna29udG9kJ10sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiByb3cua29udG8gfHwgJycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2tvbnRvJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sbElkOiAna29vZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiBzZWxmLmhhbmRsZUdyaWRSb3dDaGFuZ2UgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NSb3cgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KENoZWNrQm94LCB7IHRpdGxlOiAnS2FzIHBcXHhGNWhpbGluZT8nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnZGVmYXVsdF8nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogQm9vbGVhbihzZWxmLmRvY0RhdGEuZGVmYXVsdF8pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdjaGVja2JveF9kZWZhdWx0XycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiBzZWxmLmhhbmRsZUlucHV0Q2hhbmdlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkT25seTogZmFsc2VcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnc3BhbicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWxpZGF0ZU1lc3NhZ2VcbiAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICB9XSk7XG5cbiAgICByZXR1cm4gUmVrdjtcbn0oUmVhY3QuUHVyZUNvbXBvbmVudCk7XG5cblJla3YucHJvcFR5cGVzID0ge1xuICAgIGRvY0lkOiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIGluaXREYXRhOiBQcm9wVHlwZXMub2JqZWN0XG59O1xuXG5SZWt2LmRlZmF1bHRQcm9wcyA9IHtcbiAgICBpbml0RGF0YToge31cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gUmVrdjtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2Zyb250ZW5kL2RvY3MvcmVrdi9kb2N1bWVudC9pbmRleC5qc3hcbi8vIG1vZHVsZSBpZCA9IDMzMlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7bW9kdWxlLmV4cG9ydHM9e2RvY1Jvdzp7ZGlzcGxheTonZmxleCcsZmxleERpcmVjdGlvbjoncm93Jy8qXHJcbiAgICAgICAgICAgICAgICBib3JkZXI6ICcxcHggc29saWQgYmx1ZSdcclxuICAgICAgICAqL30sZG9jQ29sdW1uOntkaXNwbGF5OidmbGV4JyxmbGV4RGlyZWN0aW9uOidjb2x1bW4nLC8qXHJcbiAgICAgICAgICAgICAgICBib3JkZXI6ICcxcHggc29saWQgeWVsbG93JyxcclxuICAgICAgICAqL3dpZHRoOic1MCUnfSxkb2M6e2Rpc3BsYXk6J2ZsZXgnLGZsZXhEaXJlY3Rpb246J2NvbHVtbicvKlxyXG4gICAgICAgICAgICAgICAgYm9yZGVyOiAnMXB4IHNvbGlkIGJyb3duJ1xyXG4gICAgICAgICovfSxncmlkOnttYWluVGFibGU6e3dpZHRoOicxMDAlJ30saGVhZGVyVGFibGU6e3dpZHRoOicxMDAlJ30sZ3JpZENvbnRhaW5lcjp7d2lkdGg6JzEwMCUnfX0sZ3JpZFJvdzp7LypcclxuICAgICAgICAgICAgICAgIGJvcmRlcjogJzFweCBzb2xpZCBibGFjaycsXHJcbiAgICAgICAgKi9iYWNrZ3JvdW5kQ29sb3I6J3doaXRlJyxwb3NpdGlvbjoncmVsYXRpdmUnLG1hcmdpbjonMTAlIDMwJSAxMCUgMzAlJyx3aWR0aDonYXV0bycsb3BhY2l0eTonMScsdG9wOicxMDBweCd9LGJ0bkVkaXQ6e3dpZHRoOidtaW4tY29udGVudCd9fTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2Zyb250ZW5kL2RvY3MvcmVrdi9kb2N1bWVudC9zdHlsZXMuanNcbi8vIG1vZHVsZSBpZCA9IDMzM1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbnZhciBQcm9wVHlwZXMgPSByZXF1aXJlKCdwcm9wLXR5cGVzJyk7XG5cbnZhciBEb2N1bWVudFRlbXBsYXRlID0gcmVxdWlyZSgnLi8uLi8uLi9kb2N1bWVudFRlbXBsYXRlL2luZGV4LmpzeCcpLFxuICAgIElucHV0VGV4dCA9IHJlcXVpcmUoJy4uLy4uLy4uL2NvbXBvbmVudHMvaW5wdXQtdGV4dC9pbnB1dC10ZXh0LmpzeCcpLFxuICAgIFRleHRBcmVhID0gcmVxdWlyZSgnLi4vLi4vLi4vY29tcG9uZW50cy90ZXh0LWFyZWEvdGV4dC1hcmVhLmpzeCcpLFxuICAgIFNlbGVjdCA9IHJlcXVpcmUoJy4uLy4uLy4uL2NvbXBvbmVudHMvc2VsZWN0L3NlbGVjdC5qc3gnKSxcbiAgICBzdHlsZXMgPSByZXF1aXJlKCcuL3N0eWxlcycpO1xudmFyIExJQlJBUklFUyA9IFt7IGlkOiAna29udG9kJywgZmlsdGVyOiAnJyB9XTtcblxudmFyIFByb2plY3QgPSBmdW5jdGlvbiAoX1JlYWN0JFB1cmVDb21wb25lbnQpIHtcbiAgICBfaW5oZXJpdHMoUHJvamVjdCwgX1JlYWN0JFB1cmVDb21wb25lbnQpO1xuXG4gICAgZnVuY3Rpb24gUHJvamVjdChwcm9wcykge1xuICAgICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUHJvamVjdCk7XG5cbiAgICAgICAgdmFyIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKFByb2plY3QuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihQcm9qZWN0KSkuY2FsbCh0aGlzLCBwcm9wcykpO1xuXG4gICAgICAgIF90aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgZG9jSWQ6IHByb3BzLmRvY0lkID8gcHJvcHMuZG9jSWQgOiBOdW1iZXIocHJvcHMubWF0Y2gucGFyYW1zLmRvY0lkKSxcbiAgICAgICAgICAgIGxvYWRlZERhdGE6IGZhbHNlLFxuICAgICAgICAgICAgZG9jVHlwZUlkOiBfdGhpcy5wcm9wcy5oaXN0b3J5LmxvY2F0aW9uLnN0YXRlID8gX3RoaXMucHJvcHMuaGlzdG9yeS5sb2NhdGlvbi5zdGF0ZS5kb2NQcm9wSWQgOiAnJ1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5yZW5kZXJlciA9IF90aGlzLnJlbmRlcmVyLmJpbmQoX3RoaXMpO1xuXG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG5cbiAgICBfY3JlYXRlQ2xhc3MoUHJvamVjdCwgW3tcbiAgICAgICAga2V5OiAncmVuZGVyJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KERvY3VtZW50VGVtcGxhdGUsIHsgZG9jSWQ6IHRoaXMuc3RhdGUuZG9jSWQsXG4gICAgICAgICAgICAgICAgcmVmOiAnZG9jdW1lbnQnLFxuICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHRoaXMucHJvcHMuaGlzdG9yeSxcbiAgICAgICAgICAgICAgICBsaWJzOiBMSUJSQVJJRVMsXG4gICAgICAgICAgICAgICAgZG9jVHlwZUlkOiAnRE9LUFJPUFMnLFxuICAgICAgICAgICAgICAgIGluaXREYXRhOiB0aGlzLnByb3BzLmluaXREYXRhLFxuICAgICAgICAgICAgICAgIHJlbmRlcmVyOiB0aGlzLnJlbmRlcmVyIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXHJcbiAgICAgICAgICog0JzQtdGC0L7QtCDQstC10YDQvdC10YIg0LrQsNGB0YLQvtC80L3Ri9C5INC60L7QvNC/0L7QvdC10L3RglxyXG4gICAgICAgICAqIEBwYXJhbSBzZWxmXHJcbiAgICAgICAgICogQHJldHVybnMgeyp9XHJcbiAgICAgICAgICovXG5cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ3JlbmRlcmVyJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcmVyKHNlbGYpIHtcbiAgICAgICAgICAgIGlmICghc2VsZi5kb2NEYXRhKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIXNlbGYuZG9jRGF0YS5kb2sgJiYgdGhpcy5wcm9wcy5oaXN0b3J5KSB7XG4gICAgICAgICAgICAgICAgc2VsZi5kb2NEYXRhLmRvayA9IHRoaXMucHJvcHMuaGlzdG9yeS5sb2NhdGlvbi5zdGF0ZS5kb2tQcm9wSWQ7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2MgfSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY1JvdyB9LFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jQ29sdW1uIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0VGV4dCwgeyB0aXRsZTogJ0Rva3VtZW50ICcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2RvaycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQtZG9rJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkT25seTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogc2VsZi5kb2NEYXRhLmRva1xuICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFNlbGVjdCwgeyB0aXRsZTogJ0tvcnIuIGtvbnRvOiAnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdrb250bycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGliczogJ2tvbnRvZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogc2VsZi5saWJzWydrb250b2QnXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogc2VsZi5kb2NEYXRhWydrb250byddIHx8ICcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiAhc2VsZi5zdGF0ZS5lZGl0ZWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAnc2VsZWN0X2tvbnRvJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xsSWQ6ICdrb29kJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoU2VsZWN0LCB7IHRpdGxlOiAnS0JNLmtvbnRvOiAnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdrYm1rb250bycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGliczogJ2tvbnRvZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogc2VsZi5saWJzWydrb250b2QnXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogc2VsZi5kb2NEYXRhLmtibWtvbnRvLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiAhc2VsZi5zdGF0ZS5lZGl0ZWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAna2Jta29udG8nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbGxJZDogJ2tvb2QnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiBzZWxmLmhhbmRsZUlucHV0Q2hhbmdlIH0pXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jUm93IH0sXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoVGV4dEFyZWEsIHsgdGl0bGU6ICdTZWxnaXR1cycsXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnc2VsZycsXG4gICAgICAgICAgICAgICAgICAgICAgICByZWY6ICd0ZXh0YXJlYS1zZWxnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiBzZWxmLmhhbmRsZUlucHV0Q2hhbmdlLFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHNlbGYuZG9jRGF0YS5zZWxnIHx8ICcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6ICFzZWxmLnN0YXRlLmVkaXRlZCB9KVxuICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NSb3cgfSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChUZXh0QXJlYSwgeyB0aXRsZTogJ011dWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ211dWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAndGV4dGFyZWEtbXV1ZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBzZWxmLmRvY0RhdGEubXV1ZCB8fCAnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiAhc2VsZi5zdGF0ZS5lZGl0ZWQgfSlcbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgfV0pO1xuXG4gICAgcmV0dXJuIFByb2plY3Q7XG59KFJlYWN0LlB1cmVDb21wb25lbnQpO1xuXG5Qcm9qZWN0LnByb3BUeXBlcyA9IHtcbiAgICBkb2NJZDogUHJvcFR5cGVzLm51bWJlcixcbiAgICBpbml0RGF0YTogUHJvcFR5cGVzLm9iamVjdCxcbiAgICB1c2VyRGF0YTogUHJvcFR5cGVzLm9iamVjdFxufTtcblxuUHJvamVjdC5kZWZhdWx0UHJvcHMgPSB7XG4gICAgaW5pdERhdGE6IHt9LFxuICAgIHVzZXJEYXRhOiB7fVxufTtcbm1vZHVsZS5leHBvcnRzID0gUHJvamVjdDtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2Zyb250ZW5kL2RvY3MvZG9rcHJvcHMvZG9jdW1lbnQvaW5kZXguanN4XG4vLyBtb2R1bGUgaWQgPSAzMzRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO21vZHVsZS5leHBvcnRzPXtkb2NSb3c6e2Rpc3BsYXk6J2ZsZXgnLGZsZXhEaXJlY3Rpb246J3JvdycvKlxyXG4gICAgICAgICAgICAgICAgYm9yZGVyOiAnMXB4IHNvbGlkIGJsdWUnXHJcbiAgICAgICAgKi99LGRvY0NvbHVtbjp7ZGlzcGxheTonZmxleCcsZmxleERpcmVjdGlvbjonY29sdW1uJywvKlxyXG4gICAgICAgICAgICAgICAgYm9yZGVyOiAnMXB4IHNvbGlkIHllbGxvdycsXHJcbiAgICAgICAgKi93aWR0aDonNTAlJ30sZG9jOntkaXNwbGF5OidmbGV4JyxmbGV4RGlyZWN0aW9uOidjb2x1bW4nLypcclxuICAgICAgICAgICAgICAgIGJvcmRlcjogJzFweCBzb2xpZCBicm93bidcclxuICAgICAgICAqL319O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vZnJvbnRlbmQvZG9jcy9kb2twcm9wcy9kb2N1bWVudC9zdHlsZXMuanNcbi8vIG1vZHVsZSBpZCA9IDMzNVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbnZhciBQcm9wVHlwZXMgPSByZXF1aXJlKCdwcm9wLXR5cGVzJyk7XG5cbnZhciBEb2N1bWVudFRlbXBsYXRlID0gcmVxdWlyZSgnLi8uLi8uLi9kb2N1bWVudFRlbXBsYXRlL2luZGV4LmpzeCcpLFxuICAgIElucHV0VGV4dCA9IHJlcXVpcmUoJy4uLy4uLy4uL2NvbXBvbmVudHMvaW5wdXQtdGV4dC9pbnB1dC10ZXh0LmpzeCcpLFxuICAgIFRleHRBcmVhID0gcmVxdWlyZSgnLi4vLi4vLi4vY29tcG9uZW50cy90ZXh0LWFyZWEvdGV4dC1hcmVhLmpzeCcpLFxuICAgIENoZWNrQm94ID0gcmVxdWlyZSgnLi4vLi4vLi4vY29tcG9uZW50cy9pbnB1dC1jaGVja2JveC9pbnB1dC1jaGVja2JveC5qc3gnKSxcbiAgICBzdHlsZXMgPSByZXF1aXJlKCcuL3N0eWxlcycpO1xuXG4vKipcclxuICog0JrQu9Cw0YHRgSDRgNC10LDQu9C40LfRg9C10YIg0LTQvtC60YPQvNC10L3RgiDRgdC/0YDQsNCy0L7Rh9C90LjQutCwINC/0YDQuNC30L3QsNC60L7Qsi5cclxuICovXG5cbnZhciBVc2VyID0gZnVuY3Rpb24gKF9SZWFjdCRQdXJlQ29tcG9uZW50KSB7XG4gICAgX2luaGVyaXRzKFVzZXIsIF9SZWFjdCRQdXJlQ29tcG9uZW50KTtcblxuICAgIGZ1bmN0aW9uIFVzZXIocHJvcHMpIHtcbiAgICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFVzZXIpO1xuXG4gICAgICAgIHZhciBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChVc2VyLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoVXNlcikpLmNhbGwodGhpcywgcHJvcHMpKTtcblxuICAgICAgICBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIGRvY0lkOiBwcm9wcy5kb2NJZCA/IHByb3BzLmRvY0lkIDogTnVtYmVyKHByb3BzLm1hdGNoLnBhcmFtcy5kb2NJZCksXG4gICAgICAgICAgICBsb2FkZWREYXRhOiBmYWxzZVxuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5yZW5kZXJlciA9IF90aGlzLnJlbmRlcmVyLmJpbmQoX3RoaXMpO1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuXG4gICAgX2NyZWF0ZUNsYXNzKFVzZXIsIFt7XG4gICAgICAgIGtleTogJ3JlbmRlcicsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChEb2N1bWVudFRlbXBsYXRlLCB7IGRvY0lkOiB0aGlzLnN0YXRlLmRvY0lkLFxuICAgICAgICAgICAgICAgIHJlZjogJ2RvY3VtZW50JyxcbiAgICAgICAgICAgICAgICBkb2NUeXBlSWQ6ICdVU0VSSUQnLFxuICAgICAgICAgICAgICAgIG1vZHVsZTogdGhpcy5wcm9wcy5tb2R1bGUsXG4gICAgICAgICAgICAgICAgaW5pdERhdGE6IHRoaXMucHJvcHMuaW5pdERhdGEsXG4gICAgICAgICAgICAgICAgcmVuZGVyZXI6IHRoaXMucmVuZGVyZXJcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXHJcbiAgICAgICAgICog0JzQtdGC0L7QtCDQstC10YDQvdC10YIg0LrQsNGB0YLQvtC80L3Ri9C5INC60L7QvNC/0L7QvdC10L3RglxyXG4gICAgICAgICAqIEBwYXJhbSBzZWxmXHJcbiAgICAgICAgICogQHJldHVybnMgeyp9XHJcbiAgICAgICAgICovXG5cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ3JlbmRlcmVyJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcmVyKHNlbGYpIHtcbiAgICAgICAgICAgIGlmICghc2VsZi5kb2NEYXRhKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jIH0sXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IHN0eWxlcy5kb2NSb3cgfSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogc3R5bGVzLmRvY0NvbHVtbiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dFRleHQsIHsgdGl0bGU6ICdLYXN1dGFqYSB0dW5udXM6ICAnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdrYXN1dGFqYScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQta2FzdXRhamEnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBzZWxmLmRvY0RhdGEua2FzdXRhamEgfHwgJycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IHNlbGYuaGFuZGxlSW5wdXRDaGFuZ2UgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0VGV4dCwgeyB0aXRsZTogJ05pbWk6ICcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2FtZXRuaWsnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LWFtZXRuaWsnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiAhc2VsZi5zdGF0ZS5lZGl0ZWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHNlbGYuZG9jRGF0YS5hbWV0bmlrIHx8ICcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiBzZWxmLmhhbmRsZUlucHV0Q2hhbmdlIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dFRleHQsIHsgdGl0bGU6ICdFbWFpbDogJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnZW1haWwnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LWVtYWlsJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkT25seTogIXNlbGYuc3RhdGUuZWRpdGVkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBzZWxmLmRvY0RhdGEuZW1haWwgfHwgJycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IHNlbGYuaGFuZGxlSW5wdXRDaGFuZ2UgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0VGV4dCwgeyB0aXRsZTogJ1NtdHA6ICcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3NtdHAnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LXNtdHAnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiAhc2VsZi5zdGF0ZS5lZGl0ZWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHNlbGYuZG9jRGF0YS5zbXRwIHx8ICcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiBzZWxmLmhhbmRsZUlucHV0Q2hhbmdlIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dFRleHQsIHsgdGl0bGU6ICdQb3J0OiAnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdwb3J0JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC1wb3J0JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkT25seTogIXNlbGYuc3RhdGUuZWRpdGVkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBzZWxmLmRvY0RhdGEucG9ydCB8fCAnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXRUZXh0LCB7IHRpdGxlOiAnRW1haWwga2FzdXRhamE6ICcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3VzZXInLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LXVzZXInLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiAhc2VsZi5zdGF0ZS5lZGl0ZWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHNlbGYuZG9jRGF0YS51c2VyIHx8ICcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiBzZWxmLmhhbmRsZUlucHV0Q2hhbmdlIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dFRleHQsIHsgdGl0bGU6ICdFbWFpbCBwYXJvb2w6ICcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3Bhc3MnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LXBhc3MnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiAhc2VsZi5zdGF0ZS5lZGl0ZWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHNlbGYuZG9jRGF0YS5wYXNzIHx8ICcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiBzZWxmLmhhbmRsZUlucHV0Q2hhbmdlIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChDaGVja0JveCwgeyB0aXRsZTogJ0thcyByYWFtYXR1cGlkYWphPycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2lzX2thc3V0YWphJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogQm9vbGVhbihzZWxmLmRvY0RhdGEuaXNfa2FzdXRhamEpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2NoZWNrYm94X2lzX2thc3V0YWphJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkT25seTogdHJ1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KENoZWNrQm94LCB7IHRpdGxlOiAnS2FzIHBlYWthc3V0YWphPycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2lzX3BlYWthc3V0YWphJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogQm9vbGVhbihzZWxmLmRvY0RhdGEuaXNfcGVha2FzdXRhamEpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2NoZWNrYm94X2lzX3BlYWthc3V0YWphJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkT25seTogdHJ1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KENoZWNrQm94LCB7IHRpdGxlOiAnS2FzIGFkbWluaXN0cmFhdG9yPycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2lzX2FkbWluJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogQm9vbGVhbihzZWxmLmRvY0RhdGEuaXNfYWRtaW4pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2NoZWNrYm94X2lzX2FkbWluJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkT25seTogdHJ1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KENoZWNrQm94LCB7IHRpdGxlOiAnS2FzIHZhYXRsZWphPycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2lzX3ZhYXRsZWphJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogQm9vbGVhbihzZWxmLmRvY0RhdGEuaXNfdmFhdGxlamEpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2NoZWNrYm94X2lzX3ZhYXRsZWphJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkT25seTogdHJ1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KENoZWNrQm94LCB7IHRpdGxlOiAnS2FzIGxhc3RlIGFydmVzdGFqYT8nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdpc19hcnZlc3RhamEnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBCb29sZWFuKHNlbGYuZG9jRGF0YS5pc19hcnZlc3RhamEpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2NoZWNrYm94X2lzX2FydmVzdGFqYScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IHNlbGYuaGFuZGxlSW5wdXRDaGFuZ2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6IHRydWVcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChDaGVja0JveCwgeyB0aXRsZTogJ0thcyBlZWxhcnZlIHRhb3RsdXNlIGtvb3N0YWphPycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2lzX2VlbF9rb29zdGFqYScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IEJvb2xlYW4oc2VsZi5kb2NEYXRhLmlzX2VlbF9rb29zdGFqYSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAnY2hlY2tib3hfaXNfZWVsX2tvb3N0YWphJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkT25seTogdHJ1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KENoZWNrQm94LCB7IHRpdGxlOiAnS2FzIGVlbGFydmUgdGFvdGx1c2UgYWxsa3JpYXN0YWphPycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2lzX2VlbF9hbGxraXJqYXN0YWphJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogQm9vbGVhbihzZWxmLmRvY0RhdGEuaXNfZWVsX2FsbGtpcmphc3RhamEpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2NoZWNrYm94X2lzX2VlbF9hbGxraXJqYXN0YWphJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkT25seTogdHJ1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KENoZWNrQm94LCB7IHRpdGxlOiAnS2FzIGVlbGFydmUgdGFvdGx1c2UgZXNpdGFqYT8nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdpc19lZWxfZXNpdGFqYScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IEJvb2xlYW4oc2VsZi5kb2NEYXRhLmlzX2VlbF9lc2l0YWphKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdjaGVja2JveF9pc19lZWxfZXNpdGFqYScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IHNlbGYuaGFuZGxlSW5wdXRDaGFuZ2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6IHRydWVcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChDaGVja0JveCwgeyB0aXRsZTogJ0thcyBhc3V0dXN0ZSBrb3JyYWxkYWphPycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2lzX2FzdXR1c3RlX2tvcnJhbGRhamEnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBCb29sZWFuKHNlbGYuZG9jRGF0YS5pc19hc3V0dXN0ZV9rb3JyYWxkYWphKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdjaGVja2JveF9pc19hc3V0dXN0ZV9rb3JyYWxkYWphJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogc2VsZi5oYW5kbGVJbnB1dENoYW5nZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkT25seTogdHJ1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KENoZWNrQm94LCB7IHRpdGxlOiAnS2FzIHJla2wubWFrc3UgYWRtaW5pc3RyYWF0b3I/JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnaXNfcmVrbF9hZG1pbmlzdHJhdG9yJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogQm9vbGVhbihzZWxmLmRvY0RhdGEuaXNfcmVrbF9hZG1pbmlzdHJhdG9yKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdjaGVja2JveF9pc19yZWtsX2FkbWluaXN0cmF0b3InLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiBzZWxmLmhhbmRsZUlucHV0Q2hhbmdlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiB0cnVlXG4gICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ2hlY2tCb3gsIHsgdGl0bGU6ICdLYXMgcmVrbC5tYWtzdSBoYWxkdXI/JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnaXNfcmVrbF9tYWtzdWhhbGR1cicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IEJvb2xlYW4oc2VsZi5kb2NEYXRhLmlzX3Jla2xfbWFrc3VoYWxkdXIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2NoZWNrYm94X2lzX3Jla2xfbWFrc3VoYWxkdXInLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiBzZWxmLmhhbmRsZUlucHV0Q2hhbmdlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiB0cnVlXG4gICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ2hlY2tCb3gsIHsgdGl0bGU6ICdLYXMgbGFkdSBrYXN1dGFqYT8nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdpc19sYWR1X2thc3V0YWphJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogQm9vbGVhbihzZWxmLmRvY0RhdGEuaXNfbGFkdV9rYXN1dGFqYSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAnY2hlY2tib3hfaXNfbGFkdV9rYXN1dGFqYScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IHNlbGYuaGFuZGxlSW5wdXRDaGFuZ2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk6IHRydWVcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBzdHlsZXMuZG9jUm93IH0sXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoVGV4dEFyZWEsIHsgdGl0bGU6ICdNdXVkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdtdXVkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ3RleHRhcmVhLW11dWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IHNlbGYuaGFuZGxlSW5wdXRDaGFuZ2UsXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogc2VsZi5kb2NEYXRhLm11dWQgfHwgJycsXG4gICAgICAgICAgICAgICAgICAgICAgICByZWFkT25seTogIXNlbGYuc3RhdGUuZWRpdGVkIH0pXG4gICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgIH1dKTtcblxuICAgIHJldHVybiBVc2VyO1xufShSZWFjdC5QdXJlQ29tcG9uZW50KTtcblxuVXNlci5wcm9wVHlwZXMgPSB7XG4gICAgZG9jSWQ6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgaW5pdERhdGE6IFByb3BUeXBlcy5vYmplY3Rcbn07XG5cblVzZXIuZGVmYXVsdFByb3BzID0ge1xuICAgIGluaXREYXRhOiB7fVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBVc2VyO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vZnJvbnRlbmQvZG9jcy91c2VyaWQvZG9jdW1lbnQvaW5kZXguanN4XG4vLyBtb2R1bGUgaWQgPSAzMzZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO21vZHVsZS5leHBvcnRzPXtkb2NSb3c6e2Rpc3BsYXk6J2ZsZXgnLGZsZXhEaXJlY3Rpb246J3JvdycvKlxyXG4gICAgICAgICAgICAgICAgYm9yZGVyOiAnMXB4IHNvbGlkIGJsdWUnXHJcbiAgICAgICAgKi99LGRvY0NvbHVtbjp7ZGlzcGxheTonZmxleCcsZmxleERpcmVjdGlvbjonY29sdW1uJywvKlxyXG4gICAgICAgICAgICAgICAgYm9yZGVyOiAnMXB4IHNvbGlkIHllbGxvdycsXHJcbiAgICAgICAgKi93aWR0aDonNTAlJ30sZG9jOntkaXNwbGF5OidmbGV4JyxmbGV4RGlyZWN0aW9uOidjb2x1bW4nLypcclxuICAgICAgICAgICAgICAgIGJvcmRlcjogJzFweCBzb2xpZCBicm93bidcclxuICAgICAgICAqL319O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vZnJvbnRlbmQvZG9jcy91c2VyaWQvZG9jdW1lbnQvc3R5bGVzLmpzXG4vLyBtb2R1bGUgaWQgPSAzMzdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG52YXIgUHJvcFR5cGVzID0gcmVxdWlyZSgncHJvcC10eXBlcycpO1xudmFyIF9mZXRjaERhdGEgPSByZXF1aXJlKCcuLy4uLy4uLy4uLy4uL2xpYnMvZmV0Y2hEYXRhJyk7XG52YXIgRG9jQ29udGV4dCA9IHJlcXVpcmUoJy4uLy4uLy4uL2RvYy1jb250ZXh0LmpzJyk7XG5cbnZhciBJbnB1dFRleHQgPSByZXF1aXJlKCcuLi8uLi8uLi9jb21wb25lbnRzL2lucHV0LXRleHQvaW5wdXQtdGV4dC5qc3gnKSxcbiAgICBGb3JtID0gcmVxdWlyZSgnLi4vLi4vLi4vY29tcG9uZW50cy9mb3JtL2Zvcm0uanN4JyksXG4gICAgQnRuRW1haWwgPSByZXF1aXJlKCcuLy4uLy4uLy4uL2NvbXBvbmVudHMvYnV0dG9uLXJlZ2lzdGVyL2J1dHRvbi1lbWFpbC9pbmRleC5qc3gnKSxcbiAgICBCdG5HZXRQZGYgPSByZXF1aXJlKCcuLy4uLy4uLy4uL2NvbXBvbmVudHMvYnV0dG9uLXJlZ2lzdGVyL2J1dHRvbi1wZGYvaW5kZXguanN4JyksXG4gICAgVG9vbGJhckNvbnRhaW5lciA9IHJlcXVpcmUoJy4uLy4uLy4uL2NvbXBvbmVudHMvdG9vbGJhci1jb250YWluZXIvdG9vbGJhci1jb250YWluZXIuanN4JyksXG4gICAgVGV4dEFyZWEgPSByZXF1aXJlKCcuLi8uLi8uLi9jb21wb25lbnRzL3RleHQtYXJlYS90ZXh0LWFyZWEuanN4JyksXG4gICAgQnRuSW5mbyA9IHJlcXVpcmUoJy4vLi4vLi4vLi4vY29tcG9uZW50cy9idXR0b24tcmVnaXN0ZXIvYnV0dG9uLWluZm8vaW5kZXguanN4JyksXG4gICAgc3R5bGVzID0gcmVxdWlyZSgnLi9zdHlsZXMnKTtcblxuLyoqXHJcbiAqINCa0LvQsNGB0YEg0YDQtdCw0LvQuNC30YPQtdGCINC00L7QutGD0LzQtdC90YIg0YHQv9GA0LDQstC+0YfQvdC40LrQsCDQv9GA0LjQt9C90LDQutC+0LIuXHJcbiAqL1xuXG52YXIgRW1haWwgPSBmdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICAgIF9pbmhlcml0cyhFbWFpbCwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgICBmdW5jdGlvbiBFbWFpbChwcm9wcykge1xuICAgICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgRW1haWwpO1xuXG4gICAgICAgIHZhciBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChFbWFpbC5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKEVtYWlsKSkuY2FsbCh0aGlzLCBwcm9wcykpO1xuXG4gICAgICAgIF90aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgZW1haWw6IG51bGwsXG4gICAgICAgICAgICBzdWJqZWN0OiBudWxsLFxuICAgICAgICAgICAgY29udGV4dDogbnVsbCxcbiAgICAgICAgICAgIGF0dGFjaG1lbnQ6IG51bGwsXG4gICAgICAgICAgICB3YXJuaW5nVHlwZTogbnVsbCxcbiAgICAgICAgICAgIHdhcm5pbmc6IG51bGxcbiAgICAgICAgfTtcblxuICAgICAgICBfdGhpcy5idG5FbWFpbENsaWNrSGFuZGxlciA9IF90aGlzLmJ0bkVtYWlsQ2xpY2tIYW5kbGVyLmJpbmQoX3RoaXMpO1xuICAgICAgICBfdGhpcy5oYW5kbGVJbnB1dENoYW5nZSA9IF90aGlzLmhhbmRsZUlucHV0Q2hhbmdlLmJpbmQoX3RoaXMpO1xuICAgICAgICBfdGhpcy5oYW5kbGVCdG5HZXRQZGYgPSBfdGhpcy5oYW5kbGVCdG5HZXRQZGYuYmluZChfdGhpcyk7XG5cbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cblxuICAgIF9jcmVhdGVDbGFzcyhFbWFpbCwgW3tcbiAgICAgICAga2V5OiAncmVuZGVyJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgICAgICAgIHZhciBoYXNFbWFpbCA9ICEhdGhpcy5zdGF0ZS5lbWFpbDtcbiAgICAgICAgICAgIHZhciB3YXJuaW5nU3R5bGUgPSBzdHlsZXNbdGhpcy5zdGF0ZS53YXJuaW5nVHlwZV0gPyBzdHlsZXNbdGhpcy5zdGF0ZS53YXJuaW5nVHlwZV0gOiBudWxsO1xuXG4gICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICBGb3JtLFxuICAgICAgICAgICAgICAgIG51bGwsXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICAgVG9vbGJhckNvbnRhaW5lcixcbiAgICAgICAgICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChCdG5FbWFpbCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAnYnRuRW1haWwnLFxuICAgICAgICAgICAgICAgICAgICAgICAgZG9jVHlwZUlkOiBEb2NDb250ZXh0LmRvY1R5cGVJZCxcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s6IHRoaXMuYnRuRW1haWxDbGlja0hhbmRsZXIsXG4gICAgICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZDogIWhhc0VtYWlsXG4gICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEJ0bkluZm8sIHsgcmVmOiAnYnRuSW5mbycsXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogJycsXG4gICAgICAgICAgICAgICAgICAgICAgICBkb2NUeXBlSWQ6ICdlbWFpbF9kb2N1bWVudCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBzaG93OiB0cnVlIH0pXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICBUb29sYmFyQ29udGFpbmVyLFxuICAgICAgICAgICAgICAgICAgICB7IHJlZjogJ3Rvb2xiYXItY29udGFpbmVyJyB9LFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgICAgICB7IGNsYXNzTmFtZTogJ2RvYy10b29sYmFyLXdhcm5pbmcnLCBzdHlsZTogd2FybmluZ1N0eWxlIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnN0YXRlLndhcm5pbmcgPyBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICdzcGFuJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc3RhdGUud2FybmluZ1xuICAgICAgICAgICAgICAgICAgICAgICAgKSA6IG51bGxcbiAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dFRleHQsIHtcbiAgICAgICAgICAgICAgICAgICAgdGl0bGU6ICdBZHJlc3NhYXQ6ICcsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdlbWFpbCcsXG4gICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LWVtYWlsJyxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHRoaXMuc3RhdGUuZW1haWwgfHwgJycsXG4gICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiB0aGlzLmhhbmRsZUlucHV0Q2hhbmdlXG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dFRleHQsIHtcbiAgICAgICAgICAgICAgICAgICAgdGl0bGU6ICdQZWFsa2lyaTogJyxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3N1YmplY3QnLFxuICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC1zdWJqZWN0JyxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHRoaXMuc3RhdGUuc3ViamVjdCB8fCAnJyxcbiAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IHRoaXMuaGFuZGxlSW5wdXRDaGFuZ2VcbiAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFRleHRBcmVhLCB7IHRpdGxlOiAnU2lzdScsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdjb250ZXh0JyxcbiAgICAgICAgICAgICAgICAgICAgcmVmOiAndGV4dGFyZWEtY29udGV4dCcsXG4gICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiB0aGlzLmhhbmRsZUlucHV0Q2hhbmdlLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogdGhpcy5zdGF0ZS5jb250ZXh0IHx8ICcnXG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChCdG5HZXRQZGYsIHtcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6ICdkb2MucGRmJyxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2J0bkdldFBkZicsXG4gICAgICAgICAgICAgICAgICAgIHJlZjogJ2J0bkdldFBkZicsXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s6IHRoaXMuaGFuZGxlQnRuR2V0UGRmXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ2hhbmRsZUJ0bkdldFBkZicsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBoYW5kbGVCdG5HZXRQZGYoKSB7XG4gICAgICAgICAgICAvLyBnZXQgdXJsXG4gICAgICAgICAgICB2YXIgdXJsID0gdm9pZCAwO1xuICAgICAgICAgICAgaWYgKERvY0NvbnRleHRbJ2VtYWlsLXBhcmFtcyddLnF1ZXJ5VHlwZSA9PSAnaWQnKSB7XG4gICAgICAgICAgICAgICAgdXJsID0gJy9wZGYvJyArIERvY0NvbnRleHQuZG9jVHlwZUlkICsgJy8nICsgRG9jQ29udGV4dC51c2VyRGF0YS51dWlkICsgJy8nICsgRG9jQ29udGV4dFsnZW1haWwtcGFyYW1zJ10uZG9jSWQ7XG4gICAgICAgICAgICAgICAgd2luZG93Lm9wZW4oJycgKyB1cmwpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB2YXIgcGFyYW1zID0gZW5jb2RlVVJJQ29tcG9uZW50KCcnICsgRG9jQ29udGV4dFsnZW1haWwtcGFyYW1zJ10uc3FsV2hlcmUpO1xuICAgICAgICAgICAgICAgIHZhciBmaWx0ZXIgPSBlbmNvZGVVUklDb21wb25lbnQoJycgKyBKU09OLnN0cmluZ2lmeShEb2NDb250ZXh0WydlbWFpbC1wYXJhbXMnXS5maWx0ZXJEYXRhKSk7XG5cbiAgICAgICAgICAgICAgICBpZiAoRG9jQ29udGV4dFsnZW1haWwtcGFyYW1zJ10uZmlsdGVyRGF0YS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgdXJsID0gJy9wZGYvJyArIERvY0NvbnRleHQuZG9jVHlwZUlkICsgJy8nICsgRG9jQ29udGV4dC51c2VyRGF0YS51dWlkICsgJy8nICsgZmlsdGVyO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHVybCA9ICcvcGRmLycgKyBEb2NDb250ZXh0LmRvY1R5cGVJZCArICcvJyArIERvY0NvbnRleHQudXNlckRhdGEudXVpZCArICcvMCc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHdpbmRvdy5vcGVuKHVybCArICcvJyArIHBhcmFtcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ2hhbmRsZUlucHV0Q2hhbmdlJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGhhbmRsZUlucHV0Q2hhbmdlKGlucHV0TmFtZSwgaW5wdXRWYWx1ZSkge1xuICAgICAgICAgICAgdmFyIGRhdGEgPSB0aGlzLnN0YXRlO1xuICAgICAgICAgICAgZGF0YVtpbnB1dE5hbWVdID0gaW5wdXRWYWx1ZTtcbiAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoZGF0YSk7XG4gICAgICAgIH1cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ2J0bkVtYWlsQ2xpY2tIYW5kbGVyJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGJ0bkVtYWlsQ2xpY2tIYW5kbGVyKCkge1xuICAgICAgICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgICAgICAgIHZhciBwYXJhbXMgPSB7XG4gICAgICAgICAgICAgICAgZG9jVHlwZUlkOiBEb2NDb250ZXh0WydlbWFpbC1wYXJhbXMnXS5kb2NUeXBlSWQsXG4gICAgICAgICAgICAgICAgaWQ6IERvY0NvbnRleHRbJ2VtYWlsLXBhcmFtcyddLnF1ZXJ5VHlwZSA9PSAnaWQnID8gRG9jQ29udGV4dFsnZW1haWwtcGFyYW1zJ10uZG9jSWQgOiBudWxsLFxuICAgICAgICAgICAgICAgIHNxbFdoZXJlOiBEb2NDb250ZXh0WydlbWFpbC1wYXJhbXMnXS5xdWVyeVR5cGUgPT0gJ2lkJyA/IG51bGwgOiBEb2NDb250ZXh0WydlbWFpbC1wYXJhbXMnXS5zcWxXaGVyZSxcbiAgICAgICAgICAgICAgICBmaWx0ZXJEYXRhOiBEb2NDb250ZXh0WydlbWFpbC1wYXJhbXMnXS5xdWVyeVR5cGUgPT0gJ2lkJyA/IG51bGwgOiBEb2NDb250ZXh0WydlbWFpbC1wYXJhbXMnXS5maWx0ZXJEYXRhLFxuICAgICAgICAgICAgICAgIG1vZHVsZTogRG9jQ29udGV4dC5tb2R1bGUsXG4gICAgICAgICAgICAgICAgdXNlcklkOiBEb2NDb250ZXh0LnVzZXJEYXRhLnVzZXJJZCxcbiAgICAgICAgICAgICAgICB1dWlkOiBEb2NDb250ZXh0LnVzZXJEYXRhLnV1aWQsXG4gICAgICAgICAgICAgICAgY29udGV4dDogdGhpcy5zdGF0ZS5jb250ZXh0LFxuICAgICAgICAgICAgICAgIGVtYWlsOiB0aGlzLnN0YXRlLmVtYWlsLFxuICAgICAgICAgICAgICAgIHN1YmplY3Q6IHRoaXMuc3RhdGUuc3ViamVjdFxuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgdGhpcy5mZXRjaERhdGEoJ1Bvc3QnLCAnL2VtYWlsL3NlbmRQcmludEZvcm0nLCBwYXJhbXMpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gMjAwKSB7XG4gICAgICAgICAgICAgICAgICAgIF90aGlzMi5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICB3YXJuaW5nOiAnRW1haWwgc2FhZGV0dWQgZWR1a2FsdCwgc3V1bmF0YW4gLi4uJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHdhcm5pbmdUeXBlOiAnb2snXG4gICAgICAgICAgICAgICAgICAgIH0sIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzMi5wcm9wcy5oaXN0b3J5LmdvQmFjaygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSwgMTAwMDApO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBfdGhpczIuc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgd2FybmluZzogJ1Rla2tpcyB2aWdhJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHdhcm5pbmdUeXBlOiAnZXJyb3InXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikge1xuICAgICAgICAgICAgICAgIF90aGlzMi5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgICAgIHdhcm5pbmc6ICdUZWtraXMgdmlnYSAnICsgZXJyb3IuZXJyb3IsXG4gICAgICAgICAgICAgICAgICAgIHdhcm5pbmdUeXBlOiAnZXJyb3InXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqINCS0YvQv9C+0LvQvdC40YIg0LfQsNC/0YDQvtGB0YtcclxuICAgICAgICAgKi9cblxuICAgIH0sIHtcbiAgICAgICAga2V5OiAnZmV0Y2hEYXRhJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGZldGNoRGF0YShwcm90b2NvbCwgYXBpLCBwYXJhbXMpIHtcbiAgICAgICAgICAgIHZhciBfdGhpczMgPSB0aGlzO1xuXG4gICAgICAgICAgICB2YXIgdXJsID0gYXBpID8gYXBpIDogVVJMICsgJy8nICsgdGhpcy5wcm9wcy5kb2NUeXBlSWQgKyAnLycgKyB0aGlzLnN0YXRlLmRvY0lkO1xuICAgICAgICAgICAgdmFyIG1ldGhvZCA9ICdmZXRjaERhdGFQb3N0JztcblxuICAgICAgICAgICAgaWYgKHByb3RvY29sKSB7XG4gICAgICAgICAgICAgICAgLy9yZXF1ZXN0IGNhbGwgbm90IGRlZmF1bHRcbiAgICAgICAgICAgICAgICBtZXRob2QgPSAnZmV0Y2hEYXRhJyArIHByb3RvY29sO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmVkLCByZWplY3RlZCkge1xuICAgICAgICAgICAgICAgIF9mZXRjaERhdGFbbWV0aG9kXSh1cmwsIHBhcmFtcykudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyAmJiByZXNwb25zZS5zdGF0dXMgPT09IDQwMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQubG9jYXRpb24gPSAnL2xvZ2luJztcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZS5kYXRhKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vZXhlY3V0ZSBzZWxlY3QgY2FsbHNcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZS5kYXRhLmFjdGlvbiAmJiByZXNwb25zZS5kYXRhLmFjdGlvbiA9PT0gJ3NlbGVjdCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdGhpczMuZG9jRGF0YSA9IHJlc3BvbnNlLmRhdGEuZGF0YVswXTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHdpbGwgc3RvcmUgcmVxdWlyZWQgZmllbGRzIGluZm9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5kYXRhWzBdLnJlcXVpcmVkRmllbGRzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzMy5yZXF1aXJlZEZpZWxkcyA9IHJlc3BvbnNlLmRhdGEuZGF0YVswXS5yZXF1aXJlZEZpZWxkcztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyB3aWxsIHN0b3JlIGJwbSBpbmZvXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEuZGF0YVswXS5icG0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMzLmJwbSA9IHJlc3BvbnNlLmRhdGEuZGF0YVswXS5icG07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9zaG91bGQgcmV0dXJuIGRhdGEgYW5kIGNhbGxlZCBmb3IgcmVsb2FkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMzLnNldFN0YXRlKHsgcmVsb2FkRGF0YTogZmFsc2UsIHdhcm5pbmc6ICcnLCB3YXJuaW5nVHlwZTogbnVsbCB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlZChyZXNwb25zZS5kYXRhLmRhdGFbMF0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5hY3Rpb24gJiYgcmVzcG9uc2UuZGF0YS5hY3Rpb24gPT09ICdzYXZlJyAmJiByZXNwb25zZS5kYXRhLnJlc3VsdC5lcnJvcl9jb2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gZXJyb3IgaW4gc2F2ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzMy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdhcm5pbmc6ICdUZWtraXMgdmlnYSAnICsgcmVzcG9uc2UuZGF0YS5yZXN1bHQuZXJyb3JfbWVzc2FnZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2FybmluZ1R5cGU6ICdlcnJvcidcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVqZWN0ZWQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc29sdmVkKHJlc3BvbnNlLmRhdGEpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcignRmV0Y2ggdmlnYSAnLCByZXNwb25zZSwgcGFyYW1zKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzMy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2FybmluZzogJ1Rla2tpcyB2aWdhICcgKyAocmVzcG9uc2UuZGF0YS5lcnJvcl9tZXNzYWdlID8gcmVzcG9uc2UuZGF0YS5lcnJvcl9tZXNzYWdlIDogJycpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdhcm5pbmdUeXBlOiAnZXJyb3InXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZWplY3RlZCgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9LCBmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCdkb2MgdGVtcGxhdGUgRXJyb3I6JywgZXJyb3IpO1xuICAgICAgICAgICAgICAgIC8vIHBvc3NpYmx5IGF1dGggZXJyb3IsIHNvIHJlLWxvZ2luXG4gICAgICAgICAgICAgICAgaWYgKF90aGlzMy5wcm9wcy5oaXN0b3J5KSB7XG4gICAgICAgICAgICAgICAgICAgIF90aGlzMy5wcm9wcy5oaXN0b3J5LnB1c2goJy9sb2dpbicpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gcmVqZWN0ZWQoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfV0pO1xuXG4gICAgcmV0dXJuIEVtYWlsO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG4vKlxyXG5FbWFpbC5wcm9wVHlwZXMgPSB7XHJcbiAgICBkb2NJZDogUHJvcFR5cGVzLm51bWJlcixcclxuICAgIGluaXREYXRhOiBQcm9wVHlwZXMub2JqZWN0XHJcbn07XHJcbiovXG5cbi8qXHJcbkVtYWlsLmRlZmF1bHRQcm9wcyA9IHtcclxuICAgIGluaXREYXRhOiB7fSxcclxufTtcclxuKi9cblxubW9kdWxlLmV4cG9ydHMgPSBFbWFpbDtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2Zyb250ZW5kL2RvY3MvZS1tYWlsL2RvY3VtZW50L2luZGV4LmpzeFxuLy8gbW9kdWxlIGlkID0gMzM4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0Jzttb2R1bGUuZXhwb3J0cz17ZG9jUm93OntkaXNwbGF5OidmbGV4JyxmbGV4RGlyZWN0aW9uOidyb3cnLypcclxuICAgICAgICAgICAgICAgIGJvcmRlcjogJzFweCBzb2xpZCBibHVlJ1xyXG4gICAgICAgICovfSxkb2NDb2x1bW46e2Rpc3BsYXk6J2ZsZXgnLGZsZXhEaXJlY3Rpb246J2NvbHVtbicsLypcclxuICAgICAgICAgICAgICAgIGJvcmRlcjogJzFweCBzb2xpZCB5ZWxsb3cnLFxyXG4gICAgICAgICovd2lkdGg6JzUwJSd9LGRvYzp7ZGlzcGxheTonZmxleCcsZmxleERpcmVjdGlvbjonY29sdW1uJy8qXHJcbiAgICAgICAgICAgICAgICBib3JkZXI6ICcxcHggc29saWQgYnJvd24nXHJcbiAgICAgICAgKi99LG9rOntiYWNrZ3JvdW5kQ29sb3I6J2xpZ2h0Z3JlZW4nLHdpZHRoOicxMDAlJyx0ZXh0QWxpZ246J3JpZ2h0J30sZXJyb3I6e2JhY2tncm91bmRDb2xvcjonbGlnaHRjb3JhbCcsd2lkdGg6JzEwMCUnLHRleHRBbGlnbjoncmlnaHQnfX07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9mcm9udGVuZC9kb2NzL2UtbWFpbC9kb2N1bWVudC9zdHlsZXMuanNcbi8vIG1vZHVsZSBpZCA9IDMzOVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbnZhciBEb2N1bWVudFJlZ2lzdGVyID0gcmVxdWlyZSgnLi8uLi9kb2N1bWVudHMvZG9jdW1lbnRzLmpzeCcpO1xudmFyIEJ0bkdldFhtbCA9IHJlcXVpcmUoJy4vLi4vLi4vY29tcG9uZW50cy9idXR0b24tcmVnaXN0ZXIvYnV0dG9uLXRhc2svaW5kZXguanN4Jyk7XG52YXIgVG9vbGJhckNvbnRhaW5lciA9IHJlcXVpcmUoJy4vLi4vLi4vY29tcG9uZW50cy90b29sYmFyLWNvbnRhaW5lci90b29sYmFyLWNvbnRhaW5lci5qc3gnKTtcbnZhciBnZXRTdW0gPSByZXF1aXJlKCcuLy4uLy4uLy4uL2xpYnMvZ2V0U3VtJyk7XG52YXIgSW5wdXROdW1iZXIgPSByZXF1aXJlKCcuLi8uLi9jb21wb25lbnRzL2lucHV0LW51bWJlci9pbnB1dC1udW1iZXIuanN4Jyk7XG5cbnZhciBzdHlsZXMgPSByZXF1aXJlKCcuL3N0eWxlcycpO1xudmFyIERPQ19UWVBFX0lEID0gJ0lORjMnO1xudmFyIERvY0NvbnRleHQgPSByZXF1aXJlKCcuLy4uLy4uL2RvYy1jb250ZXh0LmpzJyk7XG52YXIgVE9PTEJBUl9QUk9QUyA9IHtcbiAgICBhZGQ6IGZhbHNlLFxuICAgIGVkaXQ6IGZhbHNlLFxuICAgIGRlbGV0ZTogZmFsc2UsXG4gICAgc3RhcnQ6IGZhbHNlLFxuICAgIHByaW50OiB0cnVlLFxuICAgIGVtYWlsOiB0cnVlXG59O1xuXG4vKipcclxuICog0JrQu9Cw0YHRgSDRgNC10LDQu9C40LfRg9C10YIg0LTQvtC60YPQvNC10L3RgiDRgdC/0YDQsNCy0L7Rh9C90LjQutCwINC/0YDQuNC30L3QsNC60L7Qsi5cclxuICovXG5cbnZhciBEb2N1bWVudHMgPSBmdW5jdGlvbiAoX1JlYWN0JFB1cmVDb21wb25lbnQpIHtcbiAgICBfaW5oZXJpdHMoRG9jdW1lbnRzLCBfUmVhY3QkUHVyZUNvbXBvbmVudCk7XG5cbiAgICBmdW5jdGlvbiBEb2N1bWVudHMocHJvcHMpIHtcbiAgICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIERvY3VtZW50cyk7XG5cbiAgICAgICAgdmFyIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKERvY3VtZW50cy5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKERvY3VtZW50cykpLmNhbGwodGhpcywgcHJvcHMpKTtcblxuICAgICAgICBfdGhpcy5vbkNsaWNrSGFuZGxlciA9IF90aGlzLm9uQ2xpY2tIYW5kbGVyLmJpbmQoX3RoaXMpO1xuICAgICAgICBfdGhpcy5yZW5kZXJlciA9IF90aGlzLnJlbmRlcmVyLmJpbmQoX3RoaXMpO1xuICAgICAgICBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIHN1bW1hOiAwLFxuICAgICAgICAgICAgcmVhZDogMFxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuXG4gICAgX2NyZWF0ZUNsYXNzKERvY3VtZW50cywgW3tcbiAgICAgICAga2V5OiAncmVuZGVyJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgIG51bGwsXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChEb2N1bWVudFJlZ2lzdGVyLCB7IGluaXREYXRhOiB0aGlzLnByb3BzLmluaXREYXRhLFxuICAgICAgICAgICAgICAgICAgICBoaXN0b3J5OiB0aGlzLnByb3BzLmhpc3RvcnkgPyB0aGlzLnByb3BzLmhpc3RvcnkgOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb2R1bGU6IHRoaXMucHJvcHMubW9kdWxlLFxuICAgICAgICAgICAgICAgICAgICByZWY6ICdyZWdpc3RlcicsXG4gICAgICAgICAgICAgICAgICAgIHRvb2xiYXJQcm9wczogVE9PTEJBUl9QUk9QUyxcbiAgICAgICAgICAgICAgICAgICAgZG9jVHlwZUlkOiBET0NfVFlQRV9JRCxcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcyxcbiAgICAgICAgICAgICAgICAgICAgcmVuZGVyOiB0aGlzLnJlbmRlcmVyIH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXROdW1iZXIsIHsgdGl0bGU6ICdSZWFkIGtva2t1OicsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdyZWFkX2tva2t1JyxcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcy50b3RhbCxcbiAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQtcmVhZCcsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBOdW1iZXIodGhpcy5zdGF0ZS5yZWFkKS50b0ZpeGVkKDIpIHx8IDAsXG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVkOiB0cnVlIH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXROdW1iZXIsIHsgdGl0bGU6ICdTdW1tYSBrb2trdTonLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnc3VtbWFfa29ra3UnLFxuICAgICAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLnRvdGFsLFxuICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC1zdW1tYScsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBOdW1iZXIodGhpcy5zdGF0ZS5zdW1tYSkudG9GaXhlZCgyKSB8fCAwLFxuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZDogdHJ1ZSB9KVxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgIH0sIHtcbiAgICAgICAga2V5OiAncmVuZGVyZXInLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyZXIoc2VsZikge1xuICAgICAgICAgICAgdmFyIHN1bW1hID0gc2VsZi5ncmlkRGF0YSA/IGdldFN1bShzZWxmLmdyaWREYXRhLCAnc3VtbWEnKSA6IDA7XG4gICAgICAgICAgICBpZiAoc3VtbWEpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHsgc3VtbWE6IHN1bW1hLCByZWFkOiBzZWxmLmdyaWREYXRhLmxlbmd0aCB9KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgVG9vbGJhckNvbnRhaW5lcixcbiAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnRuR2V0WG1sLCB7XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiAnU2FhbWEgWE1MIGZhaWwnLFxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrOiB0aGlzLm9uQ2xpY2tIYW5kbGVyLFxuICAgICAgICAgICAgICAgICAgICByZWY6ICdidG4tZ2V0WG1sJ1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG5cbiAgICAgICAgLy9oYW5kbGVyINC00LvRjyDRgdC+0LHRi9GC0LjRjyDQutC70LjQuiDQvdCwINC60L3QvtC/0LrQsNGFINC/0LDQvdC10LvQuFxuXG4gICAgfSwge1xuICAgICAgICBrZXk6ICdvbkNsaWNrSGFuZGxlcicsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBvbkNsaWNrSGFuZGxlcihldmVudCkge1xuICAgICAgICAgICAgdmFyIERvYyA9IHRoaXMucmVmc1sncmVnaXN0ZXInXTtcblxuICAgICAgICAgICAgaWYgKERvYy5ncmlkRGF0YSAmJiBEb2MuZ3JpZERhdGEubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgLy/QtNC10LvQsNC10Lwg0YDQtdC00LDQudGA0LXQutGCINC90LAg0LrQvtC90YTQuNCz0YPRgNCw0YbQuNGOXG4gICAgICAgICAgICAgICAgdmFyIHNxbFdoZXJlID0gRG9jLnN0YXRlLnNxbFdoZXJlO1xuICAgICAgICAgICAgICAgIHZhciB1cmwgPSAnL3JlcG9ydHMvaW5mMy8nICsgRG9jQ29udGV4dC51c2VyRGF0YS51dWlkO1xuICAgICAgICAgICAgICAgIHZhciBwYXJhbXMgPSBlbmNvZGVVUklDb21wb25lbnQoJycgKyBzcWxXaGVyZSk7XG4gICAgICAgICAgICAgICAgd2luZG93Lm9wZW4odXJsICsgJy8nICsgcGFyYW1zKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgRG9jLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICAgICAgd2FybmluZzogJ01pdHRlIMO8aHRlZ2kgSU5GIHRlZW51c2VkIGxlaWRudW0nLCAvLyDRgdGC0YDQvtC60LAg0LjQt9Cy0LXRidC10L3QuNC5XG4gICAgICAgICAgICAgICAgICAgIHdhcm5pbmdUeXBlOiAnbm90VmFsaWQnXG5cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1dKTtcblxuICAgIHJldHVybiBEb2N1bWVudHM7XG59KFJlYWN0LlB1cmVDb21wb25lbnQpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IERvY3VtZW50cztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2Zyb250ZW5kL2RvY3MvaW5mMy9pbmRleC5qc3hcbi8vIG1vZHVsZSBpZCA9IDM0MFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7bW9kdWxlLmV4cG9ydHM9e2dyaWQ6e21haW5UYWJsZTp7d2lkdGg6JzEwMCUnLHRkOntib3JkZXI6JzFweCBzb2xpZCBsaWdodEdyZXknLGRpc3BsYXk6J3RhYmxlLWNlbGwnLHBhZGRpbmdMZWZ0Oic1cHgnfX0saGVhZGVyVGFibGU6e3dpZHRoOicxMDAlJ30sZ3JpZENvbnRhaW5lcjp7d2lkdGg6JzEwMCUnfX0sZG9jOntwb3NpdGlvbjoncmVsYXRpdmUnLGhlaWdodDonMTAwJScsZGlzcGxheTonZmxleCcsZmxleERpcmVjdGlvbjonY29sdW1uJ30sdG90YWw6e3dpZHRoOidhdXRvJ319O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vZnJvbnRlbmQvZG9jcy9pbmYzL3N0eWxlcy5qc1xuLy8gbW9kdWxlIGlkID0gMzQxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xudmFyIERvY3VtZW50UmVnaXN0ZXIgPSByZXF1aXJlKCcuLy4uL2RvY3VtZW50cy9kb2N1bWVudHMuanN4Jyk7XG52YXIgSW5wdXROdW1iZXIgPSByZXF1aXJlKCcuLi8uLi9jb21wb25lbnRzL2lucHV0LW51bWJlci9pbnB1dC1udW1iZXIuanN4Jyk7XG52YXIgZ2V0U3VtID0gcmVxdWlyZSgnLi8uLi8uLi8uLi9saWJzL2dldFN1bScpO1xuXG52YXIgc3R5bGVzID0gcmVxdWlyZSgnLi9zdHlsZXMnKTtcblxudmFyIERPQ19UWVBFX0lEID0gJ0xBUFNfS09LS1VWT1RURSc7XG52YXIgVE9PTEJBUl9QUk9QUyA9IHtcbiAgICBhZGQ6IGZhbHNlLFxuICAgIGVkaXQ6IGZhbHNlLFxuICAgIGRlbGV0ZTogZmFsc2UsXG4gICAgc3RhcnQ6IGZhbHNlLFxuICAgIHByaW50OiB0cnVlLFxuICAgIGVtYWlsOiB0cnVlXG59O1xuXG4vKipcclxuICog0JrQu9Cw0YHRgSDRgNC10LDQu9C40LfRg9C10YIg0LTQvtC60YPQvNC10L3RgiDRgdC/0YDQsNCy0L7Rh9C90LjQutCwINC/0YDQuNC30L3QsNC60L7Qsi5cclxuICovXG5cbnZhciBEb2N1bWVudHMgPSBmdW5jdGlvbiAoX1JlYWN0JFB1cmVDb21wb25lbnQpIHtcbiAgICBfaW5oZXJpdHMoRG9jdW1lbnRzLCBfUmVhY3QkUHVyZUNvbXBvbmVudCk7XG5cbiAgICBmdW5jdGlvbiBEb2N1bWVudHMocHJvcHMpIHtcbiAgICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIERvY3VtZW50cyk7XG5cbiAgICAgICAgdmFyIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKERvY3VtZW50cy5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKERvY3VtZW50cykpLmNhbGwodGhpcywgcHJvcHMpKTtcblxuICAgICAgICBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIHN1bW1hOiAwLFxuICAgICAgICAgICAgdGFzdXR1ZDogMCxcbiAgICAgICAgICAgIG1haGFrYW5kbWluZTogMCxcbiAgICAgICAgICAgIGphYWs6IDAsXG4gICAgICAgICAgICByZWFkOiAwXG4gICAgICAgIH07XG5cbiAgICAgICAgX3RoaXMucmVuZGVyZXIgPSBfdGhpcy5yZW5kZXJlci5iaW5kKF90aGlzKTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cblxuICAgIF9jcmVhdGVDbGFzcyhEb2N1bWVudHMsIFt7XG4gICAgICAgIGtleTogJ3JlbmRlcicsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRG9jdW1lbnRSZWdpc3RlciwgeyBpbml0RGF0YTogdGhpcy5wcm9wcy5pbml0RGF0YSxcbiAgICAgICAgICAgICAgICAgICAgaGlzdG9yeTogdGhpcy5wcm9wcy5oaXN0b3J5ID8gdGhpcy5wcm9wcy5oaXN0b3J5IDogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9kdWxlOiB0aGlzLnByb3BzLm1vZHVsZSxcbiAgICAgICAgICAgICAgICAgICAgcmVmOiAncmVnaXN0ZXInLFxuICAgICAgICAgICAgICAgICAgICB0b29sYmFyUHJvcHM6IFRPT0xCQVJfUFJPUFMsXG4gICAgICAgICAgICAgICAgICAgIGRvY1R5cGVJZDogRE9DX1RZUEVfSUQsXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlOiBzdHlsZXMsXG4gICAgICAgICAgICAgICAgICAgIHJlbmRlcjogdGhpcy5yZW5kZXJlciB9KSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0TnVtYmVyLCB7IHRpdGxlOiAnUmVhZCBrb2trdTonLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiAncmVhZF9rb2trdScsXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlOiBzdHlsZXMudG90YWwsXG4gICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LXJlYWQnLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogTnVtYmVyKHRoaXMuc3RhdGUucmVhZCkgfHwgMCxcbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IHRydWUgfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dE51bWJlciwgeyB0aXRsZTogJ0FydmUgc3VtbWEga29ra3U6JyxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3N1bW1hX2tva2t1JyxcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcy50b3RhbCxcbiAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQtc3VtbWEnLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogTnVtYmVyKHRoaXMuc3RhdGUuc3VtbWEpLnRvRml4ZWQoMikgfHwgMCxcbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IHRydWUgfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dE51bWJlciwgeyB0aXRsZTogJ1Rhc3V0dWQga29ra3U6JyxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3Rhc3V0dWRfa29ra3UnLFxuICAgICAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLnRvdGFsLFxuICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC10YXN1dHVkJyxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IE51bWJlcih0aGlzLnN0YXRlLnRhc3V0dWQpLnRvRml4ZWQoMikgfHwgMCxcbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IHRydWUgfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dE51bWJlciwgeyB0aXRsZTogJ01haGFrYW50dWQga29ra3U6JyxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ21haGFrYW5kbWluZV9rb2trdScsXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlOiBzdHlsZXMudG90YWwsXG4gICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LW1haGFrYW5kbWluZScsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBOdW1iZXIodGhpcy5zdGF0ZS5tYWhha2FuZG1pbmUpLnRvRml4ZWQoMikgfHwgMCxcbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IHRydWUgfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dE51bWJlciwgeyB0aXRsZTogJ0pcXHhFNFxceEU0ayBrb2trdTonLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnamFha19rb2trdScsXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlOiBzdHlsZXMudG90YWwsXG4gICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LWphYWsnLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogTnVtYmVyKHRoaXMuc3RhdGUuamFhaykudG9GaXhlZCgyKSB8fCAwLFxuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZDogdHJ1ZSB9KVxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgIH0sIHtcbiAgICAgICAga2V5OiAncmVuZGVyZXInLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyZXIoc2VsZikge1xuICAgICAgICAgICAgdmFyIHN1bW1hID0gc2VsZi5ncmlkRGF0YSA/IGdldFN1bShzZWxmLmdyaWREYXRhLCAnc3VtbWEnKSA6IDA7XG4gICAgICAgICAgICB2YXIgdGFzdXR1ZCA9IHNlbGYuZ3JpZERhdGEgPyBnZXRTdW0oc2VsZi5ncmlkRGF0YSwgJ3Rhc3V0dWQnKSA6IDA7XG4gICAgICAgICAgICB2YXIgbWFoYWthbmRtaW5lID0gc2VsZi5ncmlkRGF0YSA/IGdldFN1bShzZWxmLmdyaWREYXRhLCAnbWFoYWthbmRtaW5lJykgOiAwO1xuICAgICAgICAgICAgdmFyIGphYWsgPSBzZWxmLmdyaWREYXRhID8gZ2V0U3VtKHNlbGYuZ3JpZERhdGEsICdqYWFrJykgOiAwO1xuICAgICAgICAgICAgaWYgKHN1bW1hKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IHN1bW1hOiBzdW1tYSwgdGFzdXR1ZDogdGFzdXR1ZCwgbWFoYWthbmRtaW5lOiBtYWhha2FuZG1pbmUsIGphYWs6IGphYWssIHJlYWQ6IHNlbGYuZ3JpZERhdGEubGVuZ3RoIH0pO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudCgnZGl2JywgbnVsbCk7XG4gICAgICAgIH1cbiAgICB9XSk7XG5cbiAgICByZXR1cm4gRG9jdW1lbnRzO1xufShSZWFjdC5QdXJlQ29tcG9uZW50KTtcblxubW9kdWxlLmV4cG9ydHMgPSBEb2N1bWVudHM7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9mcm9udGVuZC9kb2NzL2NoaWxkX3N1bW1hcnkvaW5kZXguanN4XG4vLyBtb2R1bGUgaWQgPSAzNDJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO21vZHVsZS5leHBvcnRzPXtncmlkOnttYWluVGFibGU6e3dpZHRoOicxMDAlJyx0ZDp7Ym9yZGVyOicxcHggc29saWQgbGlnaHRHcmV5JyxkaXNwbGF5Oid0YWJsZS1jZWxsJyxwYWRkaW5nTGVmdDonNXB4J319LGhlYWRlclRhYmxlOnt3aWR0aDonMTAwJSd9LGdyaWRDb250YWluZXI6e3dpZHRoOicxMDAlJ319LHRvdGFsOnt3aWR0aDonYXV0byd9LGRvYzp7cG9zaXRpb246J3JlbGF0aXZlJyxoZWlnaHQ6JzEwMCUnLGRpc3BsYXk6J2ZsZXgnLGZsZXhEaXJlY3Rpb246J2NvbHVtbid9fTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2Zyb250ZW5kL2RvY3MvY2hpbGRfc3VtbWFyeS9zdHlsZXMuanNcbi8vIG1vZHVsZSBpZCA9IDM0M1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbnZhciBEb2N1bWVudFJlZ2lzdGVyID0gcmVxdWlyZSgnLi8uLi9kb2N1bWVudHMvZG9jdW1lbnRzLmpzeCcpO1xudmFyIEJ0bkdldENzdiA9IHJlcXVpcmUoJy4vLi4vLi4vY29tcG9uZW50cy9idXR0b24tcmVnaXN0ZXIvYnV0dG9uLXRhc2svaW5kZXguanN4Jyk7XG52YXIgVG9vbGJhckNvbnRhaW5lciA9IHJlcXVpcmUoJy4vLi4vLi4vY29tcG9uZW50cy90b29sYmFyLWNvbnRhaW5lci90b29sYmFyLWNvbnRhaW5lci5qc3gnKTtcbnZhciBJbnB1dE51bWJlciA9IHJlcXVpcmUoJy4uLy4uL2NvbXBvbmVudHMvaW5wdXQtbnVtYmVyL2lucHV0LW51bWJlci5qc3gnKTtcbnZhciBCdG5FYXJ2ZSA9IHJlcXVpcmUoJy4vLi4vLi4vY29tcG9uZW50cy9idXR0b24tcmVnaXN0ZXIvYnV0dG9uLWVhcnZlL2luZGV4LmpzeCcpO1xuXG52YXIgZ2V0U3VtID0gcmVxdWlyZSgnLi8uLi8uLi8uLi9saWJzL2dldFN1bScpO1xuXG52YXIgRG9jQ29udGV4dCA9IHJlcXVpcmUoJy4vLi4vLi4vZG9jLWNvbnRleHQuanMnKTtcblxudmFyIHN0eWxlcyA9IHJlcXVpcmUoJy4vc3R5bGVzJyk7XG52YXIgRVZFTlRTID0gW3sgbmFtZTogJ1NhYW1hIENTViBmYWlsJywgbWV0aG9kOiBudWxsLCBkb2NUeXBlSWQ6IG51bGwgfSwgeyBuYW1lOiAnU2FhbWEgWE1MIGUtYXJ2ZWQgKFNFQikga8O1aWsgdmFsaXR1ZCBhcnZlZCcsIG1ldGhvZDogbnVsbCwgZG9jVHlwZUlkOiBudWxsIH0sIHsgbmFtZTogJ1NhYW1hIFhNTCBlLWFydmVkIChTV0VEKSBrw7VpayB2YWxpdHVkIGFydmVkJywgbWV0aG9kOiBudWxsLCBkb2NUeXBlSWQ6IG51bGwgfV07XG5cbnZhciBET0NfVFlQRV9JRCA9ICdBUlZFRF9LT09ESV9KQVJHSSc7XG52YXIgVE9PTEJBUl9QUk9QUyA9IHtcbiAgICBhZGQ6IGZhbHNlLFxuICAgIGVkaXQ6IGZhbHNlLFxuICAgIGRlbGV0ZTogZmFsc2UsXG4gICAgc3RhcnQ6IGZhbHNlLFxuICAgIHByaW50OiB0cnVlLFxuICAgIGVtYWlsOiB0cnVlXG59O1xuXG4vKipcclxuICog0JrQu9Cw0YHRgSDRgNC10LDQu9C40LfRg9C10YIg0LTQvtC60YPQvNC10L3RgiDRgdC/0YDQsNCy0L7Rh9C90LjQutCwINC/0YDQuNC30L3QsNC60L7Qsi5cclxuICovXG5cbnZhciBEb2N1bWVudHMgPSBmdW5jdGlvbiAoX1JlYWN0JFB1cmVDb21wb25lbnQpIHtcbiAgICBfaW5oZXJpdHMoRG9jdW1lbnRzLCBfUmVhY3QkUHVyZUNvbXBvbmVudCk7XG5cbiAgICBmdW5jdGlvbiBEb2N1bWVudHMocHJvcHMpIHtcbiAgICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIERvY3VtZW50cyk7XG5cbiAgICAgICAgdmFyIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKERvY3VtZW50cy5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKERvY3VtZW50cykpLmNhbGwodGhpcywgcHJvcHMpKTtcblxuICAgICAgICBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIHN1bW1hOiAwLFxuICAgICAgICAgICAgcmVhZDogMFxuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5yZW5kZXJlciA9IF90aGlzLnJlbmRlcmVyLmJpbmQoX3RoaXMpO1xuICAgICAgICBfdGhpcy5vbkNsaWNrSGFuZGxlciA9IF90aGlzLm9uQ2xpY2tIYW5kbGVyLmJpbmQoX3RoaXMpO1xuXG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG5cbiAgICBfY3JlYXRlQ2xhc3MoRG9jdW1lbnRzLCBbe1xuICAgICAgICBrZXk6ICdyZW5kZXInLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KERvY3VtZW50UmVnaXN0ZXIsIHsgaW5pdERhdGE6IHRoaXMucHJvcHMuaW5pdERhdGEsXG4gICAgICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHRoaXMucHJvcHMuaGlzdG9yeSA/IHRoaXMucHJvcHMuaGlzdG9yeSA6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vZHVsZTogdGhpcy5wcm9wcy5tb2R1bGUsXG4gICAgICAgICAgICAgICAgICAgIHJlZjogJ3JlZ2lzdGVyJyxcbiAgICAgICAgICAgICAgICAgICAgdG9vbGJhclByb3BzOiBUT09MQkFSX1BST1BTLFxuICAgICAgICAgICAgICAgICAgICBkb2NUeXBlSWQ6IERPQ19UWVBFX0lELFxuICAgICAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLFxuICAgICAgICAgICAgICAgICAgICByZW5kZXI6IHRoaXMucmVuZGVyZXIgfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dE51bWJlciwgeyB0aXRsZTogJ1JlYWQga29ra3U6JyxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3JlYWRfa29ra3UnLFxuICAgICAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLnRvdGFsLFxuICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC1yZWFkJyxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IE51bWJlcih0aGlzLnN0YXRlLnJlYWQpIHx8IDAsXG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVkOiB0cnVlIH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXROdW1iZXIsIHsgdGl0bGU6ICdTdW1tYSBrb2trdTonLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnc3VtbWFfa29ra3UnLFxuICAgICAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLnRvdGFsLFxuICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC1zdW1tYScsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBOdW1iZXIodGhpcy5zdGF0ZS5zdW1tYSkudG9GaXhlZCgyKSB8fCAwLFxuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZDogdHJ1ZSB9KVxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgIH0sIHtcbiAgICAgICAga2V5OiAncmVuZGVyZXInLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyZXIoc2VsZikge1xuICAgICAgICAgICAgdmFyIHN1bW1hID0gc2VsZi5ncmlkRGF0YSA/IGdldFN1bShzZWxmLmdyaWREYXRhLCAnc3VtbWEnKSA6IDA7XG4gICAgICAgICAgICB2YXIgcmVhZCA9IHNlbGYuZ3JpZERhdGEgPyBzZWxmLmdyaWREYXRhLmxlbmd0aCA6IDA7XG4gICAgICAgICAgICBpZiAoc3VtbWEpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHsgc3VtbWE6IHN1bW1hLCByZWFkOiByZWFkIH0pO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICBUb29sYmFyQ29udGFpbmVyLFxuICAgICAgICAgICAgICAgIG51bGwsXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChCdG5FYXJ2ZSwge1xuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrOiB0aGlzLm9uQ2xpY2tIYW5kbGVyLFxuICAgICAgICAgICAgICAgICAgICBkb2NUeXBlSWQ6IERPQ19UWVBFX0lELFxuICAgICAgICAgICAgICAgICAgICBwaHJhc2U6ICdLYXMgbGFhZGlkYSBYTUwgKFNXRUQpIGZhaWw/JyxcbiAgICAgICAgICAgICAgICAgICAgcmVmOiAnYnRuRWFydmVTd2VkWE1MJyxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IEVWRU5UU1syXS5uYW1lXG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChCdG5FYXJ2ZSwge1xuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrOiB0aGlzLm9uQ2xpY2tIYW5kbGVyLFxuICAgICAgICAgICAgICAgICAgICBkb2NUeXBlSWQ6IERPQ19UWVBFX0lELFxuICAgICAgICAgICAgICAgICAgICBwaHJhc2U6ICdLYXMgbGFhZGlkYSBYTUwgKFNFQikgZmFpbD8nLFxuICAgICAgICAgICAgICAgICAgICByZWY6ICdidG5FYXJ2ZVNlYlhNTCcsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBFVkVOVFNbMV0ubmFtZVxuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnRuR2V0Q3N2LCB7XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiAnU2FhbWEgQ1NWIGZhaWwnLFxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrOiB0aGlzLm9uQ2xpY2tIYW5kbGVyLFxuICAgICAgICAgICAgICAgICAgICBzaG93RGF0ZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIHJlZjogJ2J0bi1nZXRjc3YnXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cblxuICAgICAgICAvL2hhbmRsZXIg0LTQu9GPINGB0L7QsdGL0YLQuNGPINC60LvQuNC6INC90LAg0LrQvdC+0L/QutCw0YUg0L/QsNC90LXQu9C4XG5cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ29uQ2xpY2tIYW5kbGVyJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIG9uQ2xpY2tIYW5kbGVyKGV2ZW50KSB7XG4gICAgICAgICAgICB2YXIgRG9jID0gdGhpcy5yZWZzWydyZWdpc3RlciddO1xuICAgICAgICAgICAgdmFyIGlkcyA9IG5ldyBTZXQoKTsgLy8g0YHRjtC00LAg0L/QuNGI0LXQvCDQuNC0INGB0YfQtdGC0L7QvCwg0LrQvtGC0L7RgNGL0LUg0L/QvtC0INC+0LHRgNCw0LHQvtGC0LrRg1xuICAgICAgICAgICAgLy9TYWFtYSBDU1YgZmFpbFxuICAgICAgICAgICAgc3dpdGNoIChldmVudCkge1xuICAgICAgICAgICAgICAgIGNhc2UgRVZFTlRTWzBdLm5hbWU6XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKERvYy5ncmlkRGF0YSAmJiBEb2MuZ3JpZERhdGEubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvL9C00LXQu9Cw0LXQvCDRgNC10LTQsNC50YDQtdC60YIg0L3QsCDQutC+0L3RhNC40LPRg9GA0LDRhtC40Y5cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBzcWxXaGVyZSA9IERvYy5zdGF0ZS5zcWxXaGVyZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB1cmwgPSAnL3JlcG9ydHMvYXJ2ZWRfa29vZGlfamFyZ2kvJyArIERvY0NvbnRleHQudXNlckRhdGEudXVpZDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwYXJhbXMgPSBlbmNvZGVVUklDb21wb25lbnQoJycgKyBzcWxXaGVyZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cub3Blbih1cmwgKyAnLycgKyBwYXJhbXMpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgRG9jLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3YXJuaW5nOiAnTWl0dGUgw7xodGVnaSBraXJqZWQgbGVpZG51ZCcsIC8vINGB0YLRgNC+0LrQsCDQuNC30LLQtdGJ0LXQvdC40LlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3YXJuaW5nVHlwZTogJ25vdFZhbGlkJ1xuXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhc2UgRVZFTlRTWzFdLm5hbWU6XG4gICAgICAgICAgICAgICAgICAgIC8vZS1hcnZlZCBTRUIgKFhNTClcblxuICAgICAgICAgICAgICAgICAgICAvLyDQsdGD0LTQtdGCINGB0YTQvtGA0LzQuNGA0L7QstCw0L0g0YTQsNC50Lsg0LTQu9GPINC+0YLQv9GA0LDQstC60Lgg0LIg0LHQsNC90Log0KHQldCRXG4gICAgICAgICAgICAgICAgICAgIERvYy5ncmlkRGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChyb3cpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyb3cucGFuayAmJiByb3cucGFuayA9PSAnU0VCJyAmJiByb3cuc2VsZWN0ICYmIE51bWJlcihyb3cuc3VtbWEpID4gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vINCy0YvQsdGA0LDQvdC+INC00LvRjyDQv9C10YfQsNGC0LhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZHMuYWRkKHJvdy5pZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAvLyDQutC+0L3QstC10YDRgtCw0YbQuNGPINCyINC80LDRgdGB0LjQslxuICAgICAgICAgICAgICAgICAgICBpZHMgPSBBcnJheS5mcm9tKGlkcyk7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKCFpZHMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBEb2Muc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdhcm5pbmc6ICdNaXR0ZSDDvGh0ZWdpIGFydmUgbGVpZG51bScsIC8vINGB0YLRgNC+0LrQsCDQuNC30LLQtdGJ0LXQvdC40LlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3YXJuaW5nVHlwZTogJ25vdFZhbGlkJ1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyDQvtGC0L/RgNCw0LLQu9GP0LXQvCDQt9Cw0L/RgNC+0YEg0L3QsCDQstGL0L/QvtC70L3QtdC90LjQtVxuICAgICAgICAgICAgICAgICAgICAgICAgRG9jLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3YXJuaW5nOiAnTGVpZHNpbiAnICsgaWRzLmxlbmd0aCArICcgYXJ2ZWlkJywgLy8g0YHRgtGA0L7QutCwINC40LfQstC10YnQtdC90LjQuVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdhcm5pbmdUeXBlOiAnb2snXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBfdXJsID0gJy9lLWFydmVkL3NlYi8nICsgRG9jQ29udGV4dC51c2VyRGF0YS51dWlkICsgJy8nICsgaWRzO1xuICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93Lm9wZW4oJycgKyBfdXJsKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIEVWRU5UU1syXS5uYW1lOlxuICAgICAgICAgICAgICAgICAgICAvL2UtYXJ2ZWQgU3dlZCAoWE1MKVxuXG4gICAgICAgICAgICAgICAgICAgIC8vINCx0YPQtNC10YIg0YHRhNC+0YDQvNC40YDQvtCy0LDQvSDRhNCw0LnQuyDQtNC70Y8g0L7RgtC/0YDQsNCy0LrQuCDQsiDQsdCw0L3QuiBTV0VEXG4gICAgICAgICAgICAgICAgICAgIERvYy5ncmlkRGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChyb3cpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyb3cuc2VsZWN0ICYmIHJvdy5wYW5rICYmIHJvdy5wYW5rID09ICdTV0VEJyAmJiBOdW1iZXIocm93LnN1bW1hKSA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAmJiByb3cua2FzX3N3ZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDQstGL0LHRgNCw0L3QviDQtNC70Y8g0L/QtdGH0LDRgtC4XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWRzLmFkZChyb3cuaWQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgLy8g0LrQvtC90LLQtdGA0YLQsNGG0LjRjyDQsiDQvNCw0YHRgdC40LJcbiAgICAgICAgICAgICAgICAgICAgaWRzID0gQXJyYXkuZnJvbShpZHMpO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmICghaWRzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgRG9jLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3YXJuaW5nOiAnTWl0dGUgw7xodGVnaSBhcnZlIGxlaWRudW0nLCAvLyDRgdGC0YDQvtC60LAg0LjQt9Cy0LXRidC10L3QuNC5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2FybmluZ1R5cGU6ICdub3RWYWxpZCdcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8g0L7RgtC/0YDQsNCy0LvRj9C10Lwg0LfQsNC/0YDQvtGBINC90LAg0LLRi9C/0L7Qu9C90LXQvdC40LVcbiAgICAgICAgICAgICAgICAgICAgICAgIERvYy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2FybmluZzogJ0xlaWRzaW4gJyArIGlkcy5sZW5ndGggKyAnIGFydmVpZCcsIC8vINGB0YLRgNC+0LrQsCDQuNC30LLQtdGJ0LXQvdC40LlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3YXJuaW5nVHlwZTogJ29rJ1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBfdXJsMiA9ICcvZS1hcnZlZC9zd2VkLycgKyBEb2NDb250ZXh0LnVzZXJEYXRhLnV1aWQgKyAnLycgKyBpZHM7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cub3BlbignJyArIF91cmwyKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1dKTtcblxuICAgIHJldHVybiBEb2N1bWVudHM7XG59KFJlYWN0LlB1cmVDb21wb25lbnQpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IERvY3VtZW50cztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2Zyb250ZW5kL2RvY3MvYXJ2ZWRfa29vZGlfamFyZ2kvaW5kZXguanN4XG4vLyBtb2R1bGUgaWQgPSAzNDRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO21vZHVsZS5leHBvcnRzPXtncmlkOnttYWluVGFibGU6e3dpZHRoOicxMDAlJyx0ZDp7Ym9yZGVyOicxcHggc29saWQgbGlnaHRHcmV5JyxkaXNwbGF5Oid0YWJsZS1jZWxsJyxwYWRkaW5nTGVmdDonNXB4J319LGhlYWRlclRhYmxlOnt3aWR0aDonMTAwJSd9LGdyaWRDb250YWluZXI6e3dpZHRoOic5NSUnfX0sdG90YWw6e3dpZHRoOidhdXRvJ30sZG9jOntoZWlnaHQ6JzEwMCUnfX07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9mcm9udGVuZC9kb2NzL2FydmVkX2tvb2RpX2phcmdpL3N0eWxlcy5qc1xuLy8gbW9kdWxlIGlkID0gMzQ1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xudmFyIERvY3VtZW50UmVnaXN0ZXIgPSByZXF1aXJlKCcuLy4uL2RvY3VtZW50cy9kb2N1bWVudHMuanN4Jyk7XG52YXIgQnRuR2V0WG1sID0gcmVxdWlyZSgnLi8uLi8uLi9jb21wb25lbnRzL2J1dHRvbi1yZWdpc3Rlci9idXR0b24tdGFzay9pbmRleC5qc3gnKTtcbnZhciBUb29sYmFyQ29udGFpbmVyID0gcmVxdWlyZSgnLi8uLi8uLi9jb21wb25lbnRzL3Rvb2xiYXItY29udGFpbmVyL3Rvb2xiYXItY29udGFpbmVyLmpzeCcpO1xudmFyIElucHV0TnVtYmVyID0gcmVxdWlyZSgnLi4vLi4vY29tcG9uZW50cy9pbnB1dC1udW1iZXIvaW5wdXQtbnVtYmVyLmpzeCcpO1xudmFyIElucHV0VGV4dCA9IHJlcXVpcmUoJy4uLy4uL2NvbXBvbmVudHMvaW5wdXQtdGV4dC9pbnB1dC10ZXh0LmpzeCcpO1xudmFyIExvYWRpbmcgPSByZXF1aXJlKCcuLi8uLi9jb21wb25lbnRzL2xvYWRpbmcvaW5kZXguanN4Jyk7XG5cbnZhciBzdHlsZXMgPSByZXF1aXJlKCcuL3N0eWxlcycpO1xudmFyIERPQ19UWVBFX0lEID0gJ1NBTERPX0pBX0tBSVZFJztcbnZhciBUT09MQkFSX1BST1BTID0ge1xuICAgIGFkZDogZmFsc2UsXG4gICAgZWRpdDogZmFsc2UsXG4gICAgZGVsZXRlOiBmYWxzZSxcbiAgICBzdGFydDogZmFsc2UsXG4gICAgcHJpbnQ6IHRydWUsXG4gICAgZW1haWw6IHRydWVcbn07XG52YXIgRG9jQ29udGV4dCA9IHJlcXVpcmUoJy4vLi4vLi4vZG9jLWNvbnRleHQuanMnKTtcblxuLyoqXHJcbiAqINCa0LvQsNGB0YEg0YDQtdCw0LvQuNC30YPQtdGCINC00L7QutGD0LzQtdC90YIg0YHQv9GA0LDQstC+0YfQvdC40LrQsCDQv9GA0LjQt9C90LDQutC+0LIuXHJcbiAqL1xuXG52YXIgRG9jdW1lbnRzID0gZnVuY3Rpb24gKF9SZWFjdCRQdXJlQ29tcG9uZW50KSB7XG4gICAgX2luaGVyaXRzKERvY3VtZW50cywgX1JlYWN0JFB1cmVDb21wb25lbnQpO1xuXG4gICAgZnVuY3Rpb24gRG9jdW1lbnRzKHByb3BzKSB7XG4gICAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBEb2N1bWVudHMpO1xuXG4gICAgICAgIHZhciBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChEb2N1bWVudHMuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihEb2N1bWVudHMpKS5jYWxsKHRoaXMsIHByb3BzKSk7XG5cbiAgICAgICAgX3RoaXMub25DbGlja0hhbmRsZXIgPSBfdGhpcy5vbkNsaWNrSGFuZGxlci5iaW5kKF90aGlzKTtcbiAgICAgICAgX3RoaXMucmVuZGVyZXIgPSBfdGhpcy5yZW5kZXJlci5iaW5kKF90aGlzKTtcbiAgICAgICAgX3RoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBhbGdfc2FsZG86IDAsXG4gICAgICAgICAgICBhcnZlc3RhdHVkOiAwLFxuICAgICAgICAgICAgc29vZHVzdHVzOiAwLFxuICAgICAgICAgICAgbGFla3VtaXNlZDogMCxcbiAgICAgICAgICAgIG1haGFrYW50dWQ6IDAsXG4gICAgICAgICAgICB0YWdhc3R1c2VkOiAwLFxuICAgICAgICAgICAgamFhazogMCxcbiAgICAgICAgICAgIHJlYWQ6IDAsXG4gICAgICAgICAgICBmaWx0cmlfcmVhZDogMFxuICAgICAgICB9O1xuXG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG5cbiAgICBfY3JlYXRlQ2xhc3MoRG9jdW1lbnRzLCBbe1xuICAgICAgICBrZXk6ICdyZW5kZXInLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KERvY3VtZW50UmVnaXN0ZXIsIHsgaW5pdERhdGE6IHRoaXMucHJvcHMuaW5pdERhdGEsXG4gICAgICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHRoaXMucHJvcHMuaGlzdG9yeSA/IHRoaXMucHJvcHMuaGlzdG9yeSA6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vZHVsZTogdGhpcy5wcm9wcy5tb2R1bGUsXG4gICAgICAgICAgICAgICAgICAgIHJlZjogJ3JlZ2lzdGVyJyxcbiAgICAgICAgICAgICAgICAgICAgdG9vbGJhclByb3BzOiBUT09MQkFSX1BST1BTLFxuICAgICAgICAgICAgICAgICAgICBkb2NUeXBlSWQ6IERPQ19UWVBFX0lELFxuICAgICAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLFxuICAgICAgICAgICAgICAgICAgICByZW5kZXI6IHRoaXMucmVuZGVyZXIgfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dFRleHQsIHsgdGl0bGU6ICdGaWx0cmkgYWxsIC8gcmVhZCBrb2trdTonLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiAncmVhZF9rb2trdScsXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlOiBzdHlsZXMudG90YWwsXG4gICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LXJlYWQnLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogU3RyaW5nKHRoaXMuc3RhdGUuZmlsdHJpX3JlYWQgKyAnLycgKyB0aGlzLnN0YXRlLnJlYWQpIHx8IDAsXG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVkOiB0cnVlIH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXROdW1iZXIsIHsgdGl0bGU6ICdBbGcuc2FsZG8ga29ra3U6JyxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2FsZ19zYWxkb19rb2trdScsXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlOiBzdHlsZXMudG90YWwsXG4gICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LXJlYWQnLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogTnVtYmVyKHRoaXMuc3RhdGUuYWxnX3NhbGRvKSB8fCAwLFxuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZDogdHJ1ZSB9KSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0TnVtYmVyLCB7IHRpdGxlOiAnQXJ2ZXN0YXR1ZCAoc2ggXFx4RkNtYmVyYXJ2ZXN0dXMpIGtva2t1OicsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdhcnZlc3RhdHVkX2tva2t1JyxcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcy50b3RhbCxcbiAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQtYXJ2ZXN0YXR1ZCcsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBOdW1iZXIodGhpcy5zdGF0ZS5hcnZlc3RhdHVkKSB8fCAwLFxuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZDogdHJ1ZSB9KSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0TnVtYmVyLCB7IHRpdGxlOiAnU29vZHVzdHVzIGtva2t1OicsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdzb29kdXN0dXNfa29ra3UnLFxuICAgICAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLnRvdGFsLFxuICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC1zb29kdXN0dXMnLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogTnVtYmVyKHRoaXMuc3RhdGUuc29vZHVzdHVzKSB8fCAwLFxuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZDogdHJ1ZSB9KSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0TnVtYmVyLCB7IHRpdGxlOiAnQXJ2ZXN0YXR1ZCBqYSBTb29kdXN0dXMga29ra3U6JyxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2Fydl9qYV9zb29kdXN0dXNfa29ra3UnLFxuICAgICAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLnRvdGFsLFxuICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC1hcnZfamFfc29vZHVzdHVzJyxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IE51bWJlcih0aGlzLnN0YXRlLmFydl9qYV9zb29kdXN0dXMpIHx8IDAsXG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVkOiB0cnVlIH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXROdW1iZXIsIHsgdGl0bGU6ICdMYWVrdW1pc2VkIGtva2t1OicsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdsYWVrdW1pc2VkX2tva2t1JyxcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcy50b3RhbCxcbiAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQtbGFla3VtaXNlZCcsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBOdW1iZXIodGhpcy5zdGF0ZS5sYWVrdW1pc2VkKSB8fCAwLFxuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZDogdHJ1ZSB9KSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0TnVtYmVyLCB7IHRpdGxlOiAnTWFoYWthbnR1ZCBrb2trdTonLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnbWFoYWthbnR1ZF9rb2trdScsXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlOiBzdHlsZXMudG90YWwsXG4gICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LW1haGFuZG1pbmUnLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogTnVtYmVyKHRoaXMuc3RhdGUubWFoYWthbnR1ZCkgfHwgMCxcbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IHRydWUgfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dE51bWJlciwgeyB0aXRsZTogJ1RhZ2FzdHVzZWQga29ra3U6JyxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3RhZ2FzdHVzZWRfa29ra3UnLFxuICAgICAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLnRvdGFsLFxuICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC10YWdhc3R1c2VkJyxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IE51bWJlcih0aGlzLnN0YXRlLnRhZ2FzdHVzZWQpIHx8IDAsXG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVkOiB0cnVlIH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXROdW1iZXIsIHsgdGl0bGU6ICdKXFx4RTRcXHhFNGsga29ra3U6JyxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2phYWtfa29ra3UnLFxuICAgICAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLnRvdGFsLFxuICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC1qYWFrJyxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IE51bWJlcih0aGlzLnN0YXRlLmphYWspIHx8IDAsXG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVkOiB0cnVlIH0pXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgfSwge1xuICAgICAgICBrZXk6ICdyZW5kZXJlcicsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXJlcihzZWxmKSB7XG5cbiAgICAgICAgICAgIGlmICghc2VsZiB8fCAhc2VsZi5ncmlkRGF0YSB8fCAhc2VsZi5ncmlkRGF0YS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAvLyDQv9C+0LrQsCDQvdC10YIg0LTQsNC90L3Ri9GFXG4gICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgICAgIGFsZ19zYWxkbzogMCxcbiAgICAgICAgICAgICAgICAgICAgYXJ2ZXN0YXR1ZDogMCxcbiAgICAgICAgICAgICAgICAgICAgc29vZHVzdHVzOiAwLFxuICAgICAgICAgICAgICAgICAgICBhcnZfamFfc29vZHVzdHVzOiAwLFxuICAgICAgICAgICAgICAgICAgICBsYWVrdW1pc2VkOiAwLFxuICAgICAgICAgICAgICAgICAgICBtYWhha2FudHVkOiAwLFxuICAgICAgICAgICAgICAgICAgICB0YWdhc3R1c2VkOiAwLFxuICAgICAgICAgICAgICAgICAgICBqYWFrOiAwLFxuICAgICAgICAgICAgICAgICAgICByZWFkOiAwLFxuICAgICAgICAgICAgICAgICAgICBmaWx0cmlfcmVhZDogMFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB2YXIgYWxnX3NhbGRvID0gc2VsZi5ncmlkRGF0YSA/IHNlbGYuZ3JpZERhdGFbMF0uYWxnX3NhbGRvX3RvdGFsIDogMDtcbiAgICAgICAgICAgIHZhciBhcnZlc3RhdHVkID0gc2VsZi5ncmlkRGF0YSA/IHNlbGYuZ3JpZERhdGFbMF0uYXJ2ZXN0YXR1ZF90b3RhbCA6IDA7XG4gICAgICAgICAgICB2YXIgc29vZHVzdHVzID0gc2VsZi5ncmlkRGF0YSA/IHNlbGYuZ3JpZERhdGFbMF0uc29vZHVzdHVzX3RvdGFsIDogMDtcbiAgICAgICAgICAgIHZhciBhcnZfamFfc29vZHVzdHVzID0gc2VsZi5ncmlkRGF0YSA/IHNlbGYuZ3JpZERhdGFbMF0uYXJ2X2phX3Nvb2R1c3R1c190b3RhbCA6IDA7XG4gICAgICAgICAgICB2YXIgbGFla3VtaXNlZCA9IHNlbGYuZ3JpZERhdGEgPyBzZWxmLmdyaWREYXRhWzBdLmxhZWt1bWlzZWRfdG90YWwgOiAwO1xuICAgICAgICAgICAgdmFyIG1haGFrYW50dWQgPSBzZWxmLmdyaWREYXRhID8gc2VsZi5ncmlkRGF0YVswXS5tYWhha2FudHVkX3RvdGFsIDogMDtcbiAgICAgICAgICAgIHZhciB0YWdhc3R1c2VkID0gc2VsZi5ncmlkRGF0YSA/IHNlbGYuZ3JpZERhdGFbMF0udGFnYXN0dXNlZF90b3RhbCA6IDA7XG4gICAgICAgICAgICB2YXIgamFhayA9IHNlbGYuZ3JpZERhdGEgPyBzZWxmLmdyaWREYXRhWzBdLmphYWtfdG90YWwgOiAwO1xuXG4gICAgICAgICAgICB2YXIgcmVhZCA9IHNlbGYuZ3JpZERhdGEgJiYgc2VsZi5ncmlkRGF0YS5sZW5ndGggJiYgc2VsZi5ncmlkRGF0YVswXS5yb3dzX3RvdGFsID8gc2VsZi5ncmlkRGF0YVswXS5yb3dzX3RvdGFsIDogMDtcbiAgICAgICAgICAgIHZhciBmaWx0cmlfcmVhZCA9IHNlbGYuZ3JpZERhdGEgJiYgc2VsZi5ncmlkRGF0YS5sZW5ndGggJiYgc2VsZi5ncmlkRGF0YVswXS5maWx0ZXJfdG90YWwgPyBzZWxmLmdyaWREYXRhWzBdLmZpbHRlcl90b3RhbCA6IDA7XG5cbiAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgIGFsZ19zYWxkbzogYWxnX3NhbGRvLFxuICAgICAgICAgICAgICAgIGFydmVzdGF0dWQ6IGFydmVzdGF0dWQsXG4gICAgICAgICAgICAgICAgc29vZHVzdHVzOiBzb29kdXN0dXMsXG4gICAgICAgICAgICAgICAgYXJ2X2phX3Nvb2R1c3R1czogYXJ2X2phX3Nvb2R1c3R1cyxcbiAgICAgICAgICAgICAgICBsYWVrdW1pc2VkOiBsYWVrdW1pc2VkLFxuICAgICAgICAgICAgICAgIG1haGFrYW50dWQ6IG1haGFrYW50dWQsXG4gICAgICAgICAgICAgICAgdGFnYXN0dXNlZDogdGFnYXN0dXNlZCxcbiAgICAgICAgICAgICAgICBqYWFrOiBqYWFrLFxuICAgICAgICAgICAgICAgIHJlYWQ6IHJlYWQsXG4gICAgICAgICAgICAgICAgZmlsdHJpX3JlYWQ6IGZpbHRyaV9yZWFkXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgVG9vbGJhckNvbnRhaW5lcixcbiAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnRuR2V0WG1sLCB7XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiAnU2FhbWEgQ1NWIGZhaWwnLFxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrOiB0aGlzLm9uQ2xpY2tIYW5kbGVyLFxuICAgICAgICAgICAgICAgICAgICBzaG93RGF0ZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIHJlZjogJ2J0bi1nZXRDc3YnXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cblxuICAgICAgICAvL2hhbmRsZXIg0LTQu9GPINGB0L7QsdGL0YLQuNGPINC60LvQuNC6INC90LAg0LrQvdC+0L/QutCw0YUg0L/QsNC90LXQu9C4XG5cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ29uQ2xpY2tIYW5kbGVyJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIG9uQ2xpY2tIYW5kbGVyKCkge1xuICAgICAgICAgICAgdmFyIERvYyA9IHRoaXMucmVmc1sncmVnaXN0ZXInXTtcblxuICAgICAgICAgICAgaWYgKERvYy5ncmlkRGF0YSAmJiBEb2MuZ3JpZERhdGEubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgLy/QtNC10LvQsNC10Lwg0YDQtdC00LDQudGA0LXQutGCINC90LAg0LrQvtC90YTQuNCz0YPRgNCw0YbQuNGOXG4gICAgICAgICAgICAgICAgdmFyIHNxbFdoZXJlID0gRG9jLnN0YXRlLnNxbFdoZXJlO1xuICAgICAgICAgICAgICAgIHZhciB1cmwgPSAnL3JlcG9ydHMvc2FsZG9famFfa2FpdmUvJyArIERvY0NvbnRleHQudXNlckRhdGEudXVpZDtcbiAgICAgICAgICAgICAgICB2YXIgcGFyYW1zID0gZW5jb2RlVVJJQ29tcG9uZW50KCcnICsgc3FsV2hlcmUpO1xuICAgICAgICAgICAgICAgIHZhciBmaWx0ZXIgPSBlbmNvZGVVUklDb21wb25lbnQoJycgKyBKU09OLnN0cmluZ2lmeShEb2MuZmlsdGVyRGF0YSkpO1xuICAgICAgICAgICAgICAgIHZhciBmdWxsVXJsID0gc3FsV2hlcmUgPyB1cmwgKyAnLycgKyBmaWx0ZXIgKyAnLycgKyBwYXJhbXMgOiB1cmwgKyAnLycgKyBmaWx0ZXI7XG4gICAgICAgICAgICAgICAgd2luZG93Lm9wZW4oZnVsbFVybCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIERvYy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgICAgIHdhcm5pbmc6ICdNaXR0ZSDDvGh0ZWdpIGtpcmplZCBsZWlkbnVkJywgLy8g0YHRgtGA0L7QutCwINC40LfQstC10YnQtdC90LjQuVxuICAgICAgICAgICAgICAgICAgICB3YXJuaW5nVHlwZTogJ25vdFZhbGlkJ1xuXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XSk7XG5cbiAgICByZXR1cm4gRG9jdW1lbnRzO1xufShSZWFjdC5QdXJlQ29tcG9uZW50KTtcblxubW9kdWxlLmV4cG9ydHMgPSBEb2N1bWVudHM7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9mcm9udGVuZC9kb2NzL3NhbGRvX2phX2thaXZlL2luZGV4LmpzeFxuLy8gbW9kdWxlIGlkID0gMzQ2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0Jzttb2R1bGUuZXhwb3J0cz17Z3JpZDp7bWFpblRhYmxlOnt3aWR0aDonMTAwJScsdGQ6e2JvcmRlcjonMXB4IHNvbGlkIGxpZ2h0R3JleScsZGlzcGxheTondGFibGUtY2VsbCcscGFkZGluZ0xlZnQ6JzVweCd9fSxoZWFkZXJUYWJsZTp7d2lkdGg6JzEwMCUnfSxncmlkQ29udGFpbmVyOnt3aWR0aDonMTAwJSd9fSxkb2M6e2hlaWdodDonMTAwJSd9LHRvdGFsOnt3aWR0aDonMTAwcHgnLG1hcmdpbjonMHB4IDBweCAwcHggNXB4J319O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vZnJvbnRlbmQvZG9jcy9zYWxkb19qYV9rYWl2ZS9zdHlsZXMuanNcbi8vIG1vZHVsZSBpZCA9IDM0N1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbnZhciBEb2N1bWVudFJlZ2lzdGVyID0gcmVxdWlyZSgnLi8uLi9kb2N1bWVudHMvZG9jdW1lbnRzLmpzeCcpO1xudmFyIEJ0bkdldFhtbCA9IHJlcXVpcmUoJy4vLi4vLi4vY29tcG9uZW50cy9idXR0b24tcmVnaXN0ZXIvYnV0dG9uLXRhc2svaW5kZXguanN4Jyk7XG52YXIgVG9vbGJhckNvbnRhaW5lciA9IHJlcXVpcmUoJy4vLi4vLi4vY29tcG9uZW50cy90b29sYmFyLWNvbnRhaW5lci90b29sYmFyLWNvbnRhaW5lci5qc3gnKTtcbnZhciBJbnB1dE51bWJlciA9IHJlcXVpcmUoJy4uLy4uL2NvbXBvbmVudHMvaW5wdXQtbnVtYmVyL2lucHV0LW51bWJlci5qc3gnKTtcbnZhciBJbnB1dFRleHQgPSByZXF1aXJlKCcuLi8uLi9jb21wb25lbnRzL2lucHV0LXRleHQvaW5wdXQtdGV4dC5qc3gnKTtcbnZhciBMb2FkaW5nID0gcmVxdWlyZSgnLi4vLi4vY29tcG9uZW50cy9sb2FkaW5nL2luZGV4LmpzeCcpO1xuXG52YXIgc3R5bGVzID0gcmVxdWlyZSgnLi9zdHlsZXMnKTtcbnZhciBET0NfVFlQRV9JRCA9ICdTQUxET19KQV9LQUlCRUFORE1JSyc7XG52YXIgVE9PTEJBUl9QUk9QUyA9IHtcbiAgICBhZGQ6IGZhbHNlLFxuICAgIGVkaXQ6IGZhbHNlLFxuICAgIGRlbGV0ZTogZmFsc2UsXG4gICAgc3RhcnQ6IGZhbHNlLFxuICAgIHByaW50OiB0cnVlLFxuICAgIGVtYWlsOiB0cnVlXG59O1xudmFyIERvY0NvbnRleHQgPSByZXF1aXJlKCcuLy4uLy4uL2RvYy1jb250ZXh0LmpzJyk7XG5cbi8qKlxyXG4gKiDQmtC70LDRgdGBINGA0LXQsNC70LjQt9GD0LXRgiDQtNC+0LrRg9C80LXQvdGCINGB0L/RgNCw0LLQvtGH0L3QuNC60LAg0L/RgNC40LfQvdCw0LrQvtCyLlxyXG4gKi9cblxudmFyIERvY3VtZW50cyA9IGZ1bmN0aW9uIChfUmVhY3QkUHVyZUNvbXBvbmVudCkge1xuICAgIF9pbmhlcml0cyhEb2N1bWVudHMsIF9SZWFjdCRQdXJlQ29tcG9uZW50KTtcblxuICAgIGZ1bmN0aW9uIERvY3VtZW50cyhwcm9wcykge1xuICAgICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgRG9jdW1lbnRzKTtcblxuICAgICAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoRG9jdW1lbnRzLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoRG9jdW1lbnRzKSkuY2FsbCh0aGlzLCBwcm9wcykpO1xuXG4gICAgICAgIF90aGlzLnJlbmRlcmVyID0gX3RoaXMucmVuZGVyZXIuYmluZChfdGhpcyk7XG4gICAgICAgIF90aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgYWxnX2RiOiAwLFxuICAgICAgICAgICAgYWxnX2tyOiAwLFxuICAgICAgICAgICAgZGI6IDAsXG4gICAgICAgICAgICBrcjogMCxcbiAgICAgICAgICAgIG1haGFrYW50dWQ6IDAsXG4gICAgICAgICAgICBsb3BwX2RiOiAwLFxuICAgICAgICAgICAgbG9wcF9rcjogMCxcbiAgICAgICAgICAgIHJlYWQ6IDAsXG4gICAgICAgICAgICBmaWx0cmlfcmVhZDogMFxuICAgICAgICB9O1xuXG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG5cbiAgICBfY3JlYXRlQ2xhc3MoRG9jdW1lbnRzLCBbe1xuICAgICAgICBrZXk6ICdyZW5kZXInLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KERvY3VtZW50UmVnaXN0ZXIsIHsgaW5pdERhdGE6IHRoaXMucHJvcHMuaW5pdERhdGEsXG4gICAgICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHRoaXMucHJvcHMuaGlzdG9yeSA/IHRoaXMucHJvcHMuaGlzdG9yeSA6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vZHVsZTogdGhpcy5wcm9wcy5tb2R1bGUsXG4gICAgICAgICAgICAgICAgICAgIHJlZjogJ3JlZ2lzdGVyJyxcbiAgICAgICAgICAgICAgICAgICAgdG9vbGJhclByb3BzOiBUT09MQkFSX1BST1BTLFxuICAgICAgICAgICAgICAgICAgICBkb2NUeXBlSWQ6IERPQ19UWVBFX0lELFxuICAgICAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLFxuICAgICAgICAgICAgICAgICAgICByZW5kZXI6IHRoaXMucmVuZGVyZXIgfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dFRleHQsIHsgdGl0bGU6ICdGaWx0cmkgYWxsIC8gcmVhZCBrb2trdTonLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiAncmVhZF9rb2trdScsXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlOiBzdHlsZXMudG90YWwsXG4gICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LXJlYWQnLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogU3RyaW5nKHRoaXMuc3RhdGUuZmlsdHJpX3JlYWQgKyAnLycgKyB0aGlzLnN0YXRlLnJlYWQpIHx8IDAsXG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVkOiB0cnVlIH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXROdW1iZXIsIHsgdGl0bGU6ICdBbGcuZGIga29ra3U6JyxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2FsZ19kYl9rb2trdScsXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlOiBzdHlsZXMudG90YWwsXG4gICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LXJlYWQnLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogTnVtYmVyKHRoaXMuc3RhdGUuYWxnX2RiKSB8fCAwLFxuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZDogdHJ1ZSB9KSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0TnVtYmVyLCB7IHRpdGxlOiAnQWxnLmtyIGtva2t1OicsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdhbGdfa3Jfa29ra3UnLFxuICAgICAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLnRvdGFsLFxuICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC1hcnZlc3RhdHVkJyxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IE51bWJlcih0aGlzLnN0YXRlLmFsZ19rcikgfHwgMCxcbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IHRydWUgfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dE51bWJlciwgeyB0aXRsZTogJ0RlZWJldCBrb2trdTonLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnZGJfa29ra3UnLFxuICAgICAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLnRvdGFsLFxuICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC1kYl9rb2trdScsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBOdW1iZXIodGhpcy5zdGF0ZS5kYikgfHwgMCxcbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IHRydWUgfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dE51bWJlciwgeyB0aXRsZTogJ0tyZWVkaXQga29ra3U6JyxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2tyX2tva2t1JyxcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcy50b3RhbCxcbiAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQta3Jfa29ra3UnLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogTnVtYmVyKHRoaXMuc3RhdGUua3IpIHx8IDAsXG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVkOiB0cnVlIH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXROdW1iZXIsIHsgdGl0bGU6ICdNYWhha2FudHVkIGtva2t1OicsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdtYWhha2FudHVkX2tva2t1JyxcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcy50b3RhbCxcbiAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQtbWFoYW5kbWluZScsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBOdW1iZXIodGhpcy5zdGF0ZS5tYWhha2FudHVkKSB8fCAwLFxuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZDogdHJ1ZSB9KSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0TnVtYmVyLCB7IHRpdGxlOiAnTFxceEY1cHAgZGIuIGtva2t1OicsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdsb3BwX2RiX2tva2t1JyxcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcy50b3RhbCxcbiAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQtbGFla3VtaXNlZCcsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBOdW1iZXIodGhpcy5zdGF0ZS5sb3BwX2RiKSB8fCAwLFxuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZDogdHJ1ZSB9KSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0TnVtYmVyLCB7IHRpdGxlOiAnTFxceEY1cHAga3IuIGtva2t1OicsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdrcl9rb2trdScsXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlOiBzdHlsZXMudG90YWwsXG4gICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LWtyX2tva2t1JyxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IE51bWJlcih0aGlzLnN0YXRlLmxvcHBfa3IpIHx8IDAsXG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVkOiB0cnVlIH0pXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgfSwge1xuICAgICAgICBrZXk6ICdyZW5kZXJlcicsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXJlcihzZWxmKSB7XG5cbiAgICAgICAgICAgIGlmICghc2VsZiB8fCAhc2VsZi5ncmlkRGF0YSB8fCAhc2VsZi5ncmlkRGF0YS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAvLyDQv9C+0LrQsCDQvdC10YIg0LTQsNC90L3Ri9GFXG4gICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgICAgIGFsZ19kYjogMCxcbiAgICAgICAgICAgICAgICAgICAgYWxnX2tyOiAwLFxuICAgICAgICAgICAgICAgICAgICBkYjogMCxcbiAgICAgICAgICAgICAgICAgICAga3I6IDAsXG4gICAgICAgICAgICAgICAgICAgIG1haGFrYW50dWQ6IDAsXG4gICAgICAgICAgICAgICAgICAgIGxvcHBfZGI6IDAsXG4gICAgICAgICAgICAgICAgICAgIGxvcHBfa3I6IDAsXG4gICAgICAgICAgICAgICAgICAgIHJlYWQ6IDAsXG4gICAgICAgICAgICAgICAgICAgIGZpbHRyaV9yZWFkOiAwXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHZhciBhbGdfZGIgPSBzZWxmLmdyaWREYXRhID8gc2VsZi5ncmlkRGF0YVswXS5hbGdfZGJfdG90YWwgOiAwO1xuICAgICAgICAgICAgdmFyIGFsZ19rciA9IHNlbGYuZ3JpZERhdGEgPyBzZWxmLmdyaWREYXRhWzBdLmFsZ19rcl90b3RhbCA6IDA7XG4gICAgICAgICAgICB2YXIgZGIgPSBzZWxmLmdyaWREYXRhID8gc2VsZi5ncmlkRGF0YVswXS5kYl90b3RhbCA6IDA7XG4gICAgICAgICAgICB2YXIga3IgPSBzZWxmLmdyaWREYXRhID8gc2VsZi5ncmlkRGF0YVswXS5rcl90b3RhbCA6IDA7XG4gICAgICAgICAgICB2YXIgbWFoYWthbnR1ZCA9IHNlbGYuZ3JpZERhdGEgPyBzZWxmLmdyaWREYXRhWzBdLm1haGFrYW50dWRfdG90YWwgOiAwO1xuICAgICAgICAgICAgdmFyIGxvcHBfZGIgPSBzZWxmLmdyaWREYXRhID8gc2VsZi5ncmlkRGF0YVswXS5sb3BwX2RiX3RvdGFsIDogMDtcbiAgICAgICAgICAgIHZhciBsb3BwX2tyID0gc2VsZi5ncmlkRGF0YSA/IHNlbGYuZ3JpZERhdGFbMF0ubG9wcF9rcl90b3RhbCA6IDA7XG5cbiAgICAgICAgICAgIHZhciByZWFkID0gc2VsZi5ncmlkRGF0YSAmJiBzZWxmLmdyaWREYXRhLmxlbmd0aCAmJiBzZWxmLmdyaWREYXRhWzBdLnJvd3NfdG90YWwgPyBzZWxmLmdyaWREYXRhWzBdLnJvd3NfdG90YWwgOiAwO1xuICAgICAgICAgICAgdmFyIGZpbHRyaV9yZWFkID0gc2VsZi5ncmlkRGF0YSAmJiBzZWxmLmdyaWREYXRhLmxlbmd0aCAmJiBzZWxmLmdyaWREYXRhWzBdLmZpbHRlcl90b3RhbCA/IHNlbGYuZ3JpZERhdGFbMF0uZmlsdGVyX3RvdGFsIDogMDtcblxuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgYWxnX2RiOiBhbGdfZGIsXG4gICAgICAgICAgICAgICAgYWxnX2tyOiBhbGdfa3IsXG4gICAgICAgICAgICAgICAgZGI6IGRiLFxuICAgICAgICAgICAgICAgIGtyOiBrcixcbiAgICAgICAgICAgICAgICBtYWhha2FudHVkOiBtYWhha2FudHVkLFxuICAgICAgICAgICAgICAgIGxvcHBfZGI6IGxvcHBfZGIsXG4gICAgICAgICAgICAgICAgbG9wcF9rcjogbG9wcF9rcixcbiAgICAgICAgICAgICAgICByZWFkOiByZWFkLFxuICAgICAgICAgICAgICAgIGZpbHRyaV9yZWFkOiBmaWx0cmlfcmVhZFxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgfV0pO1xuXG4gICAgcmV0dXJuIERvY3VtZW50cztcbn0oUmVhY3QuUHVyZUNvbXBvbmVudCk7XG5cbm1vZHVsZS5leHBvcnRzID0gRG9jdW1lbnRzO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vZnJvbnRlbmQvZG9jcy9zYWxkb19qYV9rYWliZWFuZG1pay9pbmRleC5qc3hcbi8vIG1vZHVsZSBpZCA9IDM0OFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7bW9kdWxlLmV4cG9ydHM9e2dyaWQ6e21haW5UYWJsZTp7d2lkdGg6JzEwMCUnLHRkOntib3JkZXI6JzFweCBzb2xpZCBsaWdodEdyZXknLGRpc3BsYXk6J3RhYmxlLWNlbGwnLHBhZGRpbmdMZWZ0Oic1cHgnfX0saGVhZGVyVGFibGU6e3dpZHRoOicxMDAlJ30sZ3JpZENvbnRhaW5lcjp7d2lkdGg6JzEwMCUnfX0sZG9jOntoZWlnaHQ6JzEwMCUnfSx0b3RhbDp7d2lkdGg6JzEwMHB4JyxtYXJnaW46JzBweCAwcHggMHB4IDVweCd9fTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2Zyb250ZW5kL2RvY3Mvc2FsZG9famFfa2FpYmVhbmRtaWsvc3R5bGVzLmpzXG4vLyBtb2R1bGUgaWQgPSAzNDlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG52YXIgRG9jdW1lbnRSZWdpc3RlciA9IHJlcXVpcmUoJy4vLi4vZG9jdW1lbnRzL2RvY3VtZW50cy5qc3gnKTtcbnZhciBCdG5HZXRYbWwgPSByZXF1aXJlKCcuLy4uLy4uL2NvbXBvbmVudHMvYnV0dG9uLXJlZ2lzdGVyL2J1dHRvbi10YXNrL2luZGV4LmpzeCcpO1xudmFyIFRvb2xiYXJDb250YWluZXIgPSByZXF1aXJlKCcuLy4uLy4uL2NvbXBvbmVudHMvdG9vbGJhci1jb250YWluZXIvdG9vbGJhci1jb250YWluZXIuanN4Jyk7XG52YXIgSW5wdXROdW1iZXIgPSByZXF1aXJlKCcuLi8uLi9jb21wb25lbnRzL2lucHV0LW51bWJlci9pbnB1dC1udW1iZXIuanN4Jyk7XG52YXIgSW5wdXRUZXh0ID0gcmVxdWlyZSgnLi4vLi4vY29tcG9uZW50cy9pbnB1dC10ZXh0L2lucHV0LXRleHQuanN4Jyk7XG52YXIgTG9hZGluZyA9IHJlcXVpcmUoJy4uLy4uL2NvbXBvbmVudHMvbG9hZGluZy9pbmRleC5qc3gnKTtcblxudmFyIHN0eWxlcyA9IHJlcXVpcmUoJy4vc3R5bGVzJyk7XG52YXIgRE9DX1RZUEVfSUQgPSAnS0FJVkVfQVJVQU5ORSc7XG52YXIgVE9PTEJBUl9QUk9QUyA9IHtcbiAgICBhZGQ6IGZhbHNlLFxuICAgIGVkaXQ6IGZhbHNlLFxuICAgIGRlbGV0ZTogZmFsc2UsXG4gICAgc3RhcnQ6IGZhbHNlLFxuICAgIHByaW50OiB0cnVlLFxuICAgIGVtYWlsOiB0cnVlXG59O1xudmFyIERvY0NvbnRleHQgPSByZXF1aXJlKCcuLy4uLy4uL2RvYy1jb250ZXh0LmpzJyk7XG5cbi8qKlxyXG4gKiDQmtC70LDRgdGBINGA0LXQsNC70LjQt9GD0LXRgiDQtNC+0LrRg9C80LXQvdGCINGB0L/RgNCw0LLQvtGH0L3QuNC60LAg0L/RgNC40LfQvdCw0LrQvtCyLlxyXG4gKi9cblxudmFyIERvY3VtZW50cyA9IGZ1bmN0aW9uIChfUmVhY3QkUHVyZUNvbXBvbmVudCkge1xuICAgIF9pbmhlcml0cyhEb2N1bWVudHMsIF9SZWFjdCRQdXJlQ29tcG9uZW50KTtcblxuICAgIGZ1bmN0aW9uIERvY3VtZW50cyhwcm9wcykge1xuICAgICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgRG9jdW1lbnRzKTtcblxuICAgICAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoRG9jdW1lbnRzLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoRG9jdW1lbnRzKSkuY2FsbCh0aGlzLCBwcm9wcykpO1xuXG4gICAgICAgIF90aGlzLm9uQ2xpY2tIYW5kbGVyID0gX3RoaXMub25DbGlja0hhbmRsZXIuYmluZChfdGhpcyk7XG4gICAgICAgIF90aGlzLnJlbmRlcmVyID0gX3RoaXMucmVuZGVyZXIuYmluZChfdGhpcyk7XG4gICAgICAgIF90aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgYWxnX3NhbGRvOiAwLFxuICAgICAgICAgICAgYXJ2ZXN0YXR1ZDogMCxcbiAgICAgICAgICAgIHNvb2R1c3R1czogMCxcbiAgICAgICAgICAgIGxhZWt1bWlzZWQ6IDAsXG4gICAgICAgICAgICBtYWhha2FudHVkOiAwLFxuICAgICAgICAgICAgdGFnYXN0dXNlZDogMCxcbiAgICAgICAgICAgIGphYWs6IDAsXG4gICAgICAgICAgICByZWFkOiAwLFxuICAgICAgICAgICAgZmlsdHJpX3JlYWQ6IDBcbiAgICAgICAgfTtcblxuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuXG4gICAgX2NyZWF0ZUNsYXNzKERvY3VtZW50cywgW3tcbiAgICAgICAga2V5OiAncmVuZGVyJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgIG51bGwsXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChEb2N1bWVudFJlZ2lzdGVyLCB7IGluaXREYXRhOiB0aGlzLnByb3BzLmluaXREYXRhLFxuICAgICAgICAgICAgICAgICAgICBoaXN0b3J5OiB0aGlzLnByb3BzLmhpc3RvcnkgPyB0aGlzLnByb3BzLmhpc3RvcnkgOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb2R1bGU6IHRoaXMucHJvcHMubW9kdWxlLFxuICAgICAgICAgICAgICAgICAgICByZWY6ICdyZWdpc3RlcicsXG4gICAgICAgICAgICAgICAgICAgIHRvb2xiYXJQcm9wczogVE9PTEJBUl9QUk9QUyxcbiAgICAgICAgICAgICAgICAgICAgZG9jVHlwZUlkOiBET0NfVFlQRV9JRCxcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcyxcbiAgICAgICAgICAgICAgICAgICAgcmVuZGVyOiB0aGlzLnJlbmRlcmVyIH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXRUZXh0LCB7IHRpdGxlOiAnRmlsdHJpIGFsbCAvIHJlYWQga29ra3U6JyxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3JlYWRfa29ra3UnLFxuICAgICAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLnRvdGFsLFxuICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC1yZWFkJyxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IFN0cmluZyh0aGlzLnN0YXRlLmZpbHRyaV9yZWFkICsgJy8nICsgdGhpcy5zdGF0ZS5yZWFkKSB8fCAwLFxuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZDogdHJ1ZSB9KSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0TnVtYmVyLCB7IHRpdGxlOiAnQWxnLnNhbGRvIGtva2t1OicsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdhbGdfc2FsZG9fa29ra3UnLFxuICAgICAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLnRvdGFsLFxuICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC1yZWFkJyxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IE51bWJlcih0aGlzLnN0YXRlLmFsZ19zYWxkbykgfHwgMCxcbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IHRydWUgfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dE51bWJlciwgeyB0aXRsZTogJ0FydmVzdGF0dWQgKHNoIFxceEZDbWJlcmFydmVzdHVzKSBrb2trdTonLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnYXJ2ZXN0YXR1ZF9rb2trdScsXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlOiBzdHlsZXMudG90YWwsXG4gICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LWFydmVzdGF0dWQnLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogTnVtYmVyKHRoaXMuc3RhdGUuYXJ2ZXN0YXR1ZCkgfHwgMCxcbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IHRydWUgfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dE51bWJlciwgeyB0aXRsZTogJ1Nvb2R1c3R1cyBrb2trdTonLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnc29vZHVzdHVzX2tva2t1JyxcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcy50b3RhbCxcbiAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQtc29vZHVzdHVzJyxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IE51bWJlcih0aGlzLnN0YXRlLnNvb2R1c3R1cykgfHwgMCxcbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IHRydWUgfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dE51bWJlciwgeyB0aXRsZTogJ0FydmVzdGF0dWQgamEgU29vZHVzdHVzIGtva2t1OicsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdhcnZfamFfc29vZHVzdHVzX2tva2t1JyxcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcy50b3RhbCxcbiAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQtYXJ2X2phX3Nvb2R1c3R1cycsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBOdW1iZXIodGhpcy5zdGF0ZS5hcnZfamFfc29vZHVzdHVzKSB8fCAwLFxuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZDogdHJ1ZSB9KSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0TnVtYmVyLCB7IHRpdGxlOiAnTGFla3VtaXNlZCBrb2trdTonLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnbGFla3VtaXNlZF9rb2trdScsXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlOiBzdHlsZXMudG90YWwsXG4gICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LWxhZWt1bWlzZWQnLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogTnVtYmVyKHRoaXMuc3RhdGUubGFla3VtaXNlZCkgfHwgMCxcbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IHRydWUgfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dE51bWJlciwgeyB0aXRsZTogJ01haGFrYW50dWQga29ra3U6JyxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ21haGFrYW50dWRfa29ra3UnLFxuICAgICAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLnRvdGFsLFxuICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC1tYWhha2FudHVkJyxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IE51bWJlcih0aGlzLnN0YXRlLm1haGFrYW50dWQpIHx8IDAsXG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVkOiB0cnVlIH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXROdW1iZXIsIHsgdGl0bGU6ICdUYWdhc3R1c2VkIGtva2t1OicsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICd0YWdhc3R1c2VkX2tva2t1JyxcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcy50b3RhbCxcbiAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQtdGFnYXN0dXNlZCcsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBOdW1iZXIodGhpcy5zdGF0ZS50YWdhc3R1c2VkKSB8fCAwLFxuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZDogdHJ1ZSB9KSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0TnVtYmVyLCB7IHRpdGxlOiAnSlxceEU0XFx4RTRrIGtva2t1OicsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdqYWFrX2tva2t1JyxcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcy50b3RhbCxcbiAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQtamFhaycsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBOdW1iZXIodGhpcy5zdGF0ZS5qYWFrKSB8fCAwLFxuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZDogdHJ1ZSB9KVxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgIH0sIHtcbiAgICAgICAga2V5OiAncmVuZGVyZXInLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyZXIoc2VsZikge1xuXG4gICAgICAgICAgICBpZiAoIXNlbGYgfHwgIXNlbGYuZ3JpZERhdGEgfHwgIXNlbGYuZ3JpZERhdGEubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgLy8g0L/QvtC60LAg0L3QtdGCINC00LDQvdC90YvRhVxuICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgICAgICBhbGdfc2FsZG86IDAsXG4gICAgICAgICAgICAgICAgICAgIGFydmVzdGF0dWQ6IDAsXG4gICAgICAgICAgICAgICAgICAgIHNvb2R1c3R1czogMCxcbiAgICAgICAgICAgICAgICAgICAgYXJ2X2phX3Nvb2R1c3R1czogMCxcbiAgICAgICAgICAgICAgICAgICAgbGFla3VtaXNlZDogMCxcbiAgICAgICAgICAgICAgICAgICAgbWFoYWthbnR1ZDogMCxcbiAgICAgICAgICAgICAgICAgICAgdGFnYXN0dXNlZDogMCxcbiAgICAgICAgICAgICAgICAgICAgamFhazogMCxcbiAgICAgICAgICAgICAgICAgICAgcmVhZDogMCxcbiAgICAgICAgICAgICAgICAgICAgZmlsdHJpX3JlYWQ6IDBcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIGFsZ19zYWxkbyA9IHNlbGYuZ3JpZERhdGEgPyBzZWxmLmdyaWREYXRhWzBdLmFsZ19zYWxkb190b3RhbCA6IDA7XG4gICAgICAgICAgICB2YXIgYXJ2ZXN0YXR1ZCA9IHNlbGYuZ3JpZERhdGEgPyBzZWxmLmdyaWREYXRhWzBdLmFydmVzdGF0dWRfdG90YWwgOiAwO1xuICAgICAgICAgICAgdmFyIHNvb2R1c3R1cyA9IHNlbGYuZ3JpZERhdGEgPyBzZWxmLmdyaWREYXRhWzBdLnNvb2R1c3R1c190b3RhbCA6IDA7XG4gICAgICAgICAgICB2YXIgYXJ2X2phX3Nvb2R1c3R1cyA9IHNlbGYuZ3JpZERhdGEgPyBzZWxmLmdyaWREYXRhWzBdLmFydl9qYV9zb29kdXN0dXNfdG90YWwgOiAwO1xuICAgICAgICAgICAgdmFyIGxhZWt1bWlzZWQgPSBzZWxmLmdyaWREYXRhID8gc2VsZi5ncmlkRGF0YVswXS5sYWVrdW1pc2VkX3RvdGFsIDogMDtcbiAgICAgICAgICAgIHZhciBtYWhha2FudHVkID0gc2VsZi5ncmlkRGF0YSA/IHNlbGYuZ3JpZERhdGFbMF0ubWFoYWthbnR1ZF90b3RhbCA6IDA7XG4gICAgICAgICAgICB2YXIgdGFnYXN0dXNlZCA9IHNlbGYuZ3JpZERhdGEgPyBzZWxmLmdyaWREYXRhWzBdLnRhZ2FzdHVzZWRfdG90YWwgOiAwO1xuICAgICAgICAgICAgdmFyIGphYWsgPSBzZWxmLmdyaWREYXRhID8gc2VsZi5ncmlkRGF0YVswXS5qYWFrX3RvdGFsIDogMDtcblxuICAgICAgICAgICAgdmFyIHJlYWQgPSBzZWxmLmdyaWREYXRhICYmIHNlbGYuZ3JpZERhdGEubGVuZ3RoICYmIHNlbGYuZ3JpZERhdGFbMF0ucm93c190b3RhbCA/IHNlbGYuZ3JpZERhdGFbMF0ucm93c190b3RhbCA6IDA7XG4gICAgICAgICAgICB2YXIgZmlsdHJpX3JlYWQgPSBzZWxmLmdyaWREYXRhICYmIHNlbGYuZ3JpZERhdGEubGVuZ3RoICYmIHNlbGYuZ3JpZERhdGFbMF0uZmlsdGVyX3RvdGFsID8gc2VsZi5ncmlkRGF0YVswXS5maWx0ZXJfdG90YWwgOiAwO1xuXG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICBhbGdfc2FsZG86IGFsZ19zYWxkbyxcbiAgICAgICAgICAgICAgICBhcnZlc3RhdHVkOiBhcnZlc3RhdHVkLFxuICAgICAgICAgICAgICAgIHNvb2R1c3R1czogc29vZHVzdHVzLFxuICAgICAgICAgICAgICAgIGFydl9qYV9zb29kdXN0dXM6IGFydl9qYV9zb29kdXN0dXMsXG4gICAgICAgICAgICAgICAgbGFla3VtaXNlZDogbGFla3VtaXNlZCxcbiAgICAgICAgICAgICAgICBtYWhha2FudHVkOiBtYWhha2FudHVkLFxuICAgICAgICAgICAgICAgIHRhZ2FzdHVzZWQ6IHRhZ2FzdHVzZWQsXG4gICAgICAgICAgICAgICAgamFhazogamFhayxcbiAgICAgICAgICAgICAgICByZWFkOiByZWFkLFxuICAgICAgICAgICAgICAgIGZpbHRyaV9yZWFkOiBmaWx0cmlfcmVhZFxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgIFRvb2xiYXJDb250YWluZXIsXG4gICAgICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEJ0bkdldFhtbCwge1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogJ1NhYW1hIENTViBmYWlsJyxcbiAgICAgICAgICAgICAgICAgICAgb25DbGljazogdGhpcy5vbkNsaWNrSGFuZGxlcixcbiAgICAgICAgICAgICAgICAgICAgc2hvd0RhdGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICByZWY6ICdidG4tZ2V0Q3N2J1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG5cbiAgICAgICAgLy9oYW5kbGVyINC00LvRjyDRgdC+0LHRi9GC0LjRjyDQutC70LjQuiDQvdCwINC60L3QvtC/0LrQsNGFINC/0LDQvdC10LvQuFxuXG4gICAgfSwge1xuICAgICAgICBrZXk6ICdvbkNsaWNrSGFuZGxlcicsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBvbkNsaWNrSGFuZGxlcigpIHtcbiAgICAgICAgICAgIHZhciBEb2MgPSB0aGlzLnJlZnNbJ3JlZ2lzdGVyJ107XG5cbiAgICAgICAgICAgIGlmIChEb2MuZ3JpZERhdGEgJiYgRG9jLmdyaWREYXRhLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIC8v0LTQtdC70LDQtdC8INGA0LXQtNCw0LnRgNC10LrRgiDQvdCwINC60L7QvdGE0LjQs9GD0YDQsNGG0LjRjlxuICAgICAgICAgICAgICAgIHZhciBzcWxXaGVyZSA9IERvYy5zdGF0ZS5zcWxXaGVyZTtcbiAgICAgICAgICAgICAgICB2YXIgdXJsID0gJy9yZXBvcnRzL2thaXZlX2FydWFubmUvJyArIERvY0NvbnRleHQudXNlckRhdGEudXVpZDtcbiAgICAgICAgICAgICAgICB2YXIgcGFyYW1zID0gZW5jb2RlVVJJQ29tcG9uZW50KCcnICsgc3FsV2hlcmUpO1xuICAgICAgICAgICAgICAgIHZhciBmaWx0ZXIgPSBlbmNvZGVVUklDb21wb25lbnQoJycgKyBKU09OLnN0cmluZ2lmeShEb2MuZmlsdGVyRGF0YSkpO1xuICAgICAgICAgICAgICAgIHZhciBmdWxsVXJsID0gc3FsV2hlcmUgPyB1cmwgKyAnLycgKyBmaWx0ZXIgKyAnLycgKyBwYXJhbXMgOiB1cmwgKyAnLycgKyBmaWx0ZXI7XG4gICAgICAgICAgICAgICAgd2luZG93Lm9wZW4oZnVsbFVybCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIERvYy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgICAgIHdhcm5pbmc6ICdNaXR0ZSDDvGh0ZWdpIGtpcmplZCBsZWlkbnVkJywgLy8g0YHRgtGA0L7QutCwINC40LfQstC10YnQtdC90LjQuVxuICAgICAgICAgICAgICAgICAgICB3YXJuaW5nVHlwZTogJ25vdFZhbGlkJ1xuXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XSk7XG5cbiAgICByZXR1cm4gRG9jdW1lbnRzO1xufShSZWFjdC5QdXJlQ29tcG9uZW50KTtcblxubW9kdWxlLmV4cG9ydHMgPSBEb2N1bWVudHM7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9mcm9udGVuZC9kb2NzL2thaXZlX2FydWFubmUvaW5kZXguanN4XG4vLyBtb2R1bGUgaWQgPSAzNTBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO21vZHVsZS5leHBvcnRzPXtncmlkOnttYWluVGFibGU6e3dpZHRoOicxMDAlJyx0ZDp7Ym9yZGVyOicxcHggc29saWQgbGlnaHRHcmV5JyxkaXNwbGF5Oid0YWJsZS1jZWxsJyxwYWRkaW5nTGVmdDonNXB4J319LGhlYWRlclRhYmxlOnt3aWR0aDonMTAwJSd9LGdyaWRDb250YWluZXI6e3dpZHRoOicxMDAlJ319LGRvYzp7aGVpZ2h0OicxMDAlJ30sdG90YWw6e3dpZHRoOicxMDBweCcsbWFyZ2luOicwcHggMHB4IDBweCA1cHgnfX07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9mcm9udGVuZC9kb2NzL2thaXZlX2FydWFubmUvc3R5bGVzLmpzXG4vLyBtb2R1bGUgaWQgPSAzNTFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG52YXIgRG9jdW1lbnRSZWdpc3RlciA9IHJlcXVpcmUoJy4vLi4vZG9jdW1lbnRzL2RvY3VtZW50cy5qc3gnKTtcbnZhciBCdG5HZXRYbWwgPSByZXF1aXJlKCcuLy4uLy4uL2NvbXBvbmVudHMvYnV0dG9uLXJlZ2lzdGVyL2J1dHRvbi10YXNrL2luZGV4LmpzeCcpO1xudmFyIFRvb2xiYXJDb250YWluZXIgPSByZXF1aXJlKCcuLy4uLy4uL2NvbXBvbmVudHMvdG9vbGJhci1jb250YWluZXIvdG9vbGJhci1jb250YWluZXIuanN4Jyk7XG52YXIgSW5wdXROdW1iZXIgPSByZXF1aXJlKCcuLi8uLi9jb21wb25lbnRzL2lucHV0LW51bWJlci9pbnB1dC1udW1iZXIuanN4Jyk7XG52YXIgSW5wdXRUZXh0ID0gcmVxdWlyZSgnLi4vLi4vY29tcG9uZW50cy9pbnB1dC10ZXh0L2lucHV0LXRleHQuanN4Jyk7XG52YXIgTG9hZGluZyA9IHJlcXVpcmUoJy4uLy4uL2NvbXBvbmVudHMvbG9hZGluZy9pbmRleC5qc3gnKTtcblxudmFyIHN0eWxlcyA9IHJlcXVpcmUoJy4vc3R5bGVzJyk7XG52YXIgRE9DX1RZUEVfSUQgPSAnS0FJVkVfQVJVQU5ORV9LT0tLVSc7XG52YXIgVE9PTEJBUl9QUk9QUyA9IHtcbiAgICBhZGQ6IGZhbHNlLFxuICAgIGVkaXQ6IGZhbHNlLFxuICAgIGRlbGV0ZTogZmFsc2UsXG4gICAgc3RhcnQ6IGZhbHNlLFxuICAgIHByaW50OiB0cnVlLFxuICAgIGVtYWlsOiB0cnVlXG59O1xudmFyIERvY0NvbnRleHQgPSByZXF1aXJlKCcuLy4uLy4uL2RvYy1jb250ZXh0LmpzJyk7XG5cbi8qKlxyXG4gKiDQmtC70LDRgdGBINGA0LXQsNC70LjQt9GD0LXRgiDQtNC+0LrRg9C80LXQvdGCINGB0L/RgNCw0LLQvtGH0L3QuNC60LAg0L/RgNC40LfQvdCw0LrQvtCyLlxyXG4gKi9cblxudmFyIERvY3VtZW50cyA9IGZ1bmN0aW9uIChfUmVhY3QkUHVyZUNvbXBvbmVudCkge1xuICAgIF9pbmhlcml0cyhEb2N1bWVudHMsIF9SZWFjdCRQdXJlQ29tcG9uZW50KTtcblxuICAgIGZ1bmN0aW9uIERvY3VtZW50cyhwcm9wcykge1xuICAgICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgRG9jdW1lbnRzKTtcblxuICAgICAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoRG9jdW1lbnRzLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoRG9jdW1lbnRzKSkuY2FsbCh0aGlzLCBwcm9wcykpO1xuXG4gICAgICAgIF90aGlzLm9uQ2xpY2tIYW5kbGVyID0gX3RoaXMub25DbGlja0hhbmRsZXIuYmluZChfdGhpcyk7XG4gICAgICAgIF90aGlzLnJlbmRlcmVyID0gX3RoaXMucmVuZGVyZXIuYmluZChfdGhpcyk7XG4gICAgICAgIF90aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgYWxnX3NhbGRvOiAwLFxuICAgICAgICAgICAgYXJ2ZXN0YXR1ZDogMCxcbiAgICAgICAgICAgIHNvb2R1c3R1czogMCxcbiAgICAgICAgICAgIGxhZWt1bWlzZWQ6IDAsXG4gICAgICAgICAgICBtYWhha2FudHVkOiAwLFxuICAgICAgICAgICAgdGFnYXN0dXNlZDogMCxcbiAgICAgICAgICAgIGphYWs6IDAsXG4gICAgICAgICAgICByZWFkOiAwLFxuICAgICAgICAgICAgZmlsdHJpX3JlYWQ6IDBcbiAgICAgICAgfTtcblxuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuXG4gICAgX2NyZWF0ZUNsYXNzKERvY3VtZW50cywgW3tcbiAgICAgICAga2V5OiAncmVuZGVyJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgIG51bGwsXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChEb2N1bWVudFJlZ2lzdGVyLCB7IGluaXREYXRhOiB0aGlzLnByb3BzLmluaXREYXRhLFxuICAgICAgICAgICAgICAgICAgICBoaXN0b3J5OiB0aGlzLnByb3BzLmhpc3RvcnkgPyB0aGlzLnByb3BzLmhpc3RvcnkgOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb2R1bGU6IHRoaXMucHJvcHMubW9kdWxlLFxuICAgICAgICAgICAgICAgICAgICByZWY6ICdyZWdpc3RlcicsXG4gICAgICAgICAgICAgICAgICAgIHRvb2xiYXJQcm9wczogVE9PTEJBUl9QUk9QUyxcbiAgICAgICAgICAgICAgICAgICAgZG9jVHlwZUlkOiBET0NfVFlQRV9JRCxcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcyxcbiAgICAgICAgICAgICAgICAgICAgcmVuZGVyOiB0aGlzLnJlbmRlcmVyIH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXRUZXh0LCB7IHRpdGxlOiAnRmlsdHJpIGFsbCAvIHJlYWQga29ra3U6JyxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3JlYWRfa29ra3UnLFxuICAgICAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLnRvdGFsLFxuICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC1yZWFkJyxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IFN0cmluZyh0aGlzLnN0YXRlLmZpbHRyaV9yZWFkICsgJy8nICsgdGhpcy5zdGF0ZS5yZWFkKSB8fCAwLFxuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZDogdHJ1ZSB9KSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0TnVtYmVyLCB7IHRpdGxlOiAnQWxnLnNhbGRvIGtva2t1OicsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdhbGdfc2FsZG9fa29ra3UnLFxuICAgICAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLnRvdGFsLFxuICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC1yZWFkJyxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IE51bWJlcih0aGlzLnN0YXRlLmFsZ19zYWxkbykgfHwgMCxcbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IHRydWUgfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dE51bWJlciwgeyB0aXRsZTogJ0FydmVzdGF0dWQgKHNoIFxceEZDbWJlcmFydmVzdHVzKSBrb2trdTonLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnYXJ2ZXN0YXR1ZF9rb2trdScsXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlOiBzdHlsZXMudG90YWwsXG4gICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LWFydmVzdGF0dWQnLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogTnVtYmVyKHRoaXMuc3RhdGUuYXJ2ZXN0YXR1ZCkgfHwgMCxcbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IHRydWUgfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dE51bWJlciwgeyB0aXRsZTogJ1Nvb2R1c3R1cyBrb2trdTonLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnc29vZHVzdHVzX2tva2t1JyxcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcy50b3RhbCxcbiAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQtc29vZHVzdHVzJyxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IE51bWJlcih0aGlzLnN0YXRlLnNvb2R1c3R1cykgfHwgMCxcbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IHRydWUgfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dE51bWJlciwgeyB0aXRsZTogJ0FydmVzdGF0dWQgamEgU29vZHVzdHVzIGtva2t1OicsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdhcnZfamFfc29vZHVzdHVzX2tva2t1JyxcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcy50b3RhbCxcbiAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQtYXJ2X2phX3Nvb2R1c3R1cycsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBOdW1iZXIodGhpcy5zdGF0ZS5hcnZfamFfc29vZHVzdHVzKSB8fCAwLFxuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZDogdHJ1ZSB9KSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0TnVtYmVyLCB7IHRpdGxlOiAnTGFla3VtaXNlZCBrb2trdTonLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnbGFla3VtaXNlZF9rb2trdScsXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlOiBzdHlsZXMudG90YWwsXG4gICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LWxhZWt1bWlzZWQnLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogTnVtYmVyKHRoaXMuc3RhdGUubGFla3VtaXNlZCkgfHwgMCxcbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IHRydWUgfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dE51bWJlciwgeyB0aXRsZTogJ01haGFrYW50dWQga29ra3U6JyxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ21haGFrYW50dWRfa29ra3UnLFxuICAgICAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLnRvdGFsLFxuICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC1tYWhhbmRtaW5lJyxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IE51bWJlcih0aGlzLnN0YXRlLm1haGFrYW50dWQpIHx8IDAsXG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVkOiB0cnVlIH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXROdW1iZXIsIHsgdGl0bGU6ICdUYWdhc3R1c2VkIGtva2t1OicsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICd0YWdhc3R1c2VkX2tva2t1JyxcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcy50b3RhbCxcbiAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQtdGFnYXN0dXNlZCcsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBOdW1iZXIodGhpcy5zdGF0ZS50YWdhc3R1c2VkKSB8fCAwLFxuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZDogdHJ1ZSB9KSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0TnVtYmVyLCB7IHRpdGxlOiAnSlxceEU0XFx4RTRrIGtva2t1OicsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdqYWFrX2tva2t1JyxcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcy50b3RhbCxcbiAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQtamFhaycsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBOdW1iZXIodGhpcy5zdGF0ZS5qYWFrKSB8fCAwLFxuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZDogdHJ1ZSB9KVxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgIH0sIHtcbiAgICAgICAga2V5OiAncmVuZGVyZXInLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyZXIoc2VsZikge1xuXG4gICAgICAgICAgICBpZiAoIXNlbGYgfHwgIXNlbGYuZ3JpZERhdGEgfHwgIXNlbGYuZ3JpZERhdGEubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgLy8g0L/QvtC60LAg0L3QtdGCINC00LDQvdC90YvRhVxuICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgICAgICBhbGdfc2FsZG86IDAsXG4gICAgICAgICAgICAgICAgICAgIGFydmVzdGF0dWQ6IDAsXG4gICAgICAgICAgICAgICAgICAgIHNvb2R1c3R1czogMCxcbiAgICAgICAgICAgICAgICAgICAgYXJ2X2phX3Nvb2R1c3R1czogMCxcbiAgICAgICAgICAgICAgICAgICAgbGFla3VtaXNlZDogMCxcbiAgICAgICAgICAgICAgICAgICAgbWFoYWthbnR1ZDogMCxcbiAgICAgICAgICAgICAgICAgICAgdGFnYXN0dXNlZDogMCxcbiAgICAgICAgICAgICAgICAgICAgamFhazogMCxcbiAgICAgICAgICAgICAgICAgICAgcmVhZDogMCxcbiAgICAgICAgICAgICAgICAgICAgZmlsdHJpX3JlYWQ6IDBcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIGFsZ19zYWxkbyA9IHNlbGYuZ3JpZERhdGEgPyBzZWxmLmdyaWREYXRhWzBdLmFsZ19zYWxkb190b3RhbCA6IDA7XG4gICAgICAgICAgICB2YXIgYXJ2ZXN0YXR1ZCA9IHNlbGYuZ3JpZERhdGEgPyBzZWxmLmdyaWREYXRhWzBdLmFydmVzdGF0dWRfdG90YWwgOiAwO1xuICAgICAgICAgICAgdmFyIHNvb2R1c3R1cyA9IHNlbGYuZ3JpZERhdGEgPyBzZWxmLmdyaWREYXRhWzBdLnNvb2R1c3R1c190b3RhbCA6IDA7XG4gICAgICAgICAgICB2YXIgYXJ2X2phX3Nvb2R1c3R1cyA9IHNlbGYuZ3JpZERhdGEgPyBzZWxmLmdyaWREYXRhWzBdLmFydl9qYV9zb29kdXN0dXNfdG90YWwgOiAwO1xuICAgICAgICAgICAgdmFyIGxhZWt1bWlzZWQgPSBzZWxmLmdyaWREYXRhID8gc2VsZi5ncmlkRGF0YVswXS5sYWVrdW1pc2VkX3RvdGFsIDogMDtcbiAgICAgICAgICAgIHZhciBtYWhha2FudHVkID0gc2VsZi5ncmlkRGF0YSA/IHNlbGYuZ3JpZERhdGFbMF0ubWFoYWthbnR1ZF90b3RhbCA6IDA7XG4gICAgICAgICAgICB2YXIgdGFnYXN0dXNlZCA9IHNlbGYuZ3JpZERhdGEgPyBzZWxmLmdyaWREYXRhWzBdLnRhZ2FzdHVzZWRfdG90YWwgOiAwO1xuICAgICAgICAgICAgdmFyIGphYWsgPSBzZWxmLmdyaWREYXRhID8gc2VsZi5ncmlkRGF0YVswXS5qYWFrX3RvdGFsIDogMDtcblxuICAgICAgICAgICAgdmFyIHJlYWQgPSBzZWxmLmdyaWREYXRhICYmIHNlbGYuZ3JpZERhdGEubGVuZ3RoICYmIHNlbGYuZ3JpZERhdGFbMF0ucm93c190b3RhbCA/IHNlbGYuZ3JpZERhdGFbMF0ucm93c190b3RhbCA6IDA7XG4gICAgICAgICAgICB2YXIgZmlsdHJpX3JlYWQgPSBzZWxmLmdyaWREYXRhICYmIHNlbGYuZ3JpZERhdGEubGVuZ3RoICYmIHNlbGYuZ3JpZERhdGFbMF0uZmlsdGVyX3RvdGFsID8gc2VsZi5ncmlkRGF0YVswXS5maWx0ZXJfdG90YWwgOiAwO1xuXG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICBhbGdfc2FsZG86IGFsZ19zYWxkbyxcbiAgICAgICAgICAgICAgICBhcnZlc3RhdHVkOiBhcnZlc3RhdHVkLFxuICAgICAgICAgICAgICAgIHNvb2R1c3R1czogc29vZHVzdHVzLFxuICAgICAgICAgICAgICAgIGFydl9qYV9zb29kdXN0dXM6IGFydl9qYV9zb29kdXN0dXMsXG4gICAgICAgICAgICAgICAgbGFla3VtaXNlZDogbGFla3VtaXNlZCxcbiAgICAgICAgICAgICAgICBtYWhha2FudHVkOiBtYWhha2FudHVkLFxuICAgICAgICAgICAgICAgIHRhZ2FzdHVzZWQ6IHRhZ2FzdHVzZWQsXG4gICAgICAgICAgICAgICAgamFhazogamFhayxcbiAgICAgICAgICAgICAgICByZWFkOiByZWFkLFxuICAgICAgICAgICAgICAgIGZpbHRyaV9yZWFkOiBmaWx0cmlfcmVhZFxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgIFRvb2xiYXJDb250YWluZXIsXG4gICAgICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEJ0bkdldFhtbCwge1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogJ1NhYW1hIENTViBmYWlsJyxcbiAgICAgICAgICAgICAgICAgICAgb25DbGljazogdGhpcy5vbkNsaWNrSGFuZGxlcixcbiAgICAgICAgICAgICAgICAgICAgc2hvd0RhdGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICByZWY6ICdidG4tZ2V0Q3N2J1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG5cbiAgICAgICAgLy9oYW5kbGVyINC00LvRjyDRgdC+0LHRi9GC0LjRjyDQutC70LjQuiDQvdCwINC60L3QvtC/0LrQsNGFINC/0LDQvdC10LvQuFxuXG4gICAgfSwge1xuICAgICAgICBrZXk6ICdvbkNsaWNrSGFuZGxlcicsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBvbkNsaWNrSGFuZGxlcigpIHtcbiAgICAgICAgICAgIHZhciBEb2MgPSB0aGlzLnJlZnNbJ3JlZ2lzdGVyJ107XG5cbiAgICAgICAgICAgIGlmIChEb2MuZ3JpZERhdGEgJiYgRG9jLmdyaWREYXRhLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIC8v0LTQtdC70LDQtdC8INGA0LXQtNCw0LnRgNC10LrRgiDQvdCwINC60L7QvdGE0LjQs9GD0YDQsNGG0LjRjlxuICAgICAgICAgICAgICAgIHZhciBzcWxXaGVyZSA9IERvYy5zdGF0ZS5zcWxXaGVyZTtcbiAgICAgICAgICAgICAgICB2YXIgdXJsID0gJy9yZXBvcnRzL3NhbGRvX2phX2thaXZlLycgKyBEb2NDb250ZXh0LnVzZXJEYXRhLnV1aWQ7XG4gICAgICAgICAgICAgICAgdmFyIHBhcmFtcyA9IGVuY29kZVVSSUNvbXBvbmVudCgnJyArIHNxbFdoZXJlKTtcbiAgICAgICAgICAgICAgICB2YXIgZmlsdGVyID0gZW5jb2RlVVJJQ29tcG9uZW50KCcnICsgSlNPTi5zdHJpbmdpZnkoRG9jLmZpbHRlckRhdGEpKTtcbiAgICAgICAgICAgICAgICB2YXIgZnVsbFVybCA9IHNxbFdoZXJlID8gdXJsICsgJy8nICsgZmlsdGVyICsgJy8nICsgcGFyYW1zIDogdXJsICsgJy8nICsgZmlsdGVyO1xuICAgICAgICAgICAgICAgIHdpbmRvdy5vcGVuKGZ1bGxVcmwpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBEb2Muc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgICAgICB3YXJuaW5nOiAnTWl0dGUgw7xodGVnaSBraXJqZWQgbGVpZG51ZCcsIC8vINGB0YLRgNC+0LrQsCDQuNC30LLQtdGJ0LXQvdC40LlcbiAgICAgICAgICAgICAgICAgICAgd2FybmluZ1R5cGU6ICdub3RWYWxpZCdcblxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfV0pO1xuXG4gICAgcmV0dXJuIERvY3VtZW50cztcbn0oUmVhY3QuUHVyZUNvbXBvbmVudCk7XG5cbm1vZHVsZS5leHBvcnRzID0gRG9jdW1lbnRzO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vZnJvbnRlbmQvZG9jcy9rYWl2ZV9hcnVhbm5lX2tva2t1L2luZGV4LmpzeFxuLy8gbW9kdWxlIGlkID0gMzUyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0Jzttb2R1bGUuZXhwb3J0cz17Z3JpZDp7bWFpblRhYmxlOnt3aWR0aDonMTAwJScsdGQ6e2JvcmRlcjonMXB4IHNvbGlkIGxpZ2h0R3JleScsZGlzcGxheTondGFibGUtY2VsbCcscGFkZGluZ0xlZnQ6JzVweCd9fSxoZWFkZXJUYWJsZTp7d2lkdGg6JzEwMCUnfSxncmlkQ29udGFpbmVyOnt3aWR0aDonMTAwJSd9fSxkb2M6e2hlaWdodDonMTAwJSd9LHRvdGFsOnt3aWR0aDonMTAwcHgnLG1hcmdpbjonMHB4IDBweCAwcHggNXB4J319O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vZnJvbnRlbmQvZG9jcy9rYWl2ZV9hcnVhbm5lX2tva2t1L3N0eWxlcy5qc1xuLy8gbW9kdWxlIGlkID0gMzUzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xudmFyIERvY3VtZW50UmVnaXN0ZXIgPSByZXF1aXJlKCcuLy4uL2RvY3VtZW50cy9kb2N1bWVudHMuanN4Jyk7XG52YXIgc3R5bGVzID0gcmVxdWlyZSgnLi9zdHlsZXMnKTtcbnZhciBET0NfVFlQRV9JRCA9ICdTRU5UX0RPQ1MnO1xudmFyIFRPT0xCQVJfUFJPUFMgPSB7XG4gICAgYWRkOiBmYWxzZSxcbiAgICBlZGl0OiBmYWxzZSxcbiAgICBkZWxldGU6IGZhbHNlLFxuICAgIHN0YXJ0OiBmYWxzZSxcbiAgICBwcmludDogdHJ1ZSxcbiAgICBlbWFpbDogdHJ1ZVxufTtcbi8qKlxyXG4gKiDQmtC70LDRgdGBINGA0LXQsNC70LjQt9GD0LXRgiDQtNC+0LrRg9C80LXQvdGCINGB0L/RgNCw0LLQvtGH0L3QuNC60LAg0L/RgNC40LfQvdCw0LrQvtCyLlxyXG4gKi9cblxudmFyIERvY3VtZW50cyA9IGZ1bmN0aW9uIChfUmVhY3QkUHVyZUNvbXBvbmVudCkge1xuICAgIF9pbmhlcml0cyhEb2N1bWVudHMsIF9SZWFjdCRQdXJlQ29tcG9uZW50KTtcblxuICAgIGZ1bmN0aW9uIERvY3VtZW50cyhwcm9wcykge1xuICAgICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgRG9jdW1lbnRzKTtcblxuICAgICAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoRG9jdW1lbnRzLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoRG9jdW1lbnRzKSkuY2FsbCh0aGlzLCBwcm9wcykpO1xuXG4gICAgICAgIF90aGlzLnJlbmRlcmVyID0gX3RoaXMucmVuZGVyZXIuYmluZChfdGhpcyk7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG5cbiAgICBfY3JlYXRlQ2xhc3MoRG9jdW1lbnRzLCBbe1xuICAgICAgICBrZXk6ICdyZW5kZXInLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRG9jdW1lbnRSZWdpc3RlciwgeyBpbml0RGF0YTogdGhpcy5wcm9wcy5pbml0RGF0YSxcbiAgICAgICAgICAgICAgICBoaXN0b3J5OiB0aGlzLnByb3BzLmhpc3RvcnkgPyB0aGlzLnByb3BzLmhpc3RvcnkgOiBudWxsLFxuICAgICAgICAgICAgICAgIG1vZHVsZTogdGhpcy5wcm9wcy5tb2R1bGUsXG4gICAgICAgICAgICAgICAgcmVmOiAncmVnaXN0ZXInLFxuICAgICAgICAgICAgICAgIHRvb2xiYXJQcm9wczogVE9PTEJBUl9QUk9QUyxcbiAgICAgICAgICAgICAgICBkb2NUeXBlSWQ6IERPQ19UWVBFX0lELFxuICAgICAgICAgICAgICAgIHN0eWxlOiBzdHlsZXMsXG4gICAgICAgICAgICAgICAgcmVuZGVyOiB0aGlzLnJlbmRlcmVyIH0pO1xuICAgICAgICB9XG4gICAgfSwge1xuICAgICAgICBrZXk6ICdyZW5kZXJlcicsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXJlcigpIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgfV0pO1xuXG4gICAgcmV0dXJuIERvY3VtZW50cztcbn0oUmVhY3QuUHVyZUNvbXBvbmVudCk7XG5cbm1vZHVsZS5leHBvcnRzID0gRG9jdW1lbnRzO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vZnJvbnRlbmQvZG9jcy9zZW50X2RvY3MvaW5kZXguanN4XG4vLyBtb2R1bGUgaWQgPSAzNTRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO21vZHVsZS5leHBvcnRzPXtncmlkOnttYWluVGFibGU6e3dpZHRoOicxMDAlJyx0ZDp7Ym9yZGVyOicxcHggc29saWQgbGlnaHRHcmV5JyxkaXNwbGF5Oid0YWJsZS1jZWxsJyxwYWRkaW5nTGVmdDonNXB4J319LGhlYWRlclRhYmxlOnt3aWR0aDonMTAwJSd9LGdyaWRDb250YWluZXI6e3dpZHRoOicxMDAlJ319fTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2Zyb250ZW5kL2RvY3Mvc2VudF9kb2NzL3N0eWxlcy5qc1xuLy8gbW9kdWxlIGlkID0gMzU1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xudmFyIERvY3VtZW50UmVnaXN0ZXIgPSByZXF1aXJlKCcuLy4uL2RvY3VtZW50cy9kb2N1bWVudHMuanN4Jyk7XG52YXIgQnRuR2V0WG1sID0gcmVxdWlyZSgnLi8uLi8uLi9jb21wb25lbnRzL2J1dHRvbi1yZWdpc3Rlci9idXR0b24tdGFzay9pbmRleC5qc3gnKTtcbnZhciBUb29sYmFyQ29udGFpbmVyID0gcmVxdWlyZSgnLi8uLi8uLi9jb21wb25lbnRzL3Rvb2xiYXItY29udGFpbmVyL3Rvb2xiYXItY29udGFpbmVyLmpzeCcpO1xudmFyIElucHV0TnVtYmVyID0gcmVxdWlyZSgnLi4vLi4vY29tcG9uZW50cy9pbnB1dC1udW1iZXIvaW5wdXQtbnVtYmVyLmpzeCcpO1xuXG52YXIgRG9jQ29udGV4dCA9IHJlcXVpcmUoJy4vLi4vLi4vZG9jLWNvbnRleHQuanMnKTtcblxudmFyIHN0eWxlcyA9IHJlcXVpcmUoJy4vc3R5bGVzJyk7XG5cbnZhciBET0NfVFlQRV9JRCA9ICdDSElMRF9BR0UnO1xudmFyIFRPT0xCQVJfUFJPUFMgPSB7XG4gICAgYWRkOiBmYWxzZSxcbiAgICBlZGl0OiBmYWxzZSxcbiAgICBkZWxldGU6IGZhbHNlLFxuICAgIHN0YXJ0OiBmYWxzZSxcbiAgICBwcmludDogdHJ1ZSxcbiAgICBlbWFpbDogdHJ1ZVxufTtcblxuLyoqXHJcbiAqINCa0LvQsNGB0YEg0YDQtdCw0LvQuNC30YPQtdGCINC00L7QutGD0LzQtdC90YIg0YHQv9GA0LDQstC+0YfQvdC40LrQsCDQv9GA0LjQt9C90LDQutC+0LIuXHJcbiAqL1xuXG52YXIgRG9jdW1lbnRzID0gZnVuY3Rpb24gKF9SZWFjdCRQdXJlQ29tcG9uZW50KSB7XG4gICAgX2luaGVyaXRzKERvY3VtZW50cywgX1JlYWN0JFB1cmVDb21wb25lbnQpO1xuXG4gICAgZnVuY3Rpb24gRG9jdW1lbnRzKHByb3BzKSB7XG4gICAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBEb2N1bWVudHMpO1xuXG4gICAgICAgIHZhciBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChEb2N1bWVudHMuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihEb2N1bWVudHMpKS5jYWxsKHRoaXMsIHByb3BzKSk7XG5cbiAgICAgICAgX3RoaXMub25DbGlja0hhbmRsZXIgPSBfdGhpcy5vbkNsaWNrSGFuZGxlci5iaW5kKF90aGlzKTtcbiAgICAgICAgX3RoaXMucmVuZGVyZXIgPSBfdGhpcy5yZW5kZXJlci5iaW5kKF90aGlzKTtcbiAgICAgICAgX3RoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICByZWFkOiAwXG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG5cbiAgICBfY3JlYXRlQ2xhc3MoRG9jdW1lbnRzLCBbe1xuICAgICAgICBrZXk6ICdyZW5kZXInLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KERvY3VtZW50UmVnaXN0ZXIsIHsgaW5pdERhdGE6IHRoaXMucHJvcHMuaW5pdERhdGEsXG4gICAgICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHRoaXMucHJvcHMuaGlzdG9yeSA/IHRoaXMucHJvcHMuaGlzdG9yeSA6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vZHVsZTogdGhpcy5wcm9wcy5tb2R1bGUsXG4gICAgICAgICAgICAgICAgICAgIHJlZjogJ3JlZ2lzdGVyJyxcbiAgICAgICAgICAgICAgICAgICAgdG9vbGJhclByb3BzOiBUT09MQkFSX1BST1BTLFxuICAgICAgICAgICAgICAgICAgICBkb2NUeXBlSWQ6IERPQ19UWVBFX0lELFxuICAgICAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLFxuICAgICAgICAgICAgICAgICAgICByZW5kZXI6IHRoaXMucmVuZGVyZXIgfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dE51bWJlciwgeyB0aXRsZTogJ1JlYWQga29ra3U6JyxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3JlYWRfa29ra3UnLFxuICAgICAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLnRvdGFsLFxuICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC1yZWFkJyxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IE51bWJlcih0aGlzLnN0YXRlLnJlYWQpIHx8IDAsXG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVkOiB0cnVlIH0pXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgfSwge1xuICAgICAgICBrZXk6ICdyZW5kZXJlcicsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXJlcihzZWxmKSB7XG4gICAgICAgICAgICBpZiAoc2VsZi5ncmlkRGF0YSAmJiBzZWxmLmdyaWREYXRhLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoeyByZWFkOiBzZWxmLmdyaWREYXRhLmxlbmd0aCB9KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgVG9vbGJhckNvbnRhaW5lcixcbiAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnRuR2V0WG1sLCB7XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiAnU2FhbWEgQ1NWIGZhaWwnLFxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrOiB0aGlzLm9uQ2xpY2tIYW5kbGVyLFxuICAgICAgICAgICAgICAgICAgICBzaG93RGF0ZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIHJlZjogJ2J0bi1nZUNzdidcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vaGFuZGxlciDQtNC70Y8g0YHQvtCx0YvRgtC40Y8g0LrQu9C40Log0L3QsCDQutC90L7Qv9C60LDRhSDQv9Cw0L3QtdC70LhcblxuICAgIH0sIHtcbiAgICAgICAga2V5OiAnb25DbGlja0hhbmRsZXInLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gb25DbGlja0hhbmRsZXIoKSB7XG4gICAgICAgICAgICB2YXIgRG9jID0gdGhpcy5yZWZzWydyZWdpc3RlciddO1xuXG4gICAgICAgICAgICBpZiAoRG9jLmdyaWREYXRhICYmIERvYy5ncmlkRGF0YS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAvL9C00LXQu9Cw0LXQvCDRgNC10LTQsNC50YDQtdC60YIg0L3QsCDQutC+0L3RhNC40LPRg9GA0LDRhtC40Y5cbiAgICAgICAgICAgICAgICB2YXIgc3FsV2hlcmUgPSBEb2Muc3RhdGUuc3FsV2hlcmU7XG4gICAgICAgICAgICAgICAgdmFyIHVybCA9ICcvcmVwb3J0cy9jaGlsZF9hZ2UvJyArIERvY0NvbnRleHQudXNlckRhdGEudXVpZDtcbiAgICAgICAgICAgICAgICB2YXIgcGFyYW1zID0gZW5jb2RlVVJJQ29tcG9uZW50KCcnICsgc3FsV2hlcmUpO1xuICAgICAgICAgICAgICAgIHZhciBmaWx0ZXIgPSBlbmNvZGVVUklDb21wb25lbnQoJycgKyBKU09OLnN0cmluZ2lmeShEb2MuZmlsdGVyRGF0YSkpO1xuICAgICAgICAgICAgICAgIHZhciBmdWxsVXJsID0gc3FsV2hlcmUgPyB1cmwgKyAnLycgKyBmaWx0ZXIgKyAnLycgKyBwYXJhbXMgOiB1cmwgKyAnLycgKyBmaWx0ZXI7XG4gICAgICAgICAgICAgICAgd2luZG93Lm9wZW4oZnVsbFVybCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIERvYy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgICAgIHdhcm5pbmc6ICdNaXR0ZSDDvGh0ZWdpIGtpcmplZCBsZWlkbnVkJywgLy8g0YHRgtGA0L7QutCwINC40LfQstC10YnQtdC90LjQuVxuICAgICAgICAgICAgICAgICAgICB3YXJuaW5nVHlwZTogJ25vdFZhbGlkJ1xuXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XSk7XG5cbiAgICByZXR1cm4gRG9jdW1lbnRzO1xufShSZWFjdC5QdXJlQ29tcG9uZW50KTtcblxubW9kdWxlLmV4cG9ydHMgPSBEb2N1bWVudHM7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9mcm9udGVuZC9kb2NzL2NoaWxkX2FnZS9pbmRleC5qc3hcbi8vIG1vZHVsZSBpZCA9IDM1NlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7bW9kdWxlLmV4cG9ydHM9e2dyaWQ6e21haW5UYWJsZTp7d2lkdGg6JzEwMCUnLHRkOntib3JkZXI6JzFweCBzb2xpZCBsaWdodEdyZXknLGRpc3BsYXk6J3RhYmxlLWNlbGwnLHBhZGRpbmdMZWZ0Oic1cHgnfX0saGVhZGVyVGFibGU6e3dpZHRoOicxMDAlJ30sZ3JpZENvbnRhaW5lcjp7d2lkdGg6JzEwMCUnfX0sdG90YWw6e3dpZHRoOidhdXRvJ30sZG9jOntoZWlnaHQ6JzEwMCUnfX07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9mcm9udGVuZC9kb2NzL2NoaWxkX2FnZS9zdHlsZXMuanNcbi8vIG1vZHVsZSBpZCA9IDM1N1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbnZhciBEb2N1bWVudFJlZ2lzdGVyID0gcmVxdWlyZSgnLi8uLi9kb2N1bWVudHMvZG9jdW1lbnRzLmpzeCcpO1xudmFyIElucHV0TnVtYmVyID0gcmVxdWlyZSgnLi4vLi4vY29tcG9uZW50cy9pbnB1dC1udW1iZXIvaW5wdXQtbnVtYmVyLmpzeCcpO1xudmFyIGdldFN1bSA9IHJlcXVpcmUoJy4vLi4vLi4vLi4vbGlicy9nZXRTdW0nKTtcblxudmFyIHN0eWxlcyA9IHJlcXVpcmUoJy4vc3R5bGVzJyk7XG52YXIgRE9DX1RZUEVfSUQgPSAnU09PRFVTVFVTRUQnO1xudmFyIFRPT0xCQVJfUFJPUFMgPSB7XG4gICAgYWRkOiBmYWxzZSxcbiAgICBlZGl0OiBmYWxzZSxcbiAgICBkZWxldGU6IGZhbHNlLFxuICAgIHN0YXJ0OiBmYWxzZSxcbiAgICBwcmludDogdHJ1ZSxcbiAgICBlbWFpbDogdHJ1ZVxufTtcblxuLyoqXHJcbiAqINCa0LvQsNGB0YEg0YDQtdCw0LvQuNC30YPQtdGCINC+0YLRh9C10YIg0LvRjNCz0L7RgtGLLlxyXG4gKi9cblxudmFyIERvY3VtZW50cyA9IGZ1bmN0aW9uIChfUmVhY3QkUHVyZUNvbXBvbmVudCkge1xuICAgIF9pbmhlcml0cyhEb2N1bWVudHMsIF9SZWFjdCRQdXJlQ29tcG9uZW50KTtcblxuICAgIGZ1bmN0aW9uIERvY3VtZW50cyhwcm9wcykge1xuICAgICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgRG9jdW1lbnRzKTtcblxuICAgICAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoRG9jdW1lbnRzLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoRG9jdW1lbnRzKSkuY2FsbCh0aGlzLCBwcm9wcykpO1xuXG4gICAgICAgIF90aGlzLnJlbmRlcmVyID0gX3RoaXMucmVuZGVyZXIuYmluZChfdGhpcyk7XG4gICAgICAgIF90aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgc29vZHVzdHVzOiAwLFxuICAgICAgICAgICAgcmVhZDogMFxuICAgICAgICB9O1xuXG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG5cbiAgICBfY3JlYXRlQ2xhc3MoRG9jdW1lbnRzLCBbe1xuICAgICAgICBrZXk6ICdyZW5kZXInLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KERvY3VtZW50UmVnaXN0ZXIsIHsgaW5pdERhdGE6IHRoaXMucHJvcHMuaW5pdERhdGEsXG4gICAgICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHRoaXMucHJvcHMuaGlzdG9yeSA/IHRoaXMucHJvcHMuaGlzdG9yeSA6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vZHVsZTogdGhpcy5wcm9wcy5tb2R1bGUsXG4gICAgICAgICAgICAgICAgICAgIHJlZjogJ3JlZ2lzdGVyJyxcbiAgICAgICAgICAgICAgICAgICAgdG9vbGJhclByb3BzOiBUT09MQkFSX1BST1BTLFxuICAgICAgICAgICAgICAgICAgICBkb2NUeXBlSWQ6IERPQ19UWVBFX0lELFxuICAgICAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLFxuICAgICAgICAgICAgICAgICAgICByZW5kZXI6IHRoaXMucmVuZGVyZXIgfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dE51bWJlciwgeyB0aXRsZTogJ1JlYWQga29ra3U6JyxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3JlYWRfa29ra3UnLFxuICAgICAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLnRvdGFsLFxuICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC1yZWFkJyxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IE51bWJlcih0aGlzLnN0YXRlLnJlYWQpIHx8IDAsXG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVkOiB0cnVlIH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXROdW1iZXIsIHsgdGl0bGU6ICdTb29kdXN0dXMga29ra3U6JyxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3Nvb2R1c3R1c19rb2trdScsXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlOiBzdHlsZXMudG90YWwsXG4gICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LXNvb2R1c3R1cycsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBOdW1iZXIodGhpcy5zdGF0ZS5zb29kdXN0dXMpLnRvRml4ZWQoMikgfHwgMCxcbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IHRydWUgfSlcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ3JlbmRlcmVyJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcmVyKHNlbGYpIHtcbiAgICAgICAgICAgIHZhciBzb29kdXN0dXMgPSBzZWxmLmdyaWREYXRhID8gZ2V0U3VtKHNlbGYuZ3JpZERhdGEsICdzb29kdXN0dXMnKSA6IDA7XG4gICAgICAgICAgICBpZiAoc29vZHVzdHVzKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IHNvb2R1c3R1czogc29vZHVzdHVzLCByZWFkOiBzZWxmLmdyaWREYXRhLmxlbmd0aCB9KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICB9XSk7XG5cbiAgICByZXR1cm4gRG9jdW1lbnRzO1xufShSZWFjdC5QdXJlQ29tcG9uZW50KTtcblxubW9kdWxlLmV4cG9ydHMgPSBEb2N1bWVudHM7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9mcm9udGVuZC9kb2NzL3Nvb2R1c3R1c2VkL2luZGV4LmpzeFxuLy8gbW9kdWxlIGlkID0gMzU4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0Jzttb2R1bGUuZXhwb3J0cz17Z3JpZDp7bWFpblRhYmxlOnt3aWR0aDonMTAwJScsdGQ6e2JvcmRlcjonMXB4IHNvbGlkIGxpZ2h0R3JleScsZGlzcGxheTondGFibGUtY2VsbCcscGFkZGluZ0xlZnQ6JzVweCd9fSxoZWFkZXJUYWJsZTp7d2lkdGg6JzEwMCUnfSxncmlkQ29udGFpbmVyOnt3aWR0aDonMTAwJSd9fSxkb2M6e2hlaWdodDonMTAwJSd9LHRvdGFsOnt3aWR0aDonYXV0byd9fTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2Zyb250ZW5kL2RvY3Mvc29vZHVzdHVzZWQvc3R5bGVzLmpzXG4vLyBtb2R1bGUgaWQgPSAzNTlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG52YXIgRG9jdW1lbnRSZWdpc3RlciA9IHJlcXVpcmUoJy4vLi4vZG9jdW1lbnRzL2RvY3VtZW50cy5qc3gnKTtcblxudmFyIHN0eWxlcyA9IHJlcXVpcmUoJy4vc3R5bGVzJyk7XG52YXIgRE9DX1RZUEVfSUQgPSAnU1RBVElTVElLQSc7XG52YXIgVE9PTEJBUl9QUk9QUyA9IHtcbiAgICBhZGQ6IGZhbHNlLFxuICAgIGVkaXQ6IGZhbHNlLFxuICAgIGRlbGV0ZTogZmFsc2UsXG4gICAgc3RhcnQ6IGZhbHNlLFxuICAgIHByaW50OiB0cnVlLFxuICAgIGVtYWlsOiB0cnVlXG59O1xuXG4vKipcclxuICog0JrQu9Cw0YHRgSDRgNC10LDQu9C40LfRg9C10YIg0L7RgtGH0LXRgiDQu9GM0LPQvtGC0YsuXHJcbiAqL1xuXG52YXIgRG9jdW1lbnRzID0gZnVuY3Rpb24gKF9SZWFjdCRQdXJlQ29tcG9uZW50KSB7XG4gICAgX2luaGVyaXRzKERvY3VtZW50cywgX1JlYWN0JFB1cmVDb21wb25lbnQpO1xuXG4gICAgZnVuY3Rpb24gRG9jdW1lbnRzKHByb3BzKSB7XG4gICAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBEb2N1bWVudHMpO1xuXG4gICAgICAgIHZhciBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChEb2N1bWVudHMuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihEb2N1bWVudHMpKS5jYWxsKHRoaXMsIHByb3BzKSk7XG5cbiAgICAgICAgX3RoaXMucmVuZGVyZXIgPSBfdGhpcy5yZW5kZXJlci5iaW5kKF90aGlzKTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cblxuICAgIF9jcmVhdGVDbGFzcyhEb2N1bWVudHMsIFt7XG4gICAgICAgIGtleTogJ3JlbmRlcicsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChEb2N1bWVudFJlZ2lzdGVyLCB7IGluaXREYXRhOiB0aGlzLnByb3BzLmluaXREYXRhLFxuICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHRoaXMucHJvcHMuaGlzdG9yeSA/IHRoaXMucHJvcHMuaGlzdG9yeSA6IG51bGwsXG4gICAgICAgICAgICAgICAgbW9kdWxlOiB0aGlzLnByb3BzLm1vZHVsZSxcbiAgICAgICAgICAgICAgICByZWY6ICdyZWdpc3RlcicsXG4gICAgICAgICAgICAgICAgdG9vbGJhclByb3BzOiBUT09MQkFSX1BST1BTLFxuICAgICAgICAgICAgICAgIGRvY1R5cGVJZDogRE9DX1RZUEVfSUQsXG4gICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcyxcbiAgICAgICAgICAgICAgICByZW5kZXI6IHRoaXMucmVuZGVyZXIgfSk7XG4gICAgICAgIH1cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ3JlbmRlcmVyJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcmVyKCkge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICB9XSk7XG5cbiAgICByZXR1cm4gRG9jdW1lbnRzO1xufShSZWFjdC5QdXJlQ29tcG9uZW50KTtcblxubW9kdWxlLmV4cG9ydHMgPSBEb2N1bWVudHM7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9mcm9udGVuZC9kb2NzL3N0YXRpc3Rpa2EvaW5kZXguanN4XG4vLyBtb2R1bGUgaWQgPSAzNjBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO21vZHVsZS5leHBvcnRzPXtncmlkOnttYWluVGFibGU6e3dpZHRoOicxMDAlJyx0ZDp7Ym9yZGVyOicxcHggc29saWQgbGlnaHRHcmV5JyxkaXNwbGF5Oid0YWJsZS1jZWxsJyxwYWRkaW5nTGVmdDonNXB4J319LGhlYWRlclRhYmxlOnt3aWR0aDonMTAwJSd9LGdyaWRDb250YWluZXI6e3dpZHRoOicxMDAlJ319fTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2Zyb250ZW5kL2RvY3Mvc3RhdGlzdGlrYS9zdHlsZXMuanNcbi8vIG1vZHVsZSBpZCA9IDM2MVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbnZhciBEb2N1bWVudFJlZ2lzdGVyID0gcmVxdWlyZSgnLi8uLi9kb2N1bWVudHMvZG9jdW1lbnRzLmpzeCcpO1xudmFyIEJ0bkdldFhtbCA9IHJlcXVpcmUoJy4vLi4vLi4vY29tcG9uZW50cy9idXR0b24tcmVnaXN0ZXIvYnV0dG9uLXRhc2svaW5kZXguanN4Jyk7XG52YXIgVG9vbGJhckNvbnRhaW5lciA9IHJlcXVpcmUoJy4vLi4vLi4vY29tcG9uZW50cy90b29sYmFyLWNvbnRhaW5lci90b29sYmFyLWNvbnRhaW5lci5qc3gnKTtcbnZhciBJbnB1dE51bWJlciA9IHJlcXVpcmUoJy4uLy4uL2NvbXBvbmVudHMvaW5wdXQtbnVtYmVyL2lucHV0LW51bWJlci5qc3gnKTtcbnZhciBnZXRTdW0gPSByZXF1aXJlKCcuLy4uLy4uLy4uL2xpYnMvZ2V0U3VtJyk7XG5cbnZhciBEb2NDb250ZXh0ID0gcmVxdWlyZSgnLi8uLi8uLi9kb2MtY29udGV4dC5qcycpO1xuXG52YXIgc3R5bGVzID0gcmVxdWlyZSgnLi9zdHlsZXMnKTtcblxudmFyIERPQ19UWVBFX0lEID0gJ0VCQVRPRU5BT0xJU0VEJztcbnZhciBUT09MQkFSX1BST1BTID0ge1xuICAgIGFkZDogZmFsc2UsXG4gICAgZWRpdDogZmFsc2UsXG4gICAgZGVsZXRlOiBmYWxzZSxcbiAgICBzdGFydDogZmFsc2UsXG4gICAgcHJpbnQ6IHRydWUsXG4gICAgZW1haWw6IHRydWVcbn07XG5cbi8qKlxyXG4gKiDQmtC70LDRgdGBINGA0LXQsNC70LjQt9GD0LXRgiDQtNC+0LrRg9C80LXQvdGCINGB0L/RgNCw0LLQvtGH0L3QuNC60LAg0L/RgNC40LfQvdCw0LrQvtCyLlxyXG4gKi9cblxudmFyIERvY3VtZW50cyA9IGZ1bmN0aW9uIChfUmVhY3QkUHVyZUNvbXBvbmVudCkge1xuICAgIF9pbmhlcml0cyhEb2N1bWVudHMsIF9SZWFjdCRQdXJlQ29tcG9uZW50KTtcblxuICAgIGZ1bmN0aW9uIERvY3VtZW50cyhwcm9wcykge1xuICAgICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgRG9jdW1lbnRzKTtcblxuICAgICAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoRG9jdW1lbnRzLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoRG9jdW1lbnRzKSkuY2FsbCh0aGlzLCBwcm9wcykpO1xuXG4gICAgICAgIF90aGlzLm9uQ2xpY2tIYW5kbGVyID0gX3RoaXMub25DbGlja0hhbmRsZXIuYmluZChfdGhpcyk7XG4gICAgICAgIF90aGlzLnJlbmRlcmVyID0gX3RoaXMucmVuZGVyZXIuYmluZChfdGhpcyk7XG4gICAgICAgIF90aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgbm91ZGVfNTA6IDAsXG4gICAgICAgICAgICBub3VkZV8xMDA6IDAsXG4gICAgICAgICAgICBqYWFrOiAwLFxuICAgICAgICAgICAgcmVhZDogMFxuICAgICAgICB9O1xuXG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG5cbiAgICBfY3JlYXRlQ2xhc3MoRG9jdW1lbnRzLCBbe1xuICAgICAgICBrZXk6ICdyZW5kZXInLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KERvY3VtZW50UmVnaXN0ZXIsIHsgaW5pdERhdGE6IHRoaXMucHJvcHMuaW5pdERhdGEsXG4gICAgICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHRoaXMucHJvcHMuaGlzdG9yeSA/IHRoaXMucHJvcHMuaGlzdG9yeSA6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vZHVsZTogdGhpcy5wcm9wcy5tb2R1bGUsXG4gICAgICAgICAgICAgICAgICAgIHJlZjogJ3JlZ2lzdGVyJyxcbiAgICAgICAgICAgICAgICAgICAgZG9jVHlwZUlkOiBET0NfVFlQRV9JRCxcbiAgICAgICAgICAgICAgICAgICAgdG9vbGJhclByb3BzOiBUT09MQkFSX1BST1BTLFxuICAgICAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLFxuICAgICAgICAgICAgICAgICAgICByZW5kZXI6IHRoaXMucmVuZGVyZXIgfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dE51bWJlciwgeyB0aXRsZTogJ1JlYWQga29ra3U6JyxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3JlYWRfa29ra3UnLFxuICAgICAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLnRvdGFsLFxuICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC1yZWFkJyxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IE51bWJlcih0aGlzLnN0YXRlLnJlYWQpIHx8IDAsXG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVkOiB0cnVlIH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXROdW1iZXIsIHsgdGl0bGU6ICdOXFx4RjV1ZGUgNTAlIGtva2t1OicsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdub3VkZV81MF9rb2trdScsXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlOiBzdHlsZXMudG90YWwsXG4gICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LW5vdWRlXzUwJyxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IE51bWJlcih0aGlzLnN0YXRlLm5vdWRlXzUwKS50b0ZpeGVkKDIpIHx8IDAsXG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVkOiB0cnVlIH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXROdW1iZXIsIHsgdGl0bGU6ICdOXFx4RjV1ZGUgMTAwJSBrb2trdTonLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnbm91ZGVfMTAwX2tva2t1JyxcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcy50b3RhbCxcbiAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQtbm91ZGVfMTAwJyxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IE51bWJlcih0aGlzLnN0YXRlLm5vdWRlXzEwMCkudG9GaXhlZCgyKSB8fCAwLFxuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZDogdHJ1ZSB9KSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0TnVtYmVyLCB7IHRpdGxlOiAnSlxceEU0XFx4RTRrIGtva2t1OicsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdqYWFrX2tva2t1JyxcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcy50b3RhbCxcbiAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQtamFhaycsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBOdW1iZXIodGhpcy5zdGF0ZS5qYWFrKS50b0ZpeGVkKDIpIHx8IDAsXG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVkOiB0cnVlIH0pXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgfSwge1xuICAgICAgICBrZXk6ICdyZW5kZXJlcicsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXJlcihzZWxmKSB7XG4gICAgICAgICAgICB2YXIgbm91ZGVfNTAgPSBzZWxmLmdyaWREYXRhID8gZ2V0U3VtKHNlbGYuZ3JpZERhdGEsICdub3VkZV81MCcpIDogMDtcbiAgICAgICAgICAgIHZhciBub3VkZV8xMDAgPSBzZWxmLmdyaWREYXRhID8gZ2V0U3VtKHNlbGYuZ3JpZERhdGEsICdub3VkZV8xMDAnKSA6IDA7XG4gICAgICAgICAgICB2YXIgamFhayA9IHNlbGYuZ3JpZERhdGEgPyBnZXRTdW0oc2VsZi5ncmlkRGF0YSwgJ2phYWsnKSA6IDA7XG4gICAgICAgICAgICBpZiAoc2VsZi5ncmlkRGF0YSkge1xuICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgICAgICBub3VkZV81MDogbm91ZGVfNTAsXG4gICAgICAgICAgICAgICAgICAgIG5vdWRlXzEwMDogbm91ZGVfMTAwLFxuICAgICAgICAgICAgICAgICAgICBqYWFrOiBqYWFrLFxuICAgICAgICAgICAgICAgICAgICByZWFkOiBzZWxmLmdyaWREYXRhLmxlbmd0aCB9KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgVG9vbGJhckNvbnRhaW5lcixcbiAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnRuR2V0WG1sLCB7XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiAnU2FhbWEgQ1NWIGZhaWwnLFxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrOiB0aGlzLm9uQ2xpY2tIYW5kbGVyLFxuICAgICAgICAgICAgICAgICAgICBzaG93RGF0ZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIHJlZjogJ2J0bi1nZUNzdidcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vaGFuZGxlciDQtNC70Y8g0YHQvtCx0YvRgtC40Y8g0LrQu9C40Log0L3QsCDQutC90L7Qv9C60LDRhSDQv9Cw0L3QtdC70LhcblxuICAgIH0sIHtcbiAgICAgICAga2V5OiAnb25DbGlja0hhbmRsZXInLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gb25DbGlja0hhbmRsZXIoKSB7XG4gICAgICAgICAgICB2YXIgRG9jID0gdGhpcy5yZWZzWydyZWdpc3RlciddO1xuXG4gICAgICAgICAgICBpZiAoRG9jLmdyaWREYXRhICYmIERvYy5ncmlkRGF0YS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAvL9C00LXQu9Cw0LXQvCDRgNC10LTQsNC50YDQtdC60YIg0L3QsCDQutC+0L3RhNC40LPRg9GA0LDRhtC40Y5cbiAgICAgICAgICAgICAgICB2YXIgc3FsV2hlcmUgPSBEb2Muc3RhdGUuc3FsV2hlcmU7XG4gICAgICAgICAgICAgICAgdmFyIHVybCA9ICcvcmVwb3J0cy9lYmF0b2VuYW9saXNlZC8nICsgRG9jQ29udGV4dC51c2VyRGF0YS51dWlkO1xuICAgICAgICAgICAgICAgIHZhciBwYXJhbXMgPSBlbmNvZGVVUklDb21wb25lbnQoJycgKyBzcWxXaGVyZSk7XG4gICAgICAgICAgICAgICAgdmFyIGZpbHRlciA9IGVuY29kZVVSSUNvbXBvbmVudCgnJyArIEpTT04uc3RyaW5naWZ5KERvYy5maWx0ZXJEYXRhKSk7XG4gICAgICAgICAgICAgICAgdmFyIGZ1bGxVcmwgPSBzcWxXaGVyZSA/IHVybCArICcvJyArIGZpbHRlciArICcvJyArIHBhcmFtcyA6IHVybCArICcvJyArIGZpbHRlcjtcbiAgICAgICAgICAgICAgICB3aW5kb3cub3BlbihmdWxsVXJsKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgRG9jLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICAgICAgd2FybmluZzogJ01pdHRlIMO8aHRlZ2kga2lyamVkIGxlaWRudWQnLCAvLyDRgdGC0YDQvtC60LAg0LjQt9Cy0LXRidC10L3QuNC5XG4gICAgICAgICAgICAgICAgICAgIHdhcm5pbmdUeXBlOiAnbm90VmFsaWQnXG5cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1dKTtcblxuICAgIHJldHVybiBEb2N1bWVudHM7XG59KFJlYWN0LlB1cmVDb21wb25lbnQpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IERvY3VtZW50cztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2Zyb250ZW5kL2RvY3MvZWJhdG9lbmFvbGlzZWQvaW5kZXguanN4XG4vLyBtb2R1bGUgaWQgPSAzNjJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO21vZHVsZS5leHBvcnRzPXtncmlkOnttYWluVGFibGU6e3dpZHRoOicxMDAlJyx0ZDp7Ym9yZGVyOicxcHggc29saWQgbGlnaHRHcmV5JyxkaXNwbGF5Oid0YWJsZS1jZWxsJyxwYWRkaW5nTGVmdDonNXB4J319LGhlYWRlclRhYmxlOnt3aWR0aDonMTAwJSd9LGdyaWRDb250YWluZXI6e3dpZHRoOicxMDAlJ319LHRvdGFsOnt3aWR0aDonYXV0byd9LGRvYzp7aGVpZ2h0OicxMDAlJ319O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vZnJvbnRlbmQvZG9jcy9lYmF0b2VuYW9saXNlZC9zdHlsZXMuanNcbi8vIG1vZHVsZSBpZCA9IDM2M1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbnZhciBEb2N1bWVudFJlZ2lzdGVyID0gcmVxdWlyZSgnLi8uLi9kb2N1bWVudHMvZG9jdW1lbnRzLmpzeCcpO1xudmFyIEJ0bkdldFhtbCA9IHJlcXVpcmUoJy4vLi4vLi4vY29tcG9uZW50cy9idXR0b24tcmVnaXN0ZXIvYnV0dG9uLXRhc2svaW5kZXguanN4Jyk7XG52YXIgVG9vbGJhckNvbnRhaW5lciA9IHJlcXVpcmUoJy4vLi4vLi4vY29tcG9uZW50cy90b29sYmFyLWNvbnRhaW5lci90b29sYmFyLWNvbnRhaW5lci5qc3gnKTtcbnZhciBEb2NDb250ZXh0ID0gcmVxdWlyZSgnLi8uLi8uLi9kb2MtY29udGV4dC5qcycpO1xudmFyIElucHV0TnVtYmVyID0gcmVxdWlyZSgnLi4vLi4vY29tcG9uZW50cy9pbnB1dC1udW1iZXIvaW5wdXQtbnVtYmVyLmpzeCcpO1xudmFyIElucHV0VGV4dCA9IHJlcXVpcmUoJy4uLy4uL2NvbXBvbmVudHMvaW5wdXQtdGV4dC9pbnB1dC10ZXh0LmpzeCcpO1xuXG52YXIgc3R5bGVzID0gcmVxdWlyZSgnLi9zdHlsZXMnKTtcbnZhciBET0NfVFlQRV9JRCA9ICdLT05EQVJWRSc7XG52YXIgVE9PTEJBUl9QUk9QUyA9IHtcbiAgICBhZGQ6IGZhbHNlLFxuICAgIGVkaXQ6IGZhbHNlLFxuICAgIGRlbGV0ZTogZmFsc2UsXG4gICAgc3RhcnQ6IGZhbHNlLFxuICAgIHByaW50OiB0cnVlLFxuICAgIGVtYWlsOiB0cnVlXG59O1xuLyoqXHJcbiAqINCa0LvQsNGB0YEg0YDQtdCw0LvQuNC30YPQtdGCINC00L7QutGD0LzQtdC90YIg0YHQv9GA0LDQstC+0YfQvdC40LrQsCDQv9GA0LjQt9C90LDQutC+0LIuXHJcbiAqL1xuXG52YXIgRG9jdW1lbnRzID0gZnVuY3Rpb24gKF9SZWFjdCRQdXJlQ29tcG9uZW50KSB7XG4gICAgX2luaGVyaXRzKERvY3VtZW50cywgX1JlYWN0JFB1cmVDb21wb25lbnQpO1xuXG4gICAgZnVuY3Rpb24gRG9jdW1lbnRzKHByb3BzKSB7XG4gICAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBEb2N1bWVudHMpO1xuXG4gICAgICAgIHZhciBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChEb2N1bWVudHMuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihEb2N1bWVudHMpKS5jYWxsKHRoaXMsIHByb3BzKSk7XG5cbiAgICAgICAgX3RoaXMub25DbGlja0hhbmRsZXIgPSBfdGhpcy5vbkNsaWNrSGFuZGxlci5iaW5kKF90aGlzKTtcbiAgICAgICAgX3RoaXMucmVuZGVyZXIgPSBfdGhpcy5yZW5kZXJlci5iaW5kKF90aGlzKTtcbiAgICAgICAgX3RoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBzdW1tYTogMCxcbiAgICAgICAgICAgIHJlYWQ6IDAsXG4gICAgICAgICAgICBmaWx0cmlfcmVhZDogMFxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuXG4gICAgX2NyZWF0ZUNsYXNzKERvY3VtZW50cywgW3tcbiAgICAgICAga2V5OiAncmVuZGVyJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgIG51bGwsXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChEb2N1bWVudFJlZ2lzdGVyLCB7IGluaXREYXRhOiB0aGlzLnByb3BzLmluaXREYXRhLFxuICAgICAgICAgICAgICAgICAgICBoaXN0b3J5OiB0aGlzLnByb3BzLmhpc3RvcnkgPyB0aGlzLnByb3BzLmhpc3RvcnkgOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb2R1bGU6IHRoaXMucHJvcHMubW9kdWxlLFxuICAgICAgICAgICAgICAgICAgICByZWY6ICdyZWdpc3RlcicsXG4gICAgICAgICAgICAgICAgICAgIHRvb2xiYXJQcm9wczogVE9PTEJBUl9QUk9QUyxcbiAgICAgICAgICAgICAgICAgICAgZG9jVHlwZUlkOiBET0NfVFlQRV9JRCxcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcyxcbiAgICAgICAgICAgICAgICAgICAgcmVuZGVyOiB0aGlzLnJlbmRlcmVyIH0pLFxuICAgICAgICAgICAgICAgICc7JyxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0VGV4dCwgeyB0aXRsZTogJ0ZpbHRyaSBhbGwgLyByZWFkIGtva2t1OicsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdyZWFkX2tva2t1JyxcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcy50b3RhbCxcbiAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQtcmVhZCcsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBTdHJpbmcodGhpcy5zdGF0ZS5maWx0cmlfcmVhZCArICcvJyArIHRoaXMuc3RhdGUucmVhZCkgfHwgMCxcbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IHRydWUgfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dE51bWJlciwgeyB0aXRsZTogJ1N1bW1hIGtva2t1OicsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdzdW1tYV9rb2trdScsXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlOiBzdHlsZXMudG90YWwsXG4gICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LXJlYWQnLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogTnVtYmVyKHRoaXMuc3RhdGUuc3VtbWEpIHx8IDAsXG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVkOiB0cnVlIH0pXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgfSwge1xuICAgICAgICBrZXk6ICdyZW5kZXJlcicsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXJlcihzZWxmKSB7XG4gICAgICAgICAgICBpZiAoIXNlbGYgfHwgIXNlbGYuZ3JpZERhdGEgfHwgIXNlbGYuZ3JpZERhdGEubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgLy8g0L/QvtC60LAg0L3QtdGCINC00LDQvdC90YvRhVxuICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgICAgICBzdW1tYTogMCxcbiAgICAgICAgICAgICAgICAgICAgcmVhZDogMCxcbiAgICAgICAgICAgICAgICAgICAgZmlsdHJpX3JlYWQ6IDBcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIHN1bW1hID0gc2VsZi5ncmlkRGF0YSA/IHNlbGYuZ3JpZERhdGFbMF0uc3VtbWFfdG90YWwgOiAwO1xuXG4gICAgICAgICAgICB2YXIgcmVhZCA9IHNlbGYuZ3JpZERhdGEgJiYgc2VsZi5ncmlkRGF0YS5sZW5ndGggJiYgc2VsZi5ncmlkRGF0YVswXS5yb3dzX3RvdGFsID8gc2VsZi5ncmlkRGF0YVswXS5yb3dzX3RvdGFsIDogMDtcbiAgICAgICAgICAgIHZhciBmaWx0cmlfcmVhZCA9IHNlbGYuZ3JpZERhdGEgJiYgc2VsZi5ncmlkRGF0YS5sZW5ndGggJiYgc2VsZi5ncmlkRGF0YVswXS5maWx0ZXJfdG90YWwgPyBzZWxmLmdyaWREYXRhWzBdLmZpbHRlcl90b3RhbCA6IDA7XG5cbiAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgIHN1bW1hOiBzdW1tYSxcbiAgICAgICAgICAgICAgICByZWFkOiByZWFkLFxuICAgICAgICAgICAgICAgIGZpbHRyaV9yZWFkOiBmaWx0cmlfcmVhZFxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgIFRvb2xiYXJDb250YWluZXIsXG4gICAgICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEJ0bkdldFhtbCwge1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogJ1NhYW1hIENTViBmYWlsJyxcbiAgICAgICAgICAgICAgICAgICAgb25DbGljazogdGhpcy5vbkNsaWNrSGFuZGxlcixcbiAgICAgICAgICAgICAgICAgICAgc2hvd0RhdGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICByZWY6ICdidG4tZ2VDc3YnXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cblxuICAgICAgICAvL2hhbmRsZXIg0LTQu9GPINGB0L7QsdGL0YLQuNGPINC60LvQuNC6INC90LAg0LrQvdC+0L/QutCw0YUg0L/QsNC90LXQu9C4XG5cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ29uQ2xpY2tIYW5kbGVyJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIG9uQ2xpY2tIYW5kbGVyKCkge1xuICAgICAgICAgICAgdmFyIERvYyA9IHRoaXMucmVmc1sncmVnaXN0ZXInXTtcblxuICAgICAgICAgICAgaWYgKERvYy5ncmlkRGF0YSAmJiBEb2MuZ3JpZERhdGEubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgLy/QtNC10LvQsNC10Lwg0YDQtdC00LDQudGA0LXQutGCINC90LAg0LrQvtC90YTQuNCz0YPRgNCw0YbQuNGOXG4gICAgICAgICAgICAgICAgdmFyIHNxbFdoZXJlID0gRG9jLnN0YXRlLnNxbFdoZXJlO1xuICAgICAgICAgICAgICAgIHZhciB1cmwgPSAnL3JlcG9ydHMva29uZGFydmUvJyArIERvY0NvbnRleHQudXNlckRhdGEudXVpZDtcbiAgICAgICAgICAgICAgICB2YXIgcGFyYW1zID0gZW5jb2RlVVJJQ29tcG9uZW50KCcnICsgc3FsV2hlcmUpO1xuICAgICAgICAgICAgICAgIHZhciBmaWx0ZXIgPSBlbmNvZGVVUklDb21wb25lbnQoJycgKyBKU09OLnN0cmluZ2lmeShEb2MuZmlsdGVyRGF0YSkpO1xuICAgICAgICAgICAgICAgIHZhciBmdWxsVXJsID0gc3FsV2hlcmUgPyB1cmwgKyAnLycgKyBmaWx0ZXIgKyAnLycgKyBwYXJhbXMgOiB1cmwgKyAnLycgKyBmaWx0ZXI7XG4gICAgICAgICAgICAgICAgd2luZG93Lm9wZW4oZnVsbFVybCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIERvYy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgICAgIHdhcm5pbmc6ICdNaXR0ZSDDvGh0ZWdpIGtpcmplZCBsZWlkbnVkJywgLy8g0YHRgtGA0L7QutCwINC40LfQstC10YnQtdC90LjQuVxuICAgICAgICAgICAgICAgICAgICB3YXJuaW5nVHlwZTogJ25vdFZhbGlkJ1xuXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XSk7XG5cbiAgICByZXR1cm4gRG9jdW1lbnRzO1xufShSZWFjdC5QdXJlQ29tcG9uZW50KTtcblxubW9kdWxlLmV4cG9ydHMgPSBEb2N1bWVudHM7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9mcm9udGVuZC9kb2NzL2tvbmRhcnZlL2luZGV4LmpzeFxuLy8gbW9kdWxlIGlkID0gMzY0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0Jzttb2R1bGUuZXhwb3J0cz17Z3JpZDp7bWFpblRhYmxlOnt3aWR0aDonMTAwJScsdGQ6e2JvcmRlcjonMXB4IHNvbGlkIGxpZ2h0R3JleScsZGlzcGxheTondGFibGUtY2VsbCcscGFkZGluZ0xlZnQ6JzVweCd9fSxoZWFkZXJUYWJsZTp7d2lkdGg6JzEwMCUnfSxncmlkQ29udGFpbmVyOnt3aWR0aDonMTAwJSd9fSx0b3RhbDp7d2lkdGg6J2F1dG8nfX07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9mcm9udGVuZC9kb2NzL2tvbmRhcnZlL3N0eWxlcy5qc1xuLy8gbW9kdWxlIGlkID0gMzY1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xudmFyIERvY3VtZW50UmVnaXN0ZXIgPSByZXF1aXJlKCcuLy4uL2RvY3VtZW50cy9kb2N1bWVudHMuanN4Jyk7XG52YXIgSW5wdXROdW1iZXIgPSByZXF1aXJlKCcuLi8uLi9jb21wb25lbnRzL2lucHV0LW51bWJlci9pbnB1dC1udW1iZXIuanN4Jyk7XG52YXIgZ2V0U3VtID0gcmVxdWlyZSgnLi8uLi8uLi8uLi9saWJzL2dldFN1bScpO1xuXG52YXIgc3R5bGVzID0gcmVxdWlyZSgnLi9zdHlsZXMnKTtcblxudmFyIERPQ19UWVBFX0lEID0gJ0FBU1RBX05BSVRBSkFEJztcbnZhciBUT09MQkFSX1BST1BTID0ge1xuICAgICAgICAgICAgIGFkZDogZmFsc2UsXG4gICAgICAgICAgICAgZWRpdDogZmFsc2UsXG4gICAgICAgICAgICAgZGVsZXRlOiBmYWxzZSxcbiAgICAgICAgICAgICBzdGFydDogZmFsc2UsXG4gICAgICAgICAgICAgcHJpbnQ6IHRydWUsXG4gICAgICAgICAgICAgZW1haWw6IHRydWVcbn07XG5cbi8qKlxyXG4gKiDQmtC70LDRgdGBINGA0LXQsNC70LjQt9GD0LXRgiDQtNC+0LrRg9C80LXQvdGCINGB0L/RgNCw0LLQvtGH0L3QuNC60LAg0L/RgNC40LfQvdCw0LrQvtCyLlxyXG4gKi9cblxudmFyIERvY3VtZW50cyA9IGZ1bmN0aW9uIChfUmVhY3QkUHVyZUNvbXBvbmVudCkge1xuICAgICAgICAgICAgIF9pbmhlcml0cyhEb2N1bWVudHMsIF9SZWFjdCRQdXJlQ29tcG9uZW50KTtcblxuICAgICAgICAgICAgIGZ1bmN0aW9uIERvY3VtZW50cyhwcm9wcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgRG9jdW1lbnRzKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoRG9jdW1lbnRzLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoRG9jdW1lbnRzKSkuY2FsbCh0aGlzLCBwcm9wcykpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzLnJlbmRlcmVyID0gX3RoaXMucmVuZGVyZXIuYmluZChfdGhpcyk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBqYWFudWFyOiAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmVlYnJ1YXI6IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXJ0czogMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFwcmlpbDogMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1haTogMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGp1dW5pOiAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAganV1bGk6IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdWd1c3Q6IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXB0ZW1iZXI6IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBva3Rvb2JlcjogMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vdmVtYmVyOiAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGV0c2VtYmVyOiAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZDogMFxuICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcztcbiAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICBfY3JlYXRlQ2xhc3MoRG9jdW1lbnRzLCBbe1xuICAgICAgICAgICAgICAgICAgICAgICAgICBrZXk6ICdyZW5kZXInLFxuICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KERvY3VtZW50UmVnaXN0ZXIsIHsgaW5pdERhdGE6IHRoaXMucHJvcHMuaW5pdERhdGEsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHRoaXMucHJvcHMuaGlzdG9yeSA/IHRoaXMucHJvcHMuaGlzdG9yeSA6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZHVsZTogdGhpcy5wcm9wcy5tb2R1bGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ3JlZ2lzdGVyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9vbGJhclByb3BzOiBUT09MQkFSX1BST1BTLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2NUeXBlSWQ6IERPQ19UWVBFX0lELFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZW5kZXI6IHRoaXMucmVuZGVyZXIgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dE51bWJlciwgeyB0aXRsZTogJ1JlYWQga29ra3U6JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3JlYWRfa29ra3UnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLnRvdGFsLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC1yZWFkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IE51bWJlcih0aGlzLnN0YXRlLnJlYWQpIHx8IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc2FibGVkOiB0cnVlIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXROdW1iZXIsIHsgdGl0bGU6ICdKYWFudWFyIGtva2t1OicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdqYWFudWFyX2tva2t1JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcy50b3RhbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQtamFhbnVhcicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBOdW1iZXIodGhpcy5zdGF0ZS5qYWFudWFyKS50b0ZpeGVkKDIpIHx8IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc2FibGVkOiB0cnVlIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXROdW1iZXIsIHsgdGl0bGU6ICdWZWVicnVhciBrb2trdTonLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAndmVlYnJ1YXJfa29ra3UnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLnRvdGFsLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC12ZWVicnVhcicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBOdW1iZXIodGhpcy5zdGF0ZS52ZWVicnVhcikudG9GaXhlZCgyKSB8fCAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZDogdHJ1ZSB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0TnVtYmVyLCB7IHRpdGxlOiAnTVxceEU0cnRzIGtva2t1OicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdtYXJ0c19rb2trdScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOiBzdHlsZXMudG90YWwsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LW1hcnRzJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IE51bWJlcih0aGlzLnN0YXRlLm1hcnRzKS50b0ZpeGVkKDIpIHx8IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc2FibGVkOiB0cnVlIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXROdW1iZXIsIHsgdGl0bGU6ICdBcHJpaWwga29ra3U6JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2FwcmlpbF9rb2trdScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOiBzdHlsZXMudG90YWwsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LWFwcmlpbCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBOdW1iZXIodGhpcy5zdGF0ZS5hcHJpaWwpLnRvRml4ZWQoMikgfHwgMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IHRydWUgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dE51bWJlciwgeyB0aXRsZTogJ01haSBrb2trdTonLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnbWFpX2tva2t1JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcy50b3RhbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQtbWFpJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IE51bWJlcih0aGlzLnN0YXRlLm1haSkudG9GaXhlZCgyKSB8fCAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZDogdHJ1ZSB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0TnVtYmVyLCB7IHRpdGxlOiAnSnV1bmkga29ra3U6JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2p1dW5pX2tva2t1JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcy50b3RhbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQtanV1bmknLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogTnVtYmVyKHRoaXMuc3RhdGUuanV1bmkpLnRvRml4ZWQoMikgfHwgMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IHRydWUgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dE51bWJlciwgeyB0aXRsZTogJ0p1dWxpIGtva2t1OicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdqdXVsaV9rb2trdScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOiBzdHlsZXMudG90YWwsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LWp1dWxpJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IE51bWJlcih0aGlzLnN0YXRlLmp1dWxpKS50b0ZpeGVkKDIpIHx8IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc2FibGVkOiB0cnVlIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXROdW1iZXIsIHsgdGl0bGU6ICdBdWd1c3Qga29ra3U6JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2F1Z3VzdF9rb2trdScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOiBzdHlsZXMudG90YWwsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LWF1Z3VzdCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBOdW1iZXIodGhpcy5zdGF0ZS5hdWd1c3QpLnRvRml4ZWQoMikgfHwgMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IHRydWUgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dE51bWJlciwgeyB0aXRsZTogJ1NlcHRlbWJlciBrb2trdTonLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnc2VwdGVtYmVyX2tva2t1JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcy50b3RhbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQtc2VwdGVtYmVyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IE51bWJlcih0aGlzLnN0YXRlLnNlcHRlbWJlcikudG9GaXhlZCgyKSB8fCAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZDogdHJ1ZSB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0TnVtYmVyLCB7IHRpdGxlOiAnT2t0b29iZXIga29ra3U6JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ29rdG9vYmVyX2tva2t1JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcy50b3RhbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQtb2t0b29iZXInLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogTnVtYmVyKHRoaXMuc3RhdGUub2t0b29iZXIpLnRvRml4ZWQoMikgfHwgMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IHRydWUgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dE51bWJlciwgeyB0aXRsZTogJ05vdmVtYmVyIGtva2t1OicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdub3ZlbWJlcl9rb2trdScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOiBzdHlsZXMudG90YWwsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LW5vdmVtYmVyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IE51bWJlcih0aGlzLnN0YXRlLm5vdmVtYmVyKS50b0ZpeGVkKDIpIHx8IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc2FibGVkOiB0cnVlIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXROdW1iZXIsIHsgdGl0bGU6ICdEZXRzZW1iZXIga29ra3U6JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2RldHNlbWJlcl9rb2trdScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOiBzdHlsZXMudG90YWwsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LWRldHNlbWJlcicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBOdW1iZXIodGhpcy5zdGF0ZS5kZXRzZW1iZXIpLnRvRml4ZWQoMikgfHwgMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IHRydWUgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGtleTogJ3JlbmRlcmVyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcmVyKHNlbGYpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBqYWFudWFyID0gc2VsZi5ncmlkRGF0YSA/IGdldFN1bShzZWxmLmdyaWREYXRhLCAnamFhbnVhcicpIDogMDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB2ZWVicnVhciA9IHNlbGYuZ3JpZERhdGEgPyBnZXRTdW0oc2VsZi5ncmlkRGF0YSwgJ3ZlZWJydWFyJykgOiAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG1hcnRzID0gc2VsZi5ncmlkRGF0YSA/IGdldFN1bShzZWxmLmdyaWREYXRhLCAnbWFydHMnKSA6IDA7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgYXByaWlsID0gc2VsZi5ncmlkRGF0YSA/IGdldFN1bShzZWxmLmdyaWREYXRhLCAnYXByaWlsJykgOiAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG1haSA9IHNlbGYuZ3JpZERhdGEgPyBnZXRTdW0oc2VsZi5ncmlkRGF0YSwgJ21haScpIDogMDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBqdXVuaSA9IHNlbGYuZ3JpZERhdGEgPyBnZXRTdW0oc2VsZi5ncmlkRGF0YSwgJ2p1dW5pJykgOiAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGp1dWxpID0gc2VsZi5ncmlkRGF0YSA/IGdldFN1bShzZWxmLmdyaWREYXRhLCAnanV1bGknKSA6IDA7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgYXVndXN0ID0gc2VsZi5ncmlkRGF0YSA/IGdldFN1bShzZWxmLmdyaWREYXRhLCAnYXVndXN0JykgOiAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHNlcHRlbWJlciA9IHNlbGYuZ3JpZERhdGEgPyBnZXRTdW0oc2VsZi5ncmlkRGF0YSwgJ3NlcHRlbWJlcicpIDogMDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBva3Rvb2JlciA9IHNlbGYuZ3JpZERhdGEgPyBnZXRTdW0oc2VsZi5ncmlkRGF0YSwgJ29rdG9vYmVyJykgOiAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG5vdmVtYmVyID0gc2VsZi5ncmlkRGF0YSA/IGdldFN1bShzZWxmLmdyaWREYXRhLCAnbm92ZW1iZXInKSA6IDA7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZGV0c2VtYmVyID0gc2VsZi5ncmlkRGF0YSA/IGdldFN1bShzZWxmLmdyaWREYXRhLCAnZGV0c2VtYmVyJykgOiAwO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoc2VsZi5ncmlkRGF0YSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBqYWFudWFyOiBqYWFudWFyLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2ZWVicnVhcjogdmVlYnJ1YXIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcnRzOiBtYXJ0cyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXByaWlsOiBhcHJpaWwsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1haTogbWFpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBqdXVuaToganV1bmksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGp1dWxpOiBqdXVsaSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXVndXN0OiBhdWd1c3QsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlcHRlbWJlcjogc2VwdGVtYmVyLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBva3Rvb2Jlcjogb2t0b29iZXIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vdmVtYmVyOiBub3ZlbWJlcixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGV0c2VtYmVyOiBkZXRzZW1iZXIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWQ6IHNlbGYuZ3JpZERhdGEubGVuZ3RoIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgIH1dKTtcblxuICAgICAgICAgICAgIHJldHVybiBEb2N1bWVudHM7XG59KFJlYWN0LlB1cmVDb21wb25lbnQpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IERvY3VtZW50cztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2Zyb250ZW5kL2RvY3MvYWFzdGFfbmFpdGFqYWQvaW5kZXguanN4XG4vLyBtb2R1bGUgaWQgPSAzNjZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO21vZHVsZS5leHBvcnRzPXtncmlkOnttYWluVGFibGU6e3dpZHRoOicxMDAlJyx0ZDp7Ym9yZGVyOicxcHggc29saWQgbGlnaHRHcmV5JyxkaXNwbGF5Oid0YWJsZS1jZWxsJyxwYWRkaW5nTGVmdDonNXB4J319LGhlYWRlclRhYmxlOnt3aWR0aDonMTAwJSd9LGdyaWRDb250YWluZXI6e3dpZHRoOicxMDAlJ319LHRvdGFsOnt3aWR0aDonYXV0byd9LGRvYzp7aGVpZ2h0OicxMDAlJ319O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vZnJvbnRlbmQvZG9jcy9hYXN0YV9uYWl0YWphZC9zdHlsZXMuanNcbi8vIG1vZHVsZSBpZCA9IDM2N1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbnZhciBEb2N1bWVudFJlZ2lzdGVyID0gcmVxdWlyZSgnLi8uLi9kb2N1bWVudHMvZG9jdW1lbnRzLmpzeCcpO1xudmFyIEJ0bkdldFhtbCA9IHJlcXVpcmUoJy4vLi4vLi4vY29tcG9uZW50cy9idXR0b24tcmVnaXN0ZXIvYnV0dG9uLXRhc2svaW5kZXguanN4Jyk7XG52YXIgVG9vbGJhckNvbnRhaW5lciA9IHJlcXVpcmUoJy4vLi4vLi4vY29tcG9uZW50cy90b29sYmFyLWNvbnRhaW5lci90b29sYmFyLWNvbnRhaW5lci5qc3gnKTtcblxudmFyIHN0eWxlcyA9IHJlcXVpcmUoJy4vc3R5bGVzJyk7XG52YXIgRE9DX1RZUEVfSUQgPSAnS1VVX1RBQUJFTCc7XG52YXIgRG9jQ29udGV4dCA9IHJlcXVpcmUoJy4vLi4vLi4vZG9jLWNvbnRleHQuanMnKTtcbnZhciBUT09MQkFSX1BST1BTID0ge1xuICAgIGFkZDogZmFsc2UsXG4gICAgZWRpdDogZmFsc2UsXG4gICAgZGVsZXRlOiBmYWxzZSxcbiAgICBzdGFydDogZmFsc2UsXG4gICAgcHJpbnQ6IHRydWUsXG4gICAgZW1haWw6IHRydWVcbn07XG5cbi8qKlxyXG4gKiDQmtC70LDRgdGBINGA0LXQsNC70LjQt9GD0LXRgiDQtNC+0LrRg9C80LXQvdGCINGB0L/RgNCw0LLQvtGH0L3QuNC60LAg0L/RgNC40LfQvdCw0LrQvtCyLlxyXG4gKi9cblxudmFyIERvY3VtZW50cyA9IGZ1bmN0aW9uIChfUmVhY3QkUHVyZUNvbXBvbmVudCkge1xuICAgIF9pbmhlcml0cyhEb2N1bWVudHMsIF9SZWFjdCRQdXJlQ29tcG9uZW50KTtcblxuICAgIGZ1bmN0aW9uIERvY3VtZW50cyhwcm9wcykge1xuICAgICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgRG9jdW1lbnRzKTtcblxuICAgICAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoRG9jdW1lbnRzLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoRG9jdW1lbnRzKSkuY2FsbCh0aGlzLCBwcm9wcykpO1xuXG4gICAgICAgIF90aGlzLnJlbmRlcmVyID0gX3RoaXMucmVuZGVyZXIuYmluZChfdGhpcyk7XG4gICAgICAgIF90aGlzLmNoZWNrV2Vla0VuZHMgPSBfdGhpcy5jaGVja1dlZWtFbmRzLmJpbmQoX3RoaXMpO1xuICAgICAgICBfdGhpcy5jdXN0b21fc3R5bGluZyA9IF90aGlzLmN1c3RvbV9zdHlsaW5nLmJpbmQoX3RoaXMpO1xuICAgICAgICBfdGhpcy5vbkNsaWNrSGFuZGxlciA9IF90aGlzLm9uQ2xpY2tIYW5kbGVyLmJpbmQoX3RoaXMpO1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuXG4gICAgX2NyZWF0ZUNsYXNzKERvY3VtZW50cywgW3tcbiAgICAgICAga2V5OiAncmVuZGVyJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KERvY3VtZW50UmVnaXN0ZXIsIHsgaW5pdERhdGE6IHRoaXMucHJvcHMuaW5pdERhdGEsXG4gICAgICAgICAgICAgICAgaGlzdG9yeTogdGhpcy5wcm9wcy5oaXN0b3J5ID8gdGhpcy5wcm9wcy5oaXN0b3J5IDogbnVsbCxcbiAgICAgICAgICAgICAgICBtb2R1bGU6IHRoaXMucHJvcHMubW9kdWxlLFxuICAgICAgICAgICAgICAgIHJlZjogJ3JlZ2lzdGVyJyxcbiAgICAgICAgICAgICAgICB0b29sYmFyUHJvcHM6IFRPT0xCQVJfUFJPUFMsXG4gICAgICAgICAgICAgICAgZG9jVHlwZUlkOiBET0NfVFlQRV9JRCxcbiAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLFxuICAgICAgICAgICAgICAgIHJlbmRlcjogdGhpcy5yZW5kZXJlcixcbiAgICAgICAgICAgICAgICB0cmlnZ2VyX3NlbGVjdDogdGhpcy5jaGVja1dlZWtFbmRzLFxuICAgICAgICAgICAgICAgIGN1c3RvbV9zdHlsaW5nOiB0aGlzLmN1c3RvbV9zdHlsaW5nXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH0sIHtcbiAgICAgICAga2V5OiAncmVuZGVyZXInLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyZXIoc2VsZikge1xuICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgVG9vbGJhckNvbnRhaW5lcixcbiAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnRuR2V0WG1sLCB7XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiAnU2FhbWEgQ1NWIGZhaWwnLFxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrOiB0aGlzLm9uQ2xpY2tIYW5kbGVyLFxuICAgICAgICAgICAgICAgICAgICByZWY6ICdidG4tZ2V0WG1sJyxcbiAgICAgICAgICAgICAgICAgICAgc2hvd0RhdGU6IGZhbHNlXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cblxuICAgICAgICAvKipcclxuICAgICAgICAgKiDQv9GA0LXQvtCx0YDQsNC30YPQtdGCINC30LDQs9C+0LvQvtCy0L7QuiDRgtCw0LHQu9C40YbRiyDQsiDRh9Cw0YHRgtC4INGB0YLQuNC70Y9cclxuICAgICAgICAgKiBAcGFyYW0gc2VsZlxyXG4gICAgICAgICAqL1xuXG4gICAgfSwge1xuICAgICAgICBrZXk6ICdjaGVja1dlZWtFbmRzJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGNoZWNrV2Vla0VuZHMoc2VsZikge1xuICAgICAgICAgICAgaWYgKCFzZWxmLmdyaWRDb25maWcpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIHdlZWtFbmRzID0gW107XG4gICAgICAgICAgICBpZiAoc2VsZi5ncmlkRGF0YS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICB3ZWVrRW5kcyA9IHNlbGYuZ3JpZERhdGFbMF0ud2Vla19lbmRzO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAod2Vla0VuZHMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgc2VsZi5ncmlkQ29uZmlnLm1hcChmdW5jdGlvbiAoY29sdW1uKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vINC/0YDQvtCy0LXRgNGP0LXQvCDQtdGB0YLRjCDQu9C4INCy0YvRhdC+0LTQvdC+0Lkg0LIg0Y3RgtC+0YIg0LTQtdC90Ywg0Lgg0LfQsNC00LDQtdC8INC20LjRgNC90YvQuSDRhtCy0LXRgiDQtdGB0LvQuCDQtdGB0YLRjFxuICAgICAgICAgICAgICAgICAgICBjb2x1bW4uc2hvd0JvbGQgPSB3ZWVrRW5kcy5pbmRleE9mKE51bWJlcihjb2x1bW4ubmFtZSkpID4gLTEgPyB0cnVlIDogZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBjb2x1bW47XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIGZpbHRlclxuICAgICAgICAgICAgc2VsZi5ncmlkRGF0YSA9IHNlbGYuZ3JpZERhdGEuZmlsdGVyKGZ1bmN0aW9uIChyb3cpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcm93LmlzX3JvdztcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXHJcbiAgICAgICAgICog0LrQsNGB0YLQvtC80L3QvtC1INC+0YzRgNCw0LHQvtGC0LrQsCDRgdGC0LjQu9GPINC00LvRjyDRj9GG0LXQudC60LhcclxuICAgICAgICAgKi9cblxuICAgIH0sIHtcbiAgICAgICAga2V5OiAnY3VzdG9tX3N0eWxpbmcnLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gY3VzdG9tX3N0eWxpbmcoY29sdW1uLCByb3cpIHtcbiAgICAgICAgICAgIHZhciBzdHlsZSA9IHt9O1xuICAgICAgICAgICAgaWYgKCFpc05hTihjb2x1bW4ubmFtZSkgJiYgcm93Lm5vbV9pZCA9PSA5OTk5OTk5OTkgJiYgcm93W2NvbHVtbi5pZF0gIT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAvLyDQv9C+0YHQtdGJ0LLQtdC80LvRgdGC0YxcbiAgICAgICAgICAgICAgICAvL9CSINGB0YLRgNC+0LrQtSDCq9Cf0L7RgdC10YnQsNC10LzQvtGB0YLRjMK7INCyINC/0L7Qu9GP0YUg0L7RgtC+0LHRgNCw0LbQsNGO0YLRgdGPINGB0YPQvNC80LDRgNC90L7QtSDQutC+0LvQuNGH0LXRgdGC0LLQviDQv9C+0YHQtdGJ0LXQvdC40Lkg0L/QviDQs9GA0YPQv9C/0LDQvCDQuCDQv9C+0LvRjyDQt9Cw0LvQuNGC0Ysg0YHQvtC+0YLQstC10YLRgdGC0LLQtdC90L3Qvjog0LHQvtC70YzRiNC1IDAg4oCTINGB0LLQtdGC0LvQviDQt9C10LvQtdC90YvQvCwgMCDigJMg0YHQstC10YLQu9C+INC60YDQsNGB0L3Ri9C8INGG0LLQtdGC0L7QvC4g0JLRgdC1INC/0L7Qu9GPINGBINC/0YDQvtGH0LjQvNC4INGD0YHQu9GD0LPQsNC80Lgg0L7RgtC+0LHRgNCw0LbQsNGO0YIg0YHRg9C80LzQsNGA0L3QvtC1INC30L3QsNGH0LXQvdC40LUg0LjQtyDCq9CU0L3QtdCy0L3QvtC5INGE0L7RgNC80Ysg0YPRh9C10YLQsCDQtdC20LXQtNC90LXQstC90YvRhSDRg9GB0LvRg9CzwrssINC10YHQu9C4INC40YUg0LHQvtC70YzRiNC1IDAg0LjQu9C4IMKr0J/Rg9GB0YLQvsK7IC0g0LXRgdC70LggMFxuICAgICAgICAgICAgICAgIHN0eWxlID0gcm93W2NvbHVtbi5pZF0gPyBzdHlsZXMuY3VzdG9tLnBvc2l0aXZlIDogc3R5bGVzLmN1c3RvbS5uZWdhdGl2ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBzdHlsZTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vaGFuZGxlciDQtNC70Y8g0YHQvtCx0YvRgtC40Y8g0LrQu9C40Log0L3QsCDQutC90L7Qv9C60LDRhSDQv9Cw0L3QtdC70LhcblxuICAgIH0sIHtcbiAgICAgICAga2V5OiAnb25DbGlja0hhbmRsZXInLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gb25DbGlja0hhbmRsZXIoZXZlbnQpIHtcbiAgICAgICAgICAgIHZhciBEb2MgPSB0aGlzLnJlZnNbJ3JlZ2lzdGVyJ107XG5cbiAgICAgICAgICAgIGlmIChEb2MuZ3JpZERhdGEgJiYgRG9jLmdyaWREYXRhLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIC8v0LTQtdC70LDQtdC8INGA0LXQtNCw0LnRgNC10LrRgiDQvdCwINC60L7QvdGE0LjQs9GD0YDQsNGG0LjRjlxuICAgICAgICAgICAgICAgIHZhciBzcWxXaGVyZSA9IERvYy5zdGF0ZS5zcWxXaGVyZTtcbiAgICAgICAgICAgICAgICB2YXIgdXJsID0gJy9yZXBvcnRzL2t1dV90YWFiZWwvJyArIERvY0NvbnRleHQudXNlckRhdGEudXVpZDtcbiAgICAgICAgICAgICAgICB2YXIgcGFyYW1zID0gZW5jb2RlVVJJQ29tcG9uZW50KCcnICsgc3FsV2hlcmUpO1xuICAgICAgICAgICAgICAgIHZhciBmaWx0ZXIgPSBlbmNvZGVVUklDb21wb25lbnQoJycgKyBKU09OLnN0cmluZ2lmeShEb2MuZmlsdGVyRGF0YSkpO1xuICAgICAgICAgICAgICAgIHZhciBmdWxsVXJsID0gc3FsV2hlcmUgPyB1cmwgKyAnLycgKyBmaWx0ZXIgKyAnLycgKyBwYXJhbXMgOiB1cmwgKyAnLycgKyBmaWx0ZXI7XG4gICAgICAgICAgICAgICAgd2luZG93Lm9wZW4oZnVsbFVybCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIERvYy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgICAgIHdhcm5pbmc6ICdUdWxlbXVzIDAnLCAvLyDRgdGC0YDQvtC60LAg0LjQt9Cy0LXRidC10L3QuNC5XG4gICAgICAgICAgICAgICAgICAgIHdhcm5pbmdUeXBlOiAnbm90VmFsaWQnXG5cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1dKTtcblxuICAgIHJldHVybiBEb2N1bWVudHM7XG59KFJlYWN0LlB1cmVDb21wb25lbnQpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IERvY3VtZW50cztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2Zyb250ZW5kL2RvY3Mva3V1X3RhYWJlbC9pbmRleC5qc3hcbi8vIG1vZHVsZSBpZCA9IDM2OFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7bW9kdWxlLmV4cG9ydHM9e2dyaWQ6e21haW5UYWJsZTp7d2lkdGg6JzEwMCUnLHRkOntib3JkZXI6JzFweCBzb2xpZCBibGFjaycsZGlzcGxheTondGFibGUtY2VsbCcscGFkZGluZ0xlZnQ6JzVweCcsbnVsbENvbG91cjonbGlnaHRHcmV5J319LGhlYWRlclRhYmxlOnt3aWR0aDonMTAwJSd9LGdyaWRDb250YWluZXI6e3dpZHRoOicxMDAlJ319LC8vIHRkIGN1c3RvbSBzdHlsZXNcbmN1c3RvbTp7cG9zaXRpdmU6e2JhY2tncm91bmRDb2xvcjonbGlnaHRncmVlbid9LG5lZ2F0aXZlOntiYWNrZ3JvdW5kQ29sb3I6J3BpbmsnfX19O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vZnJvbnRlbmQvZG9jcy9rdXVfdGFhYmVsL3N0eWxlcy5qc1xuLy8gbW9kdWxlIGlkID0gMzY5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xudmFyIERvY3VtZW50UmVnaXN0ZXIgPSByZXF1aXJlKCcuLy4uL2RvY3VtZW50cy9kb2N1bWVudHMuanN4Jyk7XG52YXIgQnRuR2V0WG1sID0gcmVxdWlyZSgnLi8uLi8uLi9jb21wb25lbnRzL2J1dHRvbi1yZWdpc3Rlci9idXR0b24tdGFzay9pbmRleC5qc3gnKTtcbnZhciBUb29sYmFyQ29udGFpbmVyID0gcmVxdWlyZSgnLi8uLi8uLi9jb21wb25lbnRzL3Rvb2xiYXItY29udGFpbmVyL3Rvb2xiYXItY29udGFpbmVyLmpzeCcpO1xuXG52YXIgc3R5bGVzID0gcmVxdWlyZSgnLi9zdHlsZXMnKTtcbnZhciBET0NfVFlQRV9JRCA9ICdZS1NVU0VfVEFBQkVMJztcbnZhciBEb2NDb250ZXh0ID0gcmVxdWlyZSgnLi8uLi8uLi9kb2MtY29udGV4dC5qcycpO1xudmFyIFRPT0xCQVJfUFJPUFMgPSB7XG4gICAgYWRkOiBmYWxzZSxcbiAgICBlZGl0OiBmYWxzZSxcbiAgICBkZWxldGU6IGZhbHNlLFxuICAgIHN0YXJ0OiBmYWxzZSxcbiAgICBwcmludDogdHJ1ZSxcbiAgICBlbWFpbDogdHJ1ZVxufTtcblxuLyoqXHJcbiAqINCa0LvQsNGB0YEg0YDQtdCw0LvQuNC30YPQtdGCINC00L7QutGD0LzQtdC90YIg0YHQv9GA0LDQstC+0YfQvdC40LrQsCDQv9GA0LjQt9C90LDQutC+0LIuXHJcbiAqL1xuXG52YXIgRG9jdW1lbnRzID0gZnVuY3Rpb24gKF9SZWFjdCRQdXJlQ29tcG9uZW50KSB7XG4gICAgX2luaGVyaXRzKERvY3VtZW50cywgX1JlYWN0JFB1cmVDb21wb25lbnQpO1xuXG4gICAgZnVuY3Rpb24gRG9jdW1lbnRzKHByb3BzKSB7XG4gICAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBEb2N1bWVudHMpO1xuXG4gICAgICAgIHZhciBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChEb2N1bWVudHMuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihEb2N1bWVudHMpKS5jYWxsKHRoaXMsIHByb3BzKSk7XG5cbiAgICAgICAgX3RoaXMucmVuZGVyZXIgPSBfdGhpcy5yZW5kZXJlci5iaW5kKF90aGlzKTtcbiAgICAgICAgX3RoaXMuY2hlY2tXZWVrRW5kcyA9IF90aGlzLmNoZWNrV2Vla0VuZHMuYmluZChfdGhpcyk7XG4gICAgICAgIF90aGlzLm9uQ2xpY2tIYW5kbGVyID0gX3RoaXMub25DbGlja0hhbmRsZXIuYmluZChfdGhpcyk7XG5cbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cblxuICAgIF9jcmVhdGVDbGFzcyhEb2N1bWVudHMsIFt7XG4gICAgICAgIGtleTogJ3JlbmRlcicsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChEb2N1bWVudFJlZ2lzdGVyLCB7IGhpc3Rvcnk6IHRoaXMucHJvcHMuaGlzdG9yeSA/IHRoaXMucHJvcHMuaGlzdG9yeSA6IG51bGwsXG4gICAgICAgICAgICAgICAgbW9kdWxlOiB0aGlzLnByb3BzLm1vZHVsZSxcbiAgICAgICAgICAgICAgICByZWY6ICdyZWdpc3RlcicsXG4gICAgICAgICAgICAgICAgdG9vbGJhclByb3BzOiBUT09MQkFSX1BST1BTLFxuICAgICAgICAgICAgICAgIGRvY1R5cGVJZDogRE9DX1RZUEVfSUQsXG4gICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcyxcbiAgICAgICAgICAgICAgICByZW5kZXI6IHRoaXMucmVuZGVyZXIsXG4gICAgICAgICAgICAgICAgdHJpZ2dlcl9zZWxlY3Q6IHRoaXMuY2hlY2tXZWVrRW5kcyxcbiAgICAgICAgICAgICAgICBjdXN0b21fc3R5bGluZzogdGhpcy5jdXN0b21fc3R5bGluZ1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ3JlbmRlcmVyJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcmVyKHNlbGYpIHtcbiAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgIFRvb2xiYXJDb250YWluZXIsXG4gICAgICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEJ0bkdldFhtbCwge1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogJ1NhYW1hIENTViBmYWlsJyxcbiAgICAgICAgICAgICAgICAgICAgb25DbGljazogdGhpcy5vbkNsaWNrSGFuZGxlcixcbiAgICAgICAgICAgICAgICAgICAgcmVmOiAnYnRuLWdldFhtbCcsXG4gICAgICAgICAgICAgICAgICAgIHNob3dEYXRlOiBmYWxzZVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXHJcbiAgICAgICAgICog0L/RgNC10L7QsdGA0LDQt9GD0LXRgiDQt9Cw0LPQvtC70L7QstC+0Log0YLQsNCx0LvQuNGG0Ysg0LIg0YfQsNGB0YLQuCDRgdGC0LjQu9GPXHJcbiAgICAgICAgICogQHBhcmFtIHNlbGZcclxuICAgICAgICAgKi9cblxuICAgIH0sIHtcbiAgICAgICAga2V5OiAnY2hlY2tXZWVrRW5kcycsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBjaGVja1dlZWtFbmRzKHNlbGYpIHtcbiAgICAgICAgICAgIGlmICghc2VsZi5ncmlkQ29uZmlnIHx8ICFzZWxmLmdyaWREYXRhKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHZhciB3ZWVrRW5kcyA9IFtdO1xuXG4gICAgICAgICAgICBpZiAoc2VsZi5ncmlkRGF0YSAmJiBzZWxmLmdyaWREYXRhLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHdlZWtFbmRzID0gc2VsZi5ncmlkRGF0YVswXS53ZWVrX2VuZHM7XG4gICAgICAgICAgICAgICAgLy8g0LXRgdC70Lgg0LfQvdCw0YfQtdC90LjQtSDQvdGD0LvQuywg0YLQvtCz0LTQsCDQuNGJ0LXQvFxuICAgICAgICAgICAgICAgIGlmICh3ZWVrRW5kcyAmJiB3ZWVrRW5kcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5ncmlkRGF0YS5ldmVyeShmdW5jdGlvbiAocm93KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocm93LndlZWtfZW5kcyAmJiByb3cud2Vla19lbmRzLmxlbmd0aCAmJiByb3cud2Vla19lbmRzWzBdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2Vla0VuZHMgPSByb3cud2Vla19lbmRzO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgd2Vla0VuZHMgPSBbXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICh3ZWVrRW5kcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICBzZWxmLmdyaWRDb25maWcubWFwKGZ1bmN0aW9uIChjb2x1bW4pIHtcbiAgICAgICAgICAgICAgICAgICAgLy8g0L/RgNC+0LLQtdGA0Y/QtdC8INC10YHRgtGMINC70Lgg0LLRi9GF0L7QtNC90L7QuSDQsiDRjdGC0L7RgiDQtNC10L3RjCDQuCDQt9Cw0LTQsNC10Lwg0LbQuNGA0L3Ri9C5INGG0LLQtdGCINC10YHQu9C4INC10YHRgtGMXG4gICAgICAgICAgICAgICAgICAgIGNvbHVtbi5zaG93Qm9sZCA9IHdlZWtFbmRzLmluZGV4T2YoTnVtYmVyKGNvbHVtbi5uYW1lKSkgPiAtMSA/IHRydWUgOiBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNvbHVtbjtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gZmlsdGVyXG4gICAgICAgICAgICBzZWxmLmdyaWREYXRhID0gc2VsZi5ncmlkRGF0YS5maWx0ZXIoZnVuY3Rpb24gKHJvdykge1xuICAgICAgICAgICAgICAgIHJldHVybiByb3cuaXNfcm93O1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICAvKipcclxuICAgICAgICAgKiDQutCw0YHRgtC+0LzQvdC+0LUg0L7RjNGA0LDQsdC+0YLQutCwINGB0YLQuNC70Y8g0LTQu9GPINGP0YbQtdC50LrQuFxyXG4gICAgICAgICAqL1xuXG4gICAgfSwge1xuICAgICAgICBrZXk6ICdjdXN0b21fc3R5bGluZycsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBjdXN0b21fc3R5bGluZyhjb2x1bW4sIHJvdykge1xuICAgICAgICAgICAgdmFyIHN0eWxlID0ge307XG4gICAgICAgICAgICBpZiAoIWlzTmFOKGNvbHVtbi5uYW1lKSAmJiByb3cubm9tX2lkID09IDk5OTk5OTk5OSAmJiByb3dbY29sdW1uLmlkXSAhPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIC8vINC/0L7RgdC10YnQstC10LzQu9GB0YLRjFxuICAgICAgICAgICAgICAgIC8v0JIg0YHRgtGA0L7QutC1IMKr0J/QvtGB0LXRidCw0LXQvNC+0YHRgtGMwrsg0LIg0L/QvtC70Y/RhSDQvtGC0L7QsdGA0LDQttCw0Y7RgtGB0Y8g0YHRg9C80LzQsNGA0L3QvtC1INC60L7Qu9C40YfQtdGB0YLQstC+INC/0L7RgdC10YnQtdC90LjQuSDQv9C+INCz0YDRg9C/0L/QsNC8INC4INC/0L7Qu9GPINC30LDQu9C40YLRiyDRgdC+0L7RgtCy0LXRgtGB0YLQstC10L3QvdC+OiDQsdC+0LvRjNGI0LUgMCDigJMg0YHQstC10YLQu9C+INC30LXQu9C10L3Ri9C8LCAwIOKAkyDRgdCy0LXRgtC70L4g0LrRgNCw0YHQvdGL0Lwg0YbQstC10YLQvtC8LiDQktGB0LUg0L/QvtC70Y8g0YEg0L/RgNC+0YfQuNC80Lgg0YPRgdC70YPQs9Cw0LzQuCDQvtGC0L7QsdGA0LDQttCw0Y7RgiDRgdGD0LzQvNCw0YDQvdC+0LUg0LfQvdCw0YfQtdC90LjQtSDQuNC3IMKr0JTQvdC10LLQvdC+0Lkg0YTQvtGA0LzRiyDRg9GH0LXRgtCwINC10LbQtdC00L3QtdCy0L3Ri9GFINGD0YHQu9GD0LPCuywg0LXRgdC70Lgg0LjRhSDQsdC+0LvRjNGI0LUgMCDQuNC70LggwqvQn9GD0YHRgtC+wrsgLSDQtdGB0LvQuCAwXG4gICAgICAgICAgICAgICAgc3R5bGUgPSBOdW1iZXIocm93W2NvbHVtbi5pZF0pID8gc3R5bGVzLmN1c3RvbS5wb3NpdGl2ZSA6IHN0eWxlcy5jdXN0b20ubmVnYXRpdmU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gc3R5bGU7XG4gICAgICAgIH1cblxuICAgICAgICAvL2hhbmRsZXIg0LTQu9GPINGB0L7QsdGL0YLQuNGPINC60LvQuNC6INC90LAg0LrQvdC+0L/QutCw0YUg0L/QsNC90LXQu9C4XG5cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ29uQ2xpY2tIYW5kbGVyJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIG9uQ2xpY2tIYW5kbGVyKGV2ZW50KSB7XG4gICAgICAgICAgICB2YXIgRG9jID0gdGhpcy5yZWZzWydyZWdpc3RlciddO1xuXG4gICAgICAgICAgICBpZiAoRG9jLmdyaWREYXRhICYmIERvYy5ncmlkRGF0YS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAvL9C00LXQu9Cw0LXQvCDRgNC10LTQsNC50YDQtdC60YIg0L3QsCDQutC+0L3RhNC40LPRg9GA0LDRhtC40Y5cbiAgICAgICAgICAgICAgICB2YXIgc3FsV2hlcmUgPSBEb2Muc3RhdGUuc3FsV2hlcmU7XG4gICAgICAgICAgICAgICAgdmFyIHVybCA9ICcvcmVwb3J0cy95a3N1c2VfdGFhYmVsLycgKyBEb2NDb250ZXh0LnVzZXJEYXRhLnV1aWQ7XG4gICAgICAgICAgICAgICAgdmFyIHBhcmFtcyA9IGVuY29kZVVSSUNvbXBvbmVudCgnJyArIHNxbFdoZXJlKTtcbiAgICAgICAgICAgICAgICB2YXIgbm90RW1wdHlGaWx0ZXIgPSBEb2MuZmlsdGVyRGF0YS5maWx0ZXIoZnVuY3Rpb24gKHJvdykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcm93LnZhbHVlO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHZhciBmaWx0ZXIgPSBlbmNvZGVVUklDb21wb25lbnQoJycgKyBKU09OLnN0cmluZ2lmeShub3RFbXB0eUZpbHRlcikpO1xuXG4gICAgICAgICAgICAgICAgdmFyIGZ1bGxVcmwgPSBzcWxXaGVyZSA/IHVybCArICcvJyArIGZpbHRlciArICcvJyArIHBhcmFtcyA6IHVybCArICcvJyArIGZpbHRlcjtcbiAgICAgICAgICAgICAgICB3aW5kb3cub3BlbihmdWxsVXJsKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgRG9jLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICAgICAgd2FybmluZzogJ1R1bGVtdXMgMCcsIC8vINGB0YLRgNC+0LrQsCDQuNC30LLQtdGJ0LXQvdC40LlcbiAgICAgICAgICAgICAgICAgICAgd2FybmluZ1R5cGU6ICdub3RWYWxpZCdcblxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfV0pO1xuXG4gICAgcmV0dXJuIERvY3VtZW50cztcbn0oUmVhY3QuUHVyZUNvbXBvbmVudCk7XG5cbm1vZHVsZS5leHBvcnRzID0gRG9jdW1lbnRzO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vZnJvbnRlbmQvZG9jcy95a3N1c2VfdGFhYmVsL2luZGV4LmpzeFxuLy8gbW9kdWxlIGlkID0gMzcwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0Jzttb2R1bGUuZXhwb3J0cz17Z3JpZDp7bWFpblRhYmxlOnt3aWR0aDonMTAwJScsdGQ6e2JvcmRlcjonMXB4IHNvbGlkIGJsYWNrJyxkaXNwbGF5Oid0YWJsZS1jZWxsJyxwYWRkaW5nTGVmdDonNXB4JyxudWxsQ29sb3VyOidsaWdodEdyZXknfX0saGVhZGVyVGFibGU6e3dpZHRoOicxMDAlJ30sdGg6e2JvcmRlckJvdHRvbTonMXB4IHNvbGlkIGJsYWNrJyxiYWNrZ3JvdW5kQ29sb3I6J2dyZXknLGhlaWdodDonMzBweCcsYm9yZGVyOicxcHggc29saWQgbGlnaHRncmF5JyxkaXNwbGF5Oid0YWJsZS1jZWxsJyxjb2xvcjonYmxhY2snLGJvbGRDb2xvcjoncmVkJ30sZ3JpZENvbnRhaW5lcjp7d2lkdGg6JzEwMCUnfSxib29sQ29sb3VyOnt5ZXM6bnVsbCxubzpudWxsfX0sLy8gdGQgY3VzdG9tIHN0eWxlc1xuY3VzdG9tOntwb3NpdGl2ZTp7YmFja2dyb3VuZENvbG9yOidsaWdodGdyZWVuJ30sbmVnYXRpdmU6e2JhY2tncm91bmRDb2xvcjoncGluayd9fX07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9mcm9udGVuZC9kb2NzL3lrc3VzZV90YWFiZWwvc3R5bGVzLmpzXG4vLyBtb2R1bGUgaWQgPSAzNzFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG52YXIgRG9jdW1lbnRSZWdpc3RlciA9IHJlcXVpcmUoJy4vLi4vZG9jdW1lbnRzL2RvY3VtZW50cy5qc3gnKTtcbnZhciBCdG5HZXRYbWwgPSByZXF1aXJlKCcuLy4uLy4uL2NvbXBvbmVudHMvYnV0dG9uLXJlZ2lzdGVyL2J1dHRvbi10YXNrL2luZGV4LmpzeCcpO1xudmFyIFRvb2xiYXJDb250YWluZXIgPSByZXF1aXJlKCcuLy4uLy4uL2NvbXBvbmVudHMvdG9vbGJhci1jb250YWluZXIvdG9vbGJhci1jb250YWluZXIuanN4Jyk7XG5cbnZhciBzdHlsZXMgPSByZXF1aXJlKCcuL3N0eWxlcycpO1xudmFyIERPQ19UWVBFX0lEID0gJ0tPSEFMT0xFS1VfQVJVQU5ORSc7XG52YXIgRG9jQ29udGV4dCA9IHJlcXVpcmUoJy4vLi4vLi4vZG9jLWNvbnRleHQuanMnKTtcbnZhciBUT09MQkFSX1BST1BTID0ge1xuICAgIGFkZDogZmFsc2UsXG4gICAgZWRpdDogZmFsc2UsXG4gICAgZGVsZXRlOiBmYWxzZSxcbiAgICBzdGFydDogZmFsc2UsXG4gICAgcHJpbnQ6IHRydWUsXG4gICAgZW1haWw6IHRydWVcbn07XG5cbi8qKlxyXG4gKiDQmtC70LDRgdGBINGA0LXQsNC70LjQt9GD0LXRgiDQtNC+0LrRg9C80LXQvdGCINGB0L/RgNCw0LLQvtGH0L3QuNC60LAg0L/RgNC40LfQvdCw0LrQvtCyLlxyXG4gKi9cblxudmFyIERvY3VtZW50cyA9IGZ1bmN0aW9uIChfUmVhY3QkUHVyZUNvbXBvbmVudCkge1xuICAgIF9pbmhlcml0cyhEb2N1bWVudHMsIF9SZWFjdCRQdXJlQ29tcG9uZW50KTtcblxuICAgIGZ1bmN0aW9uIERvY3VtZW50cyhwcm9wcykge1xuICAgICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgRG9jdW1lbnRzKTtcblxuICAgICAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoRG9jdW1lbnRzLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoRG9jdW1lbnRzKSkuY2FsbCh0aGlzLCBwcm9wcykpO1xuXG4gICAgICAgIF90aGlzLnJlbmRlcmVyID0gX3RoaXMucmVuZGVyZXIuYmluZChfdGhpcyk7XG4gICAgICAgIF90aGlzLm9uQ2xpY2tIYW5kbGVyID0gX3RoaXMub25DbGlja0hhbmRsZXIuYmluZChfdGhpcyk7XG5cbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cblxuICAgIF9jcmVhdGVDbGFzcyhEb2N1bWVudHMsIFt7XG4gICAgICAgIGtleTogJ3JlbmRlcicsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChEb2N1bWVudFJlZ2lzdGVyLCB7IGluaXREYXRhOiB0aGlzLnByb3BzLmluaXREYXRhLFxuICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHRoaXMucHJvcHMuaGlzdG9yeSA/IHRoaXMucHJvcHMuaGlzdG9yeSA6IG51bGwsXG4gICAgICAgICAgICAgICAgbW9kdWxlOiB0aGlzLnByb3BzLm1vZHVsZSxcbiAgICAgICAgICAgICAgICByZWY6ICdyZWdpc3RlcicsXG4gICAgICAgICAgICAgICAgdG9vbGJhclByb3BzOiBUT09MQkFSX1BST1BTLFxuICAgICAgICAgICAgICAgIGRvY1R5cGVJZDogRE9DX1RZUEVfSUQsXG4gICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcyxcbiAgICAgICAgICAgICAgICByZW5kZXI6IHRoaXMucmVuZGVyZXIgfSk7XG4gICAgICAgIH1cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ3JlbmRlcmVyJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcmVyKHNlbGYpIHtcbiAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgIFRvb2xiYXJDb250YWluZXIsXG4gICAgICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEJ0bkdldFhtbCwge1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogJ1NhYW1hIENTViBmYWlsJyxcbiAgICAgICAgICAgICAgICAgICAgb25DbGljazogdGhpcy5vbkNsaWNrSGFuZGxlcixcbiAgICAgICAgICAgICAgICAgICAgcmVmOiAnYnRuLWdldFhtbCcsXG4gICAgICAgICAgICAgICAgICAgIHNob3dEYXRlOiBmYWxzZVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG5cbiAgICAgICAgLy9oYW5kbGVyINC00LvRjyDRgdC+0LHRi9GC0LjRjyDQutC70LjQuiDQvdCwINC60L3QvtC/0LrQsNGFINC/0LDQvdC10LvQuFxuXG4gICAgfSwge1xuICAgICAgICBrZXk6ICdvbkNsaWNrSGFuZGxlcicsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBvbkNsaWNrSGFuZGxlcihldmVudCkge1xuICAgICAgICAgICAgdmFyIERvYyA9IHRoaXMucmVmc1sncmVnaXN0ZXInXTtcblxuICAgICAgICAgICAgaWYgKERvYy5ncmlkRGF0YSAmJiBEb2MuZ3JpZERhdGEubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgLy/QtNC10LvQsNC10Lwg0YDQtdC00LDQudGA0LXQutGCINC90LAg0LrQvtC90YTQuNCz0YPRgNCw0YbQuNGOXG4gICAgICAgICAgICAgICAgdmFyIHNxbFdoZXJlID0gRG9jLnN0YXRlLnNxbFdoZXJlO1xuICAgICAgICAgICAgICAgIHZhciB1cmwgPSAnL3JlcG9ydHMva29oYW9sZWt1X2FydWFubmUvJyArIERvY0NvbnRleHQudXNlckRhdGEudXVpZDtcbiAgICAgICAgICAgICAgICB2YXIgcGFyYW1zID0gZW5jb2RlVVJJQ29tcG9uZW50KCcnICsgc3FsV2hlcmUpO1xuICAgICAgICAgICAgICAgIHZhciBmaWx0ZXIgPSBlbmNvZGVVUklDb21wb25lbnQoJycgKyBKU09OLnN0cmluZ2lmeShEb2MuZmlsdGVyRGF0YSkpO1xuICAgICAgICAgICAgICAgIHZhciBmdWxsVXJsID0gc3FsV2hlcmUgPyB1cmwgKyAnLycgKyBmaWx0ZXIgKyAnLycgKyBwYXJhbXMgOiB1cmwgKyAnLycgKyBmaWx0ZXI7XG4gICAgICAgICAgICAgICAgd2luZG93Lm9wZW4oZnVsbFVybCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIERvYy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgICAgIHdhcm5pbmc6ICdUdWxlbXVzIDAnLCAvLyDRgdGC0YDQvtC60LAg0LjQt9Cy0LXRidC10L3QuNC5XG4gICAgICAgICAgICAgICAgICAgIHdhcm5pbmdUeXBlOiAnbm90VmFsaWQnXG5cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1dKTtcblxuICAgIHJldHVybiBEb2N1bWVudHM7XG59KFJlYWN0LlB1cmVDb21wb25lbnQpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IERvY3VtZW50cztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2Zyb250ZW5kL2RvY3Mva29oYWxvbGVrdV9hcnVhbm5lL2luZGV4LmpzeFxuLy8gbW9kdWxlIGlkID0gMzcyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0Jzttb2R1bGUuZXhwb3J0cz17Z3JpZDp7bWFpblRhYmxlOnt3aWR0aDonMTAwJScsdGQ6e2JvcmRlcjonMXB4IHNvbGlkIGxpZ2h0R3JleScsZGlzcGxheTondGFibGUtY2VsbCcscGFkZGluZ0xlZnQ6JzVweCd9fSxoZWFkZXJUYWJsZTp7d2lkdGg6JzEwMCUnfSxncmlkQ29udGFpbmVyOnt3aWR0aDonMTAwJSd9fX07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9mcm9udGVuZC9kb2NzL2tvaGFsb2xla3VfYXJ1YW5uZS9zdHlsZXMuanNcbi8vIG1vZHVsZSBpZCA9IDM3M1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbnZhciBEb2N1bWVudFJlZ2lzdGVyID0gcmVxdWlyZSgnLi8uLi9kb2N1bWVudHMvZG9jdW1lbnRzLmpzeCcpO1xudmFyIElucHV0TnVtYmVyID0gcmVxdWlyZSgnLi4vLi4vY29tcG9uZW50cy9pbnB1dC1udW1iZXIvaW5wdXQtbnVtYmVyLmpzeCcpO1xuXG52YXIgc3R5bGVzID0gcmVxdWlyZSgnLi9zdHlsZXMnKTtcblxudmFyIERPQ19UWVBFX0lEID0gJ1RPUEVMVE1BS1NVRCc7XG52YXIgVE9PTEJBUl9QUk9QUyA9IHtcbiAgICBhZGQ6IGZhbHNlLFxuICAgIGVkaXQ6IGZhbHNlLFxuICAgIGRlbGV0ZTogZmFsc2UsXG4gICAgc3RhcnQ6IGZhbHNlLFxuICAgIHByaW50OiB0cnVlLFxuICAgIGVtYWlsOiB0cnVlXG59O1xuXG4vKipcclxuICog0JrQu9Cw0YHRgSDRgNC10LDQu9C40LfRg9C10YIg0LTQvtC60YPQvNC10L3RgiDRgdC/0YDQsNCy0L7Rh9C90LjQutCwINC/0YDQuNC30L3QsNC60L7Qsi5cclxuICovXG5cbnZhciBEb2N1bWVudHMgPSBmdW5jdGlvbiAoX1JlYWN0JFB1cmVDb21wb25lbnQpIHtcbiAgICBfaW5oZXJpdHMoRG9jdW1lbnRzLCBfUmVhY3QkUHVyZUNvbXBvbmVudCk7XG5cbiAgICBmdW5jdGlvbiBEb2N1bWVudHMocHJvcHMpIHtcbiAgICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIERvY3VtZW50cyk7XG5cbiAgICAgICAgdmFyIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKERvY3VtZW50cy5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKERvY3VtZW50cykpLmNhbGwodGhpcywgcHJvcHMpKTtcblxuICAgICAgICBfdGhpcy5yZW5kZXJlciA9IF90aGlzLnJlbmRlcmVyLmJpbmQoX3RoaXMpO1xuXG4gICAgICAgIF90aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgcmVhZDogMFxuICAgICAgICB9O1xuXG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG5cbiAgICBfY3JlYXRlQ2xhc3MoRG9jdW1lbnRzLCBbe1xuICAgICAgICBrZXk6ICdyZW5kZXInLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KERvY3VtZW50UmVnaXN0ZXIsIHsgaW5pdERhdGE6IHRoaXMucHJvcHMuaW5pdERhdGEsXG4gICAgICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHRoaXMucHJvcHMuaGlzdG9yeSA/IHRoaXMucHJvcHMuaGlzdG9yeSA6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vZHVsZTogdGhpcy5wcm9wcy5tb2R1bGUsXG4gICAgICAgICAgICAgICAgICAgIHJlZjogJ3JlZ2lzdGVyJyxcbiAgICAgICAgICAgICAgICAgICAgdG9vbGJhclByb3BzOiBUT09MQkFSX1BST1BTLFxuICAgICAgICAgICAgICAgICAgICBkb2NUeXBlSWQ6IERPQ19UWVBFX0lELFxuICAgICAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLFxuICAgICAgICAgICAgICAgICAgICByZW5kZXI6IHRoaXMucmVuZGVyZXIgfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dE51bWJlciwgeyB0aXRsZTogJ1JlYWQga29ra3U6JyxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3JlYWRfa29ra3UnLFxuICAgICAgICAgICAgICAgICAgICBzdHlsZTogc3R5bGVzLnRvdGFsLFxuICAgICAgICAgICAgICAgICAgICByZWY6ICdpbnB1dC1yZWFkJyxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IE51bWJlcih0aGlzLnN0YXRlLnJlYWQpIHx8IDAsXG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVkOiB0cnVlIH0pXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgfSwge1xuICAgICAgICBrZXk6ICdyZW5kZXJlcicsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXJlcihzZWxmKSB7XG4gICAgICAgICAgICBpZiAoc2VsZi5ncmlkRGF0YSkge1xuICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgICAgICByZWFkOiBzZWxmLmdyaWREYXRhLmxlbmd0aCB9KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICB9XSk7XG5cbiAgICByZXR1cm4gRG9jdW1lbnRzO1xufShSZWFjdC5QdXJlQ29tcG9uZW50KTtcblxubW9kdWxlLmV4cG9ydHMgPSBEb2N1bWVudHM7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9mcm9udGVuZC9kb2NzL3RvcGVsdG1ha3N1ZC9pbmRleC5qc3hcbi8vIG1vZHVsZSBpZCA9IDM3NFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7bW9kdWxlLmV4cG9ydHM9e2dyaWQ6e21haW5UYWJsZTp7d2lkdGg6JzEwMCUnLHRkOntib3JkZXI6JzFweCBzb2xpZCBsaWdodEdyZXknLGRpc3BsYXk6J3RhYmxlLWNlbGwnLHBhZGRpbmdMZWZ0Oic1cHgnfX0saGVhZGVyVGFibGU6e3dpZHRoOicxMDAlJ30sZ3JpZENvbnRhaW5lcjp7d2lkdGg6JzEwMCUnfX0sdG90YWw6e3dpZHRoOidhdXRvJ30sZG9jOntoZWlnaHQ6JzEwMCUnfX07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9mcm9udGVuZC9kb2NzL3RvcGVsdG1ha3N1ZC9zdHlsZXMuanNcbi8vIG1vZHVsZSBpZCA9IDM3NVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbnZhciBEb2N1bWVudFJlZ2lzdGVyID0gcmVxdWlyZSgnLi8uLi9kb2N1bWVudHMvZG9jdW1lbnRzLmpzeCcpO1xudmFyIElucHV0TnVtYmVyID0gcmVxdWlyZSgnLi4vLi4vY29tcG9uZW50cy9pbnB1dC1udW1iZXIvaW5wdXQtbnVtYmVyLmpzeCcpO1xudmFyIElucHV0VGV4dCA9IHJlcXVpcmUoJy4uLy4uL2NvbXBvbmVudHMvaW5wdXQtdGV4dC9pbnB1dC10ZXh0LmpzeCcpO1xudmFyIEJ0bkdldFhtbCA9IHJlcXVpcmUoJy4vLi4vLi4vY29tcG9uZW50cy9idXR0b24tcmVnaXN0ZXIvYnV0dG9uLXRhc2svaW5kZXguanN4Jyk7XG52YXIgVG9vbGJhckNvbnRhaW5lciA9IHJlcXVpcmUoJy4vLi4vLi4vY29tcG9uZW50cy90b29sYmFyLWNvbnRhaW5lci90b29sYmFyLWNvbnRhaW5lci5qc3gnKTtcblxudmFyIHN0eWxlcyA9IHJlcXVpcmUoJy4vc3R5bGVzJyk7XG52YXIgRG9jQ29udGV4dCA9IHJlcXVpcmUoJy4vLi4vLi4vZG9jLWNvbnRleHQuanMnKTtcbnZhciBET0NfVFlQRV9JRCA9ICdLVVVUQUJFTElfQVJVQU5ORSc7XG52YXIgVE9PTEJBUl9QUk9QUyA9IHtcbiAgICBhZGQ6IGZhbHNlLFxuICAgIGVkaXQ6IGZhbHNlLFxuICAgIGRlbGV0ZTogZmFsc2UsXG4gICAgc3RhcnQ6IGZhbHNlLFxuICAgIHByaW50OiB0cnVlLFxuICAgIGVtYWlsOiB0cnVlXG59O1xuXG4vKipcclxuICog0JrQu9Cw0YHRgSDRgNC10LDQu9C40LfRg9C10YIg0LTQvtC60YPQvNC10L3RgiDRgdC/0YDQsNCy0L7Rh9C90LjQutCwINC/0YDQuNC30L3QsNC60L7Qsi5cclxuICovXG5cbnZhciBEb2N1bWVudHMgPSBmdW5jdGlvbiAoX1JlYWN0JFB1cmVDb21wb25lbnQpIHtcbiAgICBfaW5oZXJpdHMoRG9jdW1lbnRzLCBfUmVhY3QkUHVyZUNvbXBvbmVudCk7XG5cbiAgICBmdW5jdGlvbiBEb2N1bWVudHMocHJvcHMpIHtcbiAgICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIERvY3VtZW50cyk7XG5cbiAgICAgICAgdmFyIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKERvY3VtZW50cy5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKERvY3VtZW50cykpLmNhbGwodGhpcywgcHJvcHMpKTtcblxuICAgICAgICBfdGhpcy5yZW5kZXJlciA9IF90aGlzLnJlbmRlcmVyLmJpbmQoX3RoaXMpO1xuICAgICAgICBfdGhpcy5vbkNsaWNrSGFuZGxlciA9IF90aGlzLm9uQ2xpY2tIYW5kbGVyLmJpbmQoX3RoaXMpO1xuXG4gICAgICAgIF90aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgcmVhZDogMCxcbiAgICAgICAgICAgIGZpbHRyaV9yZWFkOiAwLFxuICAgICAgICAgICAgYXJ2ZXN0YXR1ZDogMCxcbiAgICAgICAgICAgIHNvb2R1c3R1czogMCxcbiAgICAgICAgICAgIHN1bW1hOiAwXG4gICAgICAgIH07XG5cbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cblxuICAgIF9jcmVhdGVDbGFzcyhEb2N1bWVudHMsIFt7XG4gICAgICAgIGtleTogJ3JlbmRlcicsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRG9jdW1lbnRSZWdpc3RlciwgeyBpbml0RGF0YTogdGhpcy5wcm9wcy5pbml0RGF0YSxcbiAgICAgICAgICAgICAgICAgICAgaGlzdG9yeTogdGhpcy5wcm9wcy5oaXN0b3J5ID8gdGhpcy5wcm9wcy5oaXN0b3J5IDogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9kdWxlOiB0aGlzLnByb3BzLm1vZHVsZSxcbiAgICAgICAgICAgICAgICAgICAgcmVmOiAncmVnaXN0ZXInLFxuICAgICAgICAgICAgICAgICAgICB0b29sYmFyUHJvcHM6IFRPT0xCQVJfUFJPUFMsXG4gICAgICAgICAgICAgICAgICAgIGRvY1R5cGVJZDogRE9DX1RZUEVfSUQsXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlOiBzdHlsZXMsXG4gICAgICAgICAgICAgICAgICAgIHJlbmRlcjogdGhpcy5yZW5kZXJlciB9KSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0VGV4dCwgeyB0aXRsZTogJ0ZpbHRyaSBhbGwgLyByZWFkIGtva2t1OicsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdyZWFkX2tva2t1JyxcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcy50b3RhbCxcbiAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQtcmVhZCcsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBTdHJpbmcodGhpcy5zdGF0ZS5maWx0cmlfcmVhZCArICcvJyArIHRoaXMuc3RhdGUucmVhZCkgfHwgMCxcbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IHRydWUgfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dE51bWJlciwgeyB0aXRsZTogJ0FydmVzdGF0dWQgKHNoIFxceEZDbWJlcmFydmVzdHVzKSBrb2trdTonLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnYXJ2ZXN0YXR1ZF9rb2trdScsXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlOiBzdHlsZXMudG90YWwsXG4gICAgICAgICAgICAgICAgICAgIHJlZjogJ2lucHV0LWFydmVzdGF0dWQnLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogTnVtYmVyKHRoaXMuc3RhdGUuYXJ2ZXN0YXR1ZCkgfHwgMCxcbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IHRydWUgfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dE51bWJlciwgeyB0aXRsZTogJ1Nvb2R1c3R1cyBrb2trdTonLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnc29vZHVzdHVzX2tva2t1JyxcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcy50b3RhbCxcbiAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQtc29vZHVzdHVzJyxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IE51bWJlcih0aGlzLnN0YXRlLnNvb2R1c3R1cykgfHwgMCxcbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IHRydWUgfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dE51bWJlciwgeyB0aXRsZTogJ0FydmVzdGF0dWQgamEgU29vZHVzdHVzIGtva2t1OicsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdhcnZfamFfc29vZHVzdHVzX2tva2t1JyxcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHN0eWxlcy50b3RhbCxcbiAgICAgICAgICAgICAgICAgICAgcmVmOiAnaW5wdXQtYXJ2X2phX3Nvb2R1c3R1cycsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBOdW1iZXIodGhpcy5zdGF0ZS5zdW1tYSkgfHwgMCxcbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IHRydWUgfSlcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ3JlbmRlcmVyJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcmVyKHNlbGYpIHtcblxuICAgICAgICAgICAgaWYgKHNlbGYuZ3JpZERhdGEpIHtcbiAgICAgICAgICAgICAgICB2YXIgYXJ2ZXN0YXR1ZCA9IHNlbGYuZ3JpZERhdGEgJiYgc2VsZi5ncmlkRGF0YS5sZW5ndGggJiYgc2VsZi5ncmlkRGF0YVswXS5hcnZlc3RhdHVkX3RvdGFsID8gc2VsZi5ncmlkRGF0YVswXS5hcnZlc3RhdHVkX3RvdGFsIDogMDtcbiAgICAgICAgICAgICAgICB2YXIgc29vZHVzdHVzID0gc2VsZi5ncmlkRGF0YSAmJiBzZWxmLmdyaWREYXRhLmxlbmd0aCAmJiBzZWxmLmdyaWREYXRhWzBdLnNvb2R1c3R1c190b3RhbCA/IHNlbGYuZ3JpZERhdGFbMF0uc29vZHVzdHVzX3RvdGFsIDogMDtcbiAgICAgICAgICAgICAgICB2YXIgc3VtbWEgPSBzZWxmLmdyaWREYXRhICYmIHNlbGYuZ3JpZERhdGEubGVuZ3RoICYmIHNlbGYuZ3JpZERhdGFbMF0uc3VtbWFfdG90YWwgPyBzZWxmLmdyaWREYXRhWzBdLnN1bW1hX3RvdGFsIDogMDtcblxuICAgICAgICAgICAgICAgIHZhciBmaWx0cmlfcmVhZCA9IHNlbGYuZ3JpZERhdGEgJiYgc2VsZi5ncmlkRGF0YS5sZW5ndGggJiYgc2VsZi5ncmlkRGF0YVswXS5maWx0ZXJfdG90YWwgPyBzZWxmLmdyaWREYXRhWzBdLmZpbHRlcl90b3RhbCA6IDA7XG4gICAgICAgICAgICAgICAgdmFyIHJlYWQgPSBzZWxmLmdyaWREYXRhICYmIHNlbGYuZ3JpZERhdGEubGVuZ3RoICYmIHNlbGYuZ3JpZERhdGFbMF0ucm93c190b3RhbCA/IHNlbGYuZ3JpZERhdGFbMF0ucm93c190b3RhbCA6IDA7XG5cbiAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICAgICAgcmVhZDogcmVhZCxcbiAgICAgICAgICAgICAgICAgICAgYXJ2ZXN0YXR1ZDogYXJ2ZXN0YXR1ZCxcbiAgICAgICAgICAgICAgICAgICAgc29vZHVzdHVzOiBzb29kdXN0dXMsXG4gICAgICAgICAgICAgICAgICAgIHN1bW1hOiBzdW1tYSxcbiAgICAgICAgICAgICAgICAgICAgZmlsdHJpX3JlYWQ6IGZpbHRyaV9yZWFkXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICBUb29sYmFyQ29udGFpbmVyLFxuICAgICAgICAgICAgICAgIG51bGwsXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChCdG5HZXRYbWwsIHtcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6ICdTYWFtYSBDU1YgZmFpbCcsXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s6IHRoaXMub25DbGlja0hhbmRsZXIsXG4gICAgICAgICAgICAgICAgICAgIHNob3dEYXRlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgcmVmOiAnYnRuLWdldENzdidcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cblxuICAgICAgICAvL2hhbmRsZXIg0LTQu9GPINGB0L7QsdGL0YLQuNGPINC60LvQuNC6INC90LAg0LrQvdC+0L/QutCw0YUg0L/QsNC90LXQu9C4XG5cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ29uQ2xpY2tIYW5kbGVyJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIG9uQ2xpY2tIYW5kbGVyKCkge1xuICAgICAgICAgICAgdmFyIERvYyA9IHRoaXMucmVmc1sncmVnaXN0ZXInXTtcblxuICAgICAgICAgICAgaWYgKERvYy5ncmlkRGF0YSAmJiBEb2MuZ3JpZERhdGEubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgLy/QtNC10LvQsNC10Lwg0YDQtdC00LDQudGA0LXQutGCINC90LAg0LrQvtC90YTQuNCz0YPRgNCw0YbQuNGOXG4gICAgICAgICAgICAgICAgdmFyIHNxbFdoZXJlID0gRG9jLnN0YXRlLnNxbFdoZXJlO1xuICAgICAgICAgICAgICAgIHZhciB1cmwgPSAnL3JlcG9ydHMva3V1dGFiZWxpX2FydWFubmUvJyArIERvY0NvbnRleHQudXNlckRhdGEudXVpZDtcbiAgICAgICAgICAgICAgICB2YXIgcGFyYW1zID0gZW5jb2RlVVJJQ29tcG9uZW50KCcnICsgc3FsV2hlcmUpO1xuICAgICAgICAgICAgICAgIHZhciBmaWx0ZXIgPSBlbmNvZGVVUklDb21wb25lbnQoJycgKyBKU09OLnN0cmluZ2lmeShEb2MuZmlsdGVyRGF0YSkpO1xuICAgICAgICAgICAgICAgIHZhciBmdWxsVXJsID0gc3FsV2hlcmUgPyB1cmwgKyAnLycgKyBmaWx0ZXIgKyAnLycgKyBwYXJhbXMgOiB1cmwgKyAnLycgKyBmaWx0ZXI7XG4gICAgICAgICAgICAgICAgd2luZG93Lm9wZW4oZnVsbFVybCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIERvYy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgICAgIHdhcm5pbmc6ICdNaXR0ZSDDvGh0ZWdpIGtpcmplZCBsZWlkbnVkJywgLy8g0YHRgtGA0L7QutCwINC40LfQstC10YnQtdC90LjQuVxuICAgICAgICAgICAgICAgICAgICB3YXJuaW5nVHlwZTogJ25vdFZhbGlkJ1xuXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XSk7XG5cbiAgICByZXR1cm4gRG9jdW1lbnRzO1xufShSZWFjdC5QdXJlQ29tcG9uZW50KTtcblxubW9kdWxlLmV4cG9ydHMgPSBEb2N1bWVudHM7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9mcm9udGVuZC9kb2NzL2t1dXRhYmVsaV9hcnVhbm5lL2luZGV4LmpzeFxuLy8gbW9kdWxlIGlkID0gMzc2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0Jzttb2R1bGUuZXhwb3J0cz17Z3JpZDp7bWFpblRhYmxlOnt3aWR0aDonMTAwJScsdGQ6e2JvcmRlcjonMXB4IHNvbGlkIGxpZ2h0R3JleScsZGlzcGxheTondGFibGUtY2VsbCcscGFkZGluZ0xlZnQ6JzVweCd9fSxoZWFkZXJUYWJsZTp7d2lkdGg6JzEwMCUnfSxncmlkQ29udGFpbmVyOnt3aWR0aDonMTAwJSd9fSx0b3RhbDp7d2lkdGg6J2F1dG8nfSxkb2M6e2hlaWdodDonMTAwJSd9fTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2Zyb250ZW5kL2RvY3Mva3V1dGFiZWxpX2FydWFubmUvc3R5bGVzLmpzXG4vLyBtb2R1bGUgaWQgPSAzNzdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ0RBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ2ppQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OztBQzFnQkE7Ozs7OztBQ0FBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FDUkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQzNOQTs7Ozs7O0FDQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7QUMzTUE7Ozs7OztBQ0FBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7OztBQ3JuQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7QUNSQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7O0FDM0lBOzs7Ozs7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OztBQ3pVQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OztBQ1JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FDakVBOzs7Ozs7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OztBQ2hnQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FDVkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7QUNoYUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7QUNSQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FDdklBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ0FBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FDNUZBOzs7Ozs7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OztBQzlWQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OztBQ1JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7QUN4S0E7Ozs7OztBQ0FBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OztBQ3ZNQTs7Ozs7O0FDQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7QUNsREE7Ozs7OztBQ0FBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FDeklBOzs7Ozs7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7QUNqREE7Ozs7OztBQ0FBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FDeklBOzs7Ozs7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7QUNqREE7Ozs7OztBQ0FBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FDeklBOzs7Ozs7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FDaE1BOzs7Ozs7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OztBQzFRQTs7Ozs7O0FDQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FDbExBOzs7Ozs7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FDeEhBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7QUNOQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FDbllBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FDUkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OztBQzFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FDTkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FDbE9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7QUNOQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FDcFJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7QUNOQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FDM0hBOzs7Ozs7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7QUNuSEE7Ozs7OztBQ0FBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OztBQ2hOQTs7Ozs7O0FDQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7QUN2TkE7Ozs7OztBQ0FBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OztBQzVLQTs7Ozs7O0FDQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7QUN2TkE7Ozs7OztBQ0FBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FDdk5BOzs7Ozs7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FDNURBOzs7Ozs7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OztBQ3ZIQTs7Ozs7O0FDQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OztBQzFGQTs7Ozs7O0FDQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7QUM5REE7Ozs7OztBQ0FBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FDckpBOzs7Ozs7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OztBQy9JQTs7Ozs7O0FDQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7QUNsTUE7Ozs7OztBQ0FBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OztBQ3ZKQTtBQUNBOzs7Ozs7QUNEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7QUN0S0E7QUFDQTs7Ozs7O0FDREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FDcEdBOzs7Ozs7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FDcEZBOzs7Ozs7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7QUM3SkE7OzsiLCJzb3VyY2VSb290IjoiIn0=