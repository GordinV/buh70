module.exports = {
    selectAsLibs: `SELECT menu.*
                        FROM get_menu($1 :: TEXT [], $2 :: TEXT [])  menu
                        ORDER BY idx`, // $1 - modules array, like '{"EELARVE","RAAMA"}', $2 array, like '{"KASUTAJA","ADMIN"}'
    select: [{
        sql: `SELECT
               'MENU' as doc_type_id,
               $2::integer as userid,
              (m.properties -> 'modules') @> to_jsonb('EELARVE' :: TEXT)            AS is_eelarve,
              (m.properties -> 'modules') @> to_jsonb('POHIVARA' :: TEXT)           AS is_pv,
              (m.properties -> 'modules') @> to_jsonb('RAAMA' :: TEXT)              AS is_raama,
              (m.properties -> 'modules') @> to_jsonb('EELPROJ' :: TEXT)            AS is_eelproj,
              (m.properties -> 'modules') @> to_jsonb('PALK' :: TEXT)               AS is_palk,
              (m.properties -> 'modules') @> to_jsonb('LADU' :: TEXT)               AS is_ladu,
              (m.properties -> 'modules') @> to_jsonb('HOOLDEKODU' :: TEXT)         AS is_hooldekodu,
              (m.properties -> 'modules') @> to_jsonb('REKLMAKS' :: TEXT)         AS is_reklmaks,
              (m.properties -> 'groups') @> to_jsonb('KASUTAJA' :: TEXT)            AS is_kasutaja,
              (m.properties -> 'groups') @> to_jsonb('PEAKASUTAJA' :: TEXT)         AS is_peakasutaja,
              (m.properties -> 'groups') @> to_jsonb('ADMIN' :: TEXT)               AS is_admin,
              (m.properties -> 'groups') @> to_jsonb('VAATLEJA' :: TEXT)             AS is_vaatleja,
              (m.properties -> 'groups') @> to_jsonb('ASUTUSTE_KORRALDAJA' :: TEXT) AS is_asutuste_korraldaja,
              (m.properties -> 'groups') @> to_jsonb('EEL_KOOSTAJA' :: TEXT)        AS is_eel_koostaja,
              (m.properties -> 'groups') @> to_jsonb('EEL_ALLKIRJASTAJA' :: TEXT)   AS is_eel_allkirjastaja,
              (m.properties -> 'groups') @> to_jsonb('EEL_ESITAJA' :: TEXT)         AS is_eel_esitaja,
              (m.properties -> 'groups') @> to_jsonb('EEL_AKTSEPTERJA' :: TEXT)     AS is_eel_aktsepterja,
              (m.properties -> 'groups') @> to_jsonb('REKL_MAKSUHALDUR' :: TEXT)    AS is_rekl_maksuhaldur,
              (m.properties -> 'groups') @> to_jsonb('REKL_ADMINISTRAATOR' :: TEXT) AS is_rekl_administraator,
              m.properties ->> 'proc'                                               AS proc,
              (m.properties ->> 'name')::varchar(120)                                               AS name,
              (m.properties ->> 'eesti')::varchar(120)                                              AS eesti,
              (m.properties ->> 'vene')::varchar(120)                                               AS vene,
              (m.properties ->> 'level') :: INTEGER                                 AS level,
              (m.properties->>'keyshortcut')::varchar(120) as keyshortcut,
              m.status,
              m.pad::varchar(120),
              m.bar::varchar(120),
              m.idx,
              m.id
            FROM ou.menupohi m
            WHERE m.id = $1`,
        sqlAsNew: `SELECT                      
                    $1 :: INTEGER        AS id,
                    $2 :: INTEGER        AS userid,
                    'MENU'               AS doc_type_id,
                    false as is_eelarve,
                    false as is_pv,
                    false as is_raama,
                    false as is_eelproj,
                    false as is_palk,
                    false as is_ladu,
                    false as is_hooldekodu,
                    false as is_reklmaks,
                    false as is_kasutaja,
                    false as is_peakasutaja,
                    false as is_admin,
                    false as is_vaatleja,
                    false as is_asutuste_korraldaja,
                    false as is_eel_koostaja,
                    false as is_eel_allkirjastaja,
                    false as is_eel_esitaja,
                    false as is_eel_aktsepterja,
                    false as is_rekl_maksugaldur,
                    false as is_rekl_administraator,
                    null::text as proc,
                    null::varchar(120) as name,
                    null::varchar(120) as eesti,
                    null::varchar(120) as vene,
                    1 as level,
                    null::varchar(120) as pad,
                    null::varchar(120) as bar,
                    null::varchar(120) as keyshortcut,
                    0 as idx,
                    'active' as status`,
        query: null,
        multiple: false,
        alias: 'row',
        data: []
    }],
    grid: {
        sqlString: `select id, pad::varchar(120), bar::varchar(20), idx, name::varchar(120), eesti::varchar(120), vene::varchar(120), proc, groups, modules,users, level,message::varchar(120), keyshortcut::varchar(120), $1 as rekvid
                        from ou.cur_menu m`,
        alias: 'curMenu'
    },
    returnData: null,
    saveDoc: `select ou.sp_salvesta_menupohi($1, $2, $3) as id`, // $1 - data json, $2 - userid, $3 - rekvid,
    deleteDoc: `select error_code, result, error_message from ou.sp_delete_menupohi($1, $2)`, // $1 - userId, $2 - docId,
    requiredFields: null
};
