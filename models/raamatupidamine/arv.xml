<?xml version = "1.0" encoding="Windows-1252" standalone="yes"?>
<VFPData>
  <select>
    <sql>select d.id, $2::integer as userid, to_char(created, 'DD.MM.YYYY HH:MM:SS')::text as created, to_char(lastupdate,'DD.MM.YYYY HH:MM:SS')::text as lastupdate, d.bpm, 
                 trim(l.nimetus) as doc, trim(l.kood) as doc_type_id,
                 trim(s.nimetus) as status, d.status as doc_status,
                 trim(a.number) as number, a.summa, a.rekvId, a.liik, a.operid, to_char(a.kpv,'YYYY-MM-DD') as kpv, 
                 a.asutusid, a.arvId, trim(a.lisa) as lisa, to_char(a.tahtaeg,'YYYY-MM-DD') as tahtaeg, a.kbmta, a.kbm, a.summa, 
                 a.tasud, trim(a.tasudok) as tasudok, a.muud, a.jaak, a.objektId, trim(a.objekt) as objekt, 
                 asutus.regkood, trim(asutus.nimetus) as asutus, 
                 a.doklausid, a.doklausid,dp.selg as dokprop 
                 from docs.doc d 
                 inner join libs.library l on l.id = d.doc_type_id 
                 inner join docs.arv a on a.parentId = d.id 
                 left outer join libs.library s on s.library = 'STATUS' and s.kood = d.status::text 
                 inner join libs.asutus as asutus on asutus.id = a.asutusId 
                 inner join ou.userid u on u.id = $2::integer 
                 left outer join libs.dokprop dp on dp.id = a.doklausid 
                 where d.id = $1</sql>
    <sqlAsNew>select $1::integer as id, $2::integer as userid,  
                    to_char(now(), 'DD.MM.YYYY HH:MM:SS')::text as created, 
                    to_char(now(), 'DD.MM.YYYY HH:MM:SS')::text as lastupdate, null as bpm,
                 trim(l.nimetus) as doc, trim(l.kood) as doc_type_id, 
                 trim(s.nimetus) as status, 0 as doc_status, 
                 docs.sp_get_number(u.rekvId, 'ARV', year(date()), null) as number, 0.00 as summa, 
                 null as rekvId, 0 as liik, null as operid, to_char(now(),'YYYY-MM-DD') as kpv,
                 null as asutusid, null as arvId, null as lisa, to_char(now()  + interval '14 days','YYYY-MM-DD') as tahtaeg, null as kbmta, 0.00::numeric as kbm, null as summa,
                 null as tasud, null as tasudok, null as muud, 0.00 as jaak, null as objektId, null as objekt, 
                 null as regkood, null as asutus, null::integer as doklausid, null::text as  dokprop 
                 from libs.library l,   libs.library s, ou.userid u  
                 where l.library = 'DOK' and l.kood = 'ARV' 
                 and u.id = $2::integer 
                 and s.library = 'STATUS' and s.kood = '0'</sqlAsNew>
    <query />
    <multiple>false</multiple>
    <alias>row</alias>
  </select>
  <select>
    <sql>select a1.id, $2::integer as userid, a1.nomid, a1.kogus, a1.hind, a1.kbm, a1.kbmta, a1.summa, a1.kood1,
                 trim(n.kood) as kood, trim(n.nimetus) as nimetus 
                 from docs.arv1 as a1 
                 inner join docs.arv a on a.id = a1.parentId 
                 inner join libs.nomenklatuur n on n.id = a1.nomId 
                 inner join ou.userid u on u.id = $2::integer 
                 where a.parentid = $1::integer</sql>
    <query />
    <multiple>true</multiple>
    <alias>details</alias>
  </select>
  <select>
    <sql>select rd.id, $2::integer as userid, trim(l.kood) as doc_type, trim(l.nimetus) as name 
                 from docs.doc d 
                 left outer join docs.doc rd on rd.id in (select unnest(d.docs_ids)) 
                 left outer join libs.library l on rd.doc_type_id = l.id 
                 inner join ou.userid u on u.id = $2::integer 
                 where d.id = $1::integer</sql>
    <query />
    <multiple>true</multiple>
    <alias>relations</alias>
  </select>
  <saveDoc>
    <sql>select docs.sp_salvesta_arv($1, $2, $3) as id</sql>
    <alias>saveDoc</alias>
  </saveDoc>
  <deleteDoc>
    <sql>select error_code, result, error_message from docs.sp_delete_arv($1, $2)</sql>
    <alias>deleteDoc</alias>
  </deleteDoc>
</VFPData>
